"use strict";
// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file leaves_types.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.LeavesTypesServiceSearchAllReq = exports.LeavesTypesServiceFilterReq = exports.LeavesTypesServiceEntityPaginationReq = exports.LeavesTypesServicePaginationResponse = exports.LeavesTypesServicePaginationReq = exports.LeavesTypesList = exports.LeaveType = exports.LeavesTypesServiceUpdateRequest = exports.LeavesTypesServiceCreateRequest = exports.LEAVE_TYPE_SORT_KEY = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Genesis.LEAVE_TYPE_SORT_KEY
 */
var LEAVE_TYPE_SORT_KEY;
(function (LEAVE_TYPE_SORT_KEY) ***REMOVED***
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_ID_UNSPECIFIED"] = 0] = "LEAVE_TYPE_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_CREATED_AT = 1;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_CREATED_AT"] = 1] = "LEAVE_TYPE_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_MODIFIED_AT = 2;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_MODIFIED_AT"] = 2] = "LEAVE_TYPE_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_APPROVED_ON = 3;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_APPROVED_ON"] = 3] = "LEAVE_TYPE_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_APPROVED_BY = 4;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_APPROVED_BY"] = 4] = "LEAVE_TYPE_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "LEAVE_TYPE_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the approver's completed on timestamp
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_COMPLETED_ON = 6;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_COMPLETED_ON"] = 6] = "LEAVE_TYPE_SORT_KEY_COMPLETED_ON";
    /**
     * Fetch ordered results by the name
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_NAME = 10;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_NAME"] = 10] = "LEAVE_TYPE_SORT_KEY_NAME";
    /**
     * Fetch ordered results by the code
     *
     * @generated from enum value: LEAVE_TYPE_SORT_KEY_CODE = 11;
     */
    LEAVE_TYPE_SORT_KEY[LEAVE_TYPE_SORT_KEY["LEAVE_TYPE_SORT_KEY_CODE"] = 11] = "LEAVE_TYPE_SORT_KEY_CODE";
***REMOVED***)(LEAVE_TYPE_SORT_KEY || (exports.LEAVE_TYPE_SORT_KEY = LEAVE_TYPE_SORT_KEY = ***REMOVED******REMOVED***));
// Retrieve enum metadata with: proto3.getEnumType(LEAVE_TYPE_SORT_KEY)
protobuf_1.proto3.util.setEnumType(LEAVE_TYPE_SORT_KEY, "Genesis.LEAVE_TYPE_SORT_KEY", [
    ***REMOVED*** no: 0, name: "LEAVE_TYPE_SORT_KEY_ID_UNSPECIFIED" ***REMOVED***,
    ***REMOVED*** no: 1, name: "LEAVE_TYPE_SORT_KEY_CREATED_AT" ***REMOVED***,
    ***REMOVED*** no: 2, name: "LEAVE_TYPE_SORT_KEY_MODIFIED_AT" ***REMOVED***,
    ***REMOVED*** no: 3, name: "LEAVE_TYPE_SORT_KEY_APPROVED_ON" ***REMOVED***,
    ***REMOVED*** no: 4, name: "LEAVE_TYPE_SORT_KEY_APPROVED_BY" ***REMOVED***,
    ***REMOVED*** no: 5, name: "LEAVE_TYPE_SORT_KEY_APPROVER_ROLE_ID" ***REMOVED***,
    ***REMOVED*** no: 6, name: "LEAVE_TYPE_SORT_KEY_COMPLETED_ON" ***REMOVED***,
    ***REMOVED*** no: 10, name: "LEAVE_TYPE_SORT_KEY_NAME" ***REMOVED***,
    ***REMOVED*** no: 11, name: "LEAVE_TYPE_SORT_KEY_CODE" ***REMOVED***,
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Genesis.LeavesTypesServiceCreateRequest
 */
class LeavesTypesServiceCreateRequest extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 2;
         */
        this.userComment = "";
        /**
         * The name of the leave type
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The leave type code
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The description of the leave type
         *
         * @generated from field: string description = 12;
         */
        this.description = "";
        /**
         * The percentage of the applicable payroll on use of this leave type (in cents)
         *
         * @generated from field: int64 payroll_percentage = 13;
         */
        this.payrollPercentage = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeavesTypesServiceCreateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeavesTypesServiceCreateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeavesTypesServiceCreateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeavesTypesServiceCreateRequest, a, b);
***REMOVED***
***REMOVED***
exports.LeavesTypesServiceCreateRequest = LeavesTypesServiceCreateRequest;
LeavesTypesServiceCreateRequest.runtime = protobuf_1.proto3;
LeavesTypesServiceCreateRequest.typeName = "Genesis.LeavesTypesServiceCreateRequest";
LeavesTypesServiceCreateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "payroll_percentage", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
]);
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Genesis.LeavesTypesServiceUpdateRequest
 */
class LeavesTypesServiceUpdateRequest extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * Stores any comment that the user might add during this operation
         *
         * @generated from field: string user_comment = 1;
         */
        this.userComment = "";
        /**
         * The ID of the record that needs to be updated
         *
         * @generated from field: int64 id = 2;
         */
        this.id = protobuf_1.protoInt64.zero;
        /**
         * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
         *
         * @generated from field: bool notify_users = 3;
         */
        this.notifyUsers = false;
        /**
         * The name of the leave type
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The leave type code
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The description of the leave type
         *
         * @generated from field: string description = 12;
         */
        this.description = "";
        /**
         * The percentage of the applicable payroll on use of this leave type (in cents)
         *
         * @generated from field: int64 payroll_percentage = 13;
         */
        this.payrollPercentage = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeavesTypesServiceUpdateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeavesTypesServiceUpdateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeavesTypesServiceUpdateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeavesTypesServiceUpdateRequest, a, b);
***REMOVED***
***REMOVED***
exports.LeavesTypesServiceUpdateRequest = LeavesTypesServiceUpdateRequest;
LeavesTypesServiceUpdateRequest.runtime = protobuf_1.proto3;
LeavesTypesServiceUpdateRequest.typeName = "Genesis.LeavesTypesServiceUpdateRequest";
LeavesTypesServiceUpdateRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "payroll_percentage", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
]);
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Genesis.LeaveType
 */
class LeaveType extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * Stores a globally unique entity UUID. This will be set at the organization level
         *
         * @generated from field: string entity_uuid = 1;
         */
        this.entityUuid = "";
        /**
         * The status of this leave type
         *
         * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 4;
         */
        this.status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
        /**
         * Stores the logs of every operation performed on this leave type
         *
         * @generated from field: repeated Genesis.LogbookLogConciseSLC logs = 5;
         */
        this.logs = [];
        /**
         * The timestamp of when this leave type was marked as completed
         *
         * @generated from field: int64 completed_on = 6;
         */
        this.completedOn = protobuf_1.protoInt64.zero;
        /**
         * The name of the leave type
         *
         * @generated from field: string name = 10;
         */
        this.name = "";
        /**
         * The leave type code
         *
         * @generated from field: string code = 11;
         */
        this.code = "";
        /**
         * The description of the leave type
         *
         * @generated from field: string description = 12;
         */
        this.description = "";
        /**
         * The percentage of the applicable payroll on use of this leave type (in cents)
         *
         * @generated from field: int64 payroll_percentage = 13;
         */
        this.payrollPercentage = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeaveType().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeaveType().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeaveType().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeaveType, a, b);
***REMOVED***
***REMOVED***
exports.LeaveType = LeaveType;
LeaveType.runtime = protobuf_1.proto3;
LeaveType.typeName = "Genesis.LeaveType";
LeaveType.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "metadata", kind: "message", T: base_pb_js_1.EmployeeMetadata ***REMOVED***,
    ***REMOVED*** no: 3, name: "approval_metadata", kind: "message", T: base_pb_js_1.ApprovalMetadata ***REMOVED***,
    ***REMOVED*** no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 5, name: "logs", kind: "message", T: base_pb_js_1.LogbookLogConciseSLC, repeated: true ***REMOVED***,
    ***REMOVED*** no: 6, name: "completed_on", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "payroll_percentage", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
]);
/**
 *
 * Describes the message consisting of the list of records
 *
 * @generated from message Genesis.LeavesTypesList
 */
class LeavesTypesList extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * List of records
         *
         * @generated from field: repeated Genesis.LeaveType list = 1;
         */
        this.list = [];
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeavesTypesList().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeavesTypesList().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeavesTypesList().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeavesTypesList, a, b);
***REMOVED***
***REMOVED***
exports.LeavesTypesList = LeavesTypesList;
LeavesTypesList.runtime = protobuf_1.proto3;
LeavesTypesList.typeName = "Genesis.LeavesTypesList";
LeavesTypesList.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "list", kind: "message", T: LeaveType, repeated: true ***REMOVED***,
]);
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Genesis.LeavesTypesServicePaginationReq
 */
class LeavesTypesServicePaginationReq extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: bool is_active = 1;
         */
        this.isActive = false;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: int64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Genesis.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Genesis.LEAVE_TYPE_SORT_KEY sort_key = 5;
         */
        this.sortKey = LEAVE_TYPE_SORT_KEY.LEAVE_TYPE_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The status of this leave type
         *
         * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 6;
         */
        this.status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeavesTypesServicePaginationReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeavesTypesServicePaginationReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeavesTypesServicePaginationReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeavesTypesServicePaginationReq, a, b);
***REMOVED***
***REMOVED***
exports.LeavesTypesServicePaginationReq = LeavesTypesServicePaginationReq;
LeavesTypesServicePaginationReq.runtime = protobuf_1.proto3;
LeavesTypesServicePaginationReq.typeName = "Genesis.LeavesTypesServicePaginationReq";
LeavesTypesServicePaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(LEAVE_TYPE_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
]);
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Genesis.LeavesTypesServicePaginationResponse
 */
class LeavesTypesServicePaginationResponse extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * The number of records in this payload
         *
         * @generated from field: int64 count = 1;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
         *
         * @generated from field: int64 offset = 2;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The total number of records that are available
         *
         * @generated from field: int64 total = 3;
         */
        this.total = protobuf_1.protoInt64.zero;
        /**
         * The list of records
         *
         * @generated from field: repeated Genesis.LeaveType payload = 4;
         */
        this.payload = [];
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeavesTypesServicePaginationResponse().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeavesTypesServicePaginationResponse().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeavesTypesServicePaginationResponse().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeavesTypesServicePaginationResponse, a, b);
***REMOVED***
***REMOVED***
exports.LeavesTypesServicePaginationResponse = LeavesTypesServicePaginationResponse;
LeavesTypesServicePaginationResponse.runtime = protobuf_1.proto3;
LeavesTypesServicePaginationResponse.typeName = "Genesis.LeavesTypesServicePaginationResponse";
LeavesTypesServicePaginationResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "payload", kind: "message", T: LeaveType, repeated: true ***REMOVED***,
]);
/**
 *
 * Describes a pagination request to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.LeavesTypesServiceEntityPaginationReq
 */
class LeavesTypesServiceEntityPaginationReq extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: bool is_active = 1;
         */
        this.isActive = false;
        /**
         * The number of records that need to be sent in the response
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: int64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Genesis.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Genesis.LEAVE_TYPE_SORT_KEY sort_key = 5;
         */
        this.sortKey = LEAVE_TYPE_SORT_KEY.LEAVE_TYPE_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeavesTypesServiceEntityPaginationReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeavesTypesServiceEntityPaginationReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeavesTypesServiceEntityPaginationReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeavesTypesServiceEntityPaginationReq, a, b);
***REMOVED***
***REMOVED***
exports.LeavesTypesServiceEntityPaginationReq = LeavesTypesServiceEntityPaginationReq;
LeavesTypesServiceEntityPaginationReq.runtime = protobuf_1.proto3;
LeavesTypesServiceEntityPaginationReq.typeName = "Genesis.LeavesTypesServiceEntityPaginationReq";
LeavesTypesServiceEntityPaginationReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(LEAVE_TYPE_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
]);
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Genesis.LeavesTypesServiceFilterReq
 */
class LeavesTypesServiceFilterReq extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: bool is_active = 1;
         */
        this.isActive = false;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: int64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Genesis.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Genesis.LEAVE_TYPE_SORT_KEY sort_key = 5;
         */
        this.sortKey = LEAVE_TYPE_SORT_KEY.LEAVE_TYPE_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The minimum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: int64 creation_timestamp_start = 6;
         */
        this.creationTimestampStart = protobuf_1.protoInt64.zero;
        /**
         * The maximum timestamp that needs to be considered to filter by creation
         *
         * @generated from field: int64 creation_timestamp_end = 7;
         */
        this.creationTimestampEnd = protobuf_1.protoInt64.zero;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 8;
         */
        this.entityUuid = "";
        /**
         * The status of this leave type
         *
         * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
        /**
         * The start range of approved timestamp
         *
         * @generated from field: int64 approved_on_start = 11;
         */
        this.approvedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of approved timestamp
         *
         * @generated from field: int64 approved_on_end = 12;
         */
        this.approvedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The ID of the approver
         *
         * @generated from field: int64 approved_by_user_id = 13;
         */
        this.approvedByUserId = protobuf_1.protoInt64.zero;
        /**
         * The role ID of the approver
         *
         * @generated from field: int64 approver_role_id = 14;
         */
        this.approverRoleId = protobuf_1.protoInt64.zero;
        /**
         * The start range of completed timestamp
         *
         * @generated from field: int64 completed_on_start = 15;
         */
        this.completedOnStart = protobuf_1.protoInt64.zero;
        /**
         * The end range of completed timestamp
         *
         * @generated from field: int64 completed_on_end = 16;
         */
        this.completedOnEnd = protobuf_1.protoInt64.zero;
        /**
         * The name of the leave type
         *
         * @generated from field: string name = 20;
         */
        this.name = "";
        /**
         * The leave type code
         *
         * @generated from field: string code = 21;
         */
        this.code = "";
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeavesTypesServiceFilterReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeavesTypesServiceFilterReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeavesTypesServiceFilterReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeavesTypesServiceFilterReq, a, b);
***REMOVED***
***REMOVED***
exports.LeavesTypesServiceFilterReq = LeavesTypesServiceFilterReq;
LeavesTypesServiceFilterReq.runtime = protobuf_1.proto3;
LeavesTypesServiceFilterReq.typeName = "Genesis.LeavesTypesServiceFilterReq";
LeavesTypesServiceFilterReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(LEAVE_TYPE_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 15, name: "completed_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 16, name: "completed_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
]);
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Genesis.LeavesTypesServiceSearchAllReq
 */
class LeavesTypesServiceSearchAllReq extends protobuf_1.Message ***REMOVED***
    constructor(data) ***REMOVED***
        super();
        /**
         * If true, then returns only active records. If false, then returns only inactive records
         *
         * @generated from field: bool is_active = 1;
         */
        this.isActive = false;
        /**
         * The number of records that need to be sent in the response. Returns all records if it is set to -1
         *
         * @generated from field: int64 count = 2;
         */
        this.count = protobuf_1.protoInt64.zero;
        /**
         * The number that need to be offset by before fetching the records
         *
         * @generated from field: int64 offset = 3;
         */
        this.offset = protobuf_1.protoInt64.zero;
        /**
         * The sort order that is to be used to fetch the pagination response
         *
         * @generated from field: Genesis.SORT_ORDER sort_order = 4;
         */
        this.sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
        /**
         * The sort key that is to be used to fetch the pagination response
         *
         * @generated from field: Genesis.LEAVE_TYPE_SORT_KEY sort_key = 5;
         */
        this.sortKey = LEAVE_TYPE_SORT_KEY.LEAVE_TYPE_SORT_KEY_ID_UNSPECIFIED;
        /**
         * The entity UUID that is to be used to filter records
         *
         * @generated from field: string entity_uuid = 6;
         */
        this.entityUuid = "";
        /**
         * Limit the search space to the given status
         *
         * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
         */
        this.status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
        /**
         * Describes the key with which the search operation needs to be performed
         *
         * @generated from field: string search_key = 11;
         */
        this.searchKey = "";
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static fromBinary(bytes, options) ***REMOVED***
        return new LeavesTypesServiceSearchAllReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new LeavesTypesServiceSearchAllReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new LeavesTypesServiceSearchAllReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(LeavesTypesServiceSearchAllReq, a, b);
***REMOVED***
***REMOVED***
exports.LeavesTypesServiceSearchAllReq = LeavesTypesServiceSearchAllReq;
LeavesTypesServiceSearchAllReq.runtime = protobuf_1.proto3;
LeavesTypesServiceSearchAllReq.typeName = "Genesis.LeavesTypesServiceSearchAllReq";
LeavesTypesServiceSearchAllReq.fields = protobuf_1.proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(LEAVE_TYPE_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
]);
