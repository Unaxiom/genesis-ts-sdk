"use strict";
// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file roles.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.RolesServiceSearchAllReq = exports.RolesServiceFilterReq = exports.RolesServiceEntityPaginationReq = exports.RolesServicePaginationResponse = exports.RolesServicePaginationReq = exports.RolesList = exports.RoleAccess = exports.RolesServiceAccessCreateAndUpdateRequest = exports.Role = exports.RolesServiceUpdateRequest = exports.RolesServiceCreateRequest = exports.ROLE_SORT_KEY = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Genesis.ROLE_SORT_KEY
 */
var ROLE_SORT_KEY;
(function (ROLE_SORT_KEY) ***REMOVED***
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: ROLE_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_ID_UNSPECIFIED"] = 0] = "ROLE_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: ROLE_SORT_KEY_CREATED_AT = 1;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_CREATED_AT"] = 1] = "ROLE_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: ROLE_SORT_KEY_MODIFIED_AT = 2;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_MODIFIED_AT"] = 2] = "ROLE_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: ROLE_SORT_KEY_APPROVED_ON = 3;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_APPROVED_ON"] = 3] = "ROLE_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: ROLE_SORT_KEY_APPROVED_BY = 4;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_APPROVED_BY"] = 4] = "ROLE_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: ROLE_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "ROLE_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the approver's completed on timestamp
     *
     * @generated from enum value: ROLE_SORT_KEY_COMPLETED_ON = 6;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_COMPLETED_ON"] = 6] = "ROLE_SORT_KEY_COMPLETED_ON";
    /**
     * Fetch ordered results by the name
     *
     * @generated from enum value: ROLE_SORT_KEY_NAME = 10;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_NAME"] = 10] = "ROLE_SORT_KEY_NAME";
    /**
     * Fetch ordered results by the code
     *
     * @generated from enum value: ROLE_SORT_KEY_CODE = 11;
     */
    ROLE_SORT_KEY[ROLE_SORT_KEY["ROLE_SORT_KEY_CODE"] = 11] = "ROLE_SORT_KEY_CODE";
***REMOVED***)(ROLE_SORT_KEY || (exports.ROLE_SORT_KEY = ROLE_SORT_KEY = ***REMOVED******REMOVED***));
// Retrieve enum metadata with: proto3.getEnumType(ROLE_SORT_KEY)
protobuf_1.proto3.util.setEnumType(ROLE_SORT_KEY, "Genesis.ROLE_SORT_KEY", [
    ***REMOVED*** no: 0, name: "ROLE_SORT_KEY_ID_UNSPECIFIED" ***REMOVED***,
    ***REMOVED*** no: 1, name: "ROLE_SORT_KEY_CREATED_AT" ***REMOVED***,
    ***REMOVED*** no: 2, name: "ROLE_SORT_KEY_MODIFIED_AT" ***REMOVED***,
    ***REMOVED*** no: 3, name: "ROLE_SORT_KEY_APPROVED_ON" ***REMOVED***,
    ***REMOVED*** no: 4, name: "ROLE_SORT_KEY_APPROVED_BY" ***REMOVED***,
    ***REMOVED*** no: 5, name: "ROLE_SORT_KEY_APPROVER_ROLE_ID" ***REMOVED***,
    ***REMOVED*** no: 6, name: "ROLE_SORT_KEY_COMPLETED_ON" ***REMOVED***,
    ***REMOVED*** no: 10, name: "ROLE_SORT_KEY_NAME" ***REMOVED***,
    ***REMOVED*** no: 11, name: "ROLE_SORT_KEY_CODE" ***REMOVED***,
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Genesis.RolesServiceCreateRequest
 */
class RolesServiceCreateRequest extends protobuf_1.Message ***REMOVED***
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 2;
     */
    userComment = "";
    /**
     * The name of the role
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * The code of the role
     *
     * @generated from field: string code = 11;
     */
    code = "";
    /**
     * The description of the role
     *
     * @generated from field: string description = 12;
     */
    description = "";
    /**
     * Stores if this role has access to Vault
     *
     * @generated from field: bool vault_access = 13;
     */
    vaultAccess = false;
    /**
     * Stores if the role has access to perform operations on the root folder in Vault
     *
     * @generated from field: bool vault_root_folder_interactions = 14;
     */
    vaultRootFolderInteractions = false;
    /**
     * Stores if the role has access via HTTP (or within local network)
     *
     * @generated from field: bool http_access = 15;
     */
    httpAccess = false;
    /**
     * Stores if the role has access via HTTPS (or through a public FQDN)
     *
     * @generated from field: bool https_access = 16;
     */
    httpsAccess = false;
    /**
     * The list of accessible menu UIDs
     *
     * @generated from field: repeated Genesis.RolesServiceAccessCreateAndUpdateRequest access_list = 20;
     */
    accessList = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesServiceCreateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "vault_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 14, name: "vault_root_folder_interactions", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "http_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 16, name: "https_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 20, name: "access_list", kind: "message", T: RolesServiceAccessCreateAndUpdateRequest, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesServiceCreateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesServiceCreateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesServiceCreateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesServiceCreateRequest, a, b);
***REMOVED***
***REMOVED***
exports.RolesServiceCreateRequest = RolesServiceCreateRequest;
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Genesis.RolesServiceUpdateRequest
 */
class RolesServiceUpdateRequest extends protobuf_1.Message ***REMOVED***
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The ID of the record that needs to be updated
     *
     * @generated from field: int64 id = 2;
     */
    id = protobuf_1.protoInt64.zero;
    /**
     * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
     *
     * @generated from field: bool notify_users = 3;
     */
    notifyUsers = false;
    /**
     * The name of the role
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * The code of the role
     *
     * @generated from field: string code = 11;
     */
    code = "";
    /**
     * The description of the role
     *
     * @generated from field: string description = 12;
     */
    description = "";
    /**
     * Stores if this role has access to Vault
     *
     * @generated from field: bool vault_access = 13;
     */
    vaultAccess = false;
    /**
     * Stores if the role has access to perform operations on the root folder in Vault
     *
     * @generated from field: bool vault_root_folder_interactions = 14;
     */
    vaultRootFolderInteractions = false;
    /**
     * Stores if the role has access via HTTP (or within local network)
     *
     * @generated from field: bool http_access = 15;
     */
    httpAccess = false;
    /**
     * Stores if the role has access via HTTPS (or through a public FQDN)
     *
     * @generated from field: bool https_access = 16;
     */
    httpsAccess = false;
    /**
     * The list of accessible menu UIDs
     *
     * @generated from field: repeated Genesis.RolesServiceAccessCreateAndUpdateRequest access_list = 20;
     */
    accessList = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesServiceUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "vault_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 14, name: "vault_root_folder_interactions", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "http_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 16, name: "https_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 20, name: "access_list", kind: "message", T: RolesServiceAccessCreateAndUpdateRequest, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesServiceUpdateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesServiceUpdateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesServiceUpdateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesServiceUpdateRequest, a, b);
***REMOVED***
***REMOVED***
exports.RolesServiceUpdateRequest = RolesServiceUpdateRequest;
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Genesis.Role
 */
class Role extends protobuf_1.Message ***REMOVED***
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores the metadata of this role
     *
     * @generated from field: Genesis.EmployeeMetadata metadata = 2;
     */
    metadata;
    /**
     * Stores the approval metadata
     *
     * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
     */
    approvalMetadata;
    /**
     * The status of this role
     *
     * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 4;
     */
    status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
    /**
     * Stores the logs of every operation performed on this role
     *
     * @generated from field: repeated Genesis.LogbookLogConciseSLC logs = 5;
     */
    logs = [];
    /**
     * The timestamp of when this role was marked as completed
     *
     * @generated from field: int64 completed_on = 6;
     */
    completedOn = protobuf_1.protoInt64.zero;
    /**
     * The name of the role
     *
     * @generated from field: string name = 10;
     */
    name = "";
    /**
     * The code of the role
     *
     * @generated from field: string code = 11;
     */
    code = "";
    /**
     * The description of the role
     *
     * @generated from field: string description = 12;
     */
    description = "";
    /**
     * Stores if this role has access to Vault
     *
     * @generated from field: bool vault_access = 13;
     */
    vaultAccess = false;
    /**
     * Stores if the role has access to perform operations on the root folder in Vault
     *
     * @generated from field: bool vault_root_folder_interactions = 14;
     */
    vaultRootFolderInteractions = false;
    /**
     * Stores if the role has access via HTTP (or within local network)
     *
     * @generated from field: bool http_access = 15;
     */
    httpAccess = false;
    /**
     * Stores if the role has access via HTTPS (or through a public FQDN)
     *
     * @generated from field: bool https_access = 16;
     */
    httpsAccess = false;
    /**
     * The list of associated role accesses
     *
     * @generated from field: repeated Genesis.RoleAccess access_list = 20;
     */
    accessList = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.Role";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "metadata", kind: "message", T: base_pb_js_1.EmployeeMetadata ***REMOVED***,
        ***REMOVED*** no: 3, name: "approval_metadata", kind: "message", T: base_pb_js_1.ApprovalMetadata ***REMOVED***,
        ***REMOVED*** no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
        ***REMOVED*** no: 5, name: "logs", kind: "message", T: base_pb_js_1.LogbookLogConciseSLC, repeated: true ***REMOVED***,
        ***REMOVED*** no: 6, name: "completed_on", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "vault_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 14, name: "vault_root_folder_interactions", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "http_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 16, name: "https_access", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 20, name: "access_list", kind: "message", T: RoleAccess, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new Role().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new Role().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new Role().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(Role, a, b);
***REMOVED***
***REMOVED***
exports.Role = Role;
/**
 *
 * Describes the necessary data structure during creation/updation of a role access
 *
 * @generated from message Genesis.RolesServiceAccessCreateAndUpdateRequest
 */
class RolesServiceAccessCreateAndUpdateRequest extends protobuf_1.Message ***REMOVED***
    /**
     * The menu UID (or internal code)
     *
     * @generated from field: string menu_uid = 11;
     */
    menuUid = "";
    /**
     * Denotes if the menu is accessible
     *
     * @generated from field: bool is_accessible = 12;
     */
    isAccessible = false;
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesServiceAccessCreateAndUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 11, name: "menu_uid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "is_accessible", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesServiceAccessCreateAndUpdateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesServiceAccessCreateAndUpdateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesServiceAccessCreateAndUpdateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesServiceAccessCreateAndUpdateRequest, a, b);
***REMOVED***
***REMOVED***
exports.RolesServiceAccessCreateAndUpdateRequest = RolesServiceAccessCreateAndUpdateRequest;
/**
 *
 * Describes the data structure of each role access on the platform
 *
 * @generated from message Genesis.RoleAccess
 */
class RoleAccess extends protobuf_1.Message ***REMOVED***
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores the metadata of this team
     *
     * @generated from field: Genesis.EmployeeMetadata metadata = 2;
     */
    metadata;
    /**
     * Stores the approval metadata
     *
     * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
     */
    approvalMetadata;
    /**
     * Denotes if this record requires approval (or has been approved)
     *
     * @generated from field: bool need_approval = 4;
     */
    needApproval = false;
    /**
     * The associated Role ID
     *
     * @generated from field: int64 role_id = 10;
     */
    roleId = protobuf_1.protoInt64.zero;
    /**
     * The menu UID (or internal code)
     *
     * @generated from field: string menu_uid = 11;
     */
    menuUid = "";
    /**
     * Denotes if the menu is accessible
     *
     * @generated from field: bool is_accessible = 12;
     */
    isAccessible = false;
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RoleAccess";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "metadata", kind: "message", T: base_pb_js_1.EmployeeMetadata ***REMOVED***,
        ***REMOVED*** no: 3, name: "approval_metadata", kind: "message", T: base_pb_js_1.ApprovalMetadata ***REMOVED***,
        ***REMOVED*** no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "menu_uid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "is_accessible", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RoleAccess().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RoleAccess().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RoleAccess().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RoleAccess, a, b);
***REMOVED***
***REMOVED***
exports.RoleAccess = RoleAccess;
/**
 *
 * Describes the message consisting of the list of roles
 *
 * @generated from message Genesis.RolesList
 */
class RolesList extends protobuf_1.Message ***REMOVED***
    /**
     * List of records
     *
     * @generated from field: repeated Genesis.Role list = 1;
     */
    list = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "list", kind: "message", T: Role, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesList().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesList().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesList().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesList, a, b);
***REMOVED***
***REMOVED***
exports.RolesList = RolesList;
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Genesis.RolesServicePaginationReq
 */
class RolesServicePaginationReq extends protobuf_1.Message ***REMOVED***
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.ROLE_SORT_KEY sort_key = 5;
     */
    sortKey = ROLE_SORT_KEY.ROLE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The status of this role
     *
     * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 6;
     */
    status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesServicePaginationReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
        ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ROLE_SORT_KEY) ***REMOVED***,
        ***REMOVED*** no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesServicePaginationReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesServicePaginationReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesServicePaginationReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesServicePaginationReq, a, b);
***REMOVED***
***REMOVED***
exports.RolesServicePaginationReq = RolesServicePaginationReq;
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Genesis.RolesServicePaginationResponse
 */
class RolesServicePaginationResponse extends protobuf_1.Message ***REMOVED***
    /**
     * The number of records in this payload
     *
     * @generated from field: int64 count = 1;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
     *
     * @generated from field: int64 offset = 2;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The total number of records that are available
     *
     * @generated from field: int64 total = 3;
     */
    total = protobuf_1.protoInt64.zero;
    /**
     * The list of records
     *
     * @generated from field: repeated Genesis.Role payload = 4;
     */
    payload = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesServicePaginationResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "payload", kind: "message", T: Role, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesServicePaginationResponse().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesServicePaginationResponse().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesServicePaginationResponse().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesServicePaginationResponse, a, b);
***REMOVED***
***REMOVED***
exports.RolesServicePaginationResponse = RolesServicePaginationResponse;
/**
 *
 * Describes a pagination request to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.RolesServiceEntityPaginationReq
 */
class RolesServiceEntityPaginationReq extends protobuf_1.Message ***REMOVED***
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.ROLE_SORT_KEY sort_key = 5;
     */
    sortKey = ROLE_SORT_KEY.ROLE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 6;
     */
    entityUuid = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesServiceEntityPaginationReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
        ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ROLE_SORT_KEY) ***REMOVED***,
        ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesServiceEntityPaginationReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesServiceEntityPaginationReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesServiceEntityPaginationReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesServiceEntityPaginationReq, a, b);
***REMOVED***
***REMOVED***
exports.RolesServiceEntityPaginationReq = RolesServiceEntityPaginationReq;
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Genesis.RolesServiceFilterReq
 */
class RolesServiceFilterReq extends protobuf_1.Message ***REMOVED***
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.ROLE_SORT_KEY sort_key = 5;
     */
    sortKey = ROLE_SORT_KEY.ROLE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The minimum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: int64 creation_timestamp_start = 6;
     */
    creationTimestampStart = protobuf_1.protoInt64.zero;
    /**
     * The maximum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: int64 creation_timestamp_end = 7;
     */
    creationTimestampEnd = protobuf_1.protoInt64.zero;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 8;
     */
    entityUuid = "";
    /**
     * The status of this role
     *
     * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
     */
    status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
    /**
     * The start range of approved timestamp
     *
     * @generated from field: int64 approved_on_start = 11;
     */
    approvedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of approved timestamp
     *
     * @generated from field: int64 approved_on_end = 12;
     */
    approvedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The ID of the approver
     *
     * @generated from field: int64 approved_by_user_id = 13;
     */
    approvedByUserId = protobuf_1.protoInt64.zero;
    /**
     * The role ID of the approver
     *
     * @generated from field: int64 approver_role_id = 14;
     */
    approverRoleId = protobuf_1.protoInt64.zero;
    /**
     * The start range of completed timestamp
     *
     * @generated from field: int64 completed_on_start = 15;
     */
    completedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of completed timestamp
     *
     * @generated from field: int64 completed_on_end = 16;
     */
    completedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The name of the role
     *
     * @generated from field: string name = 20;
     */
    name = "";
    /**
     * The name of the code
     *
     * @generated from field: string code = 21;
     */
    code = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesServiceFilterReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
        ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ROLE_SORT_KEY) ***REMOVED***,
        ***REMOVED*** no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
        ***REMOVED*** no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "completed_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 16, name: "completed_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 21, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesServiceFilterReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesServiceFilterReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesServiceFilterReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesServiceFilterReq, a, b);
***REMOVED***
***REMOVED***
exports.RolesServiceFilterReq = RolesServiceFilterReq;
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Genesis.RolesServiceSearchAllReq
 */
class RolesServiceSearchAllReq extends protobuf_1.Message ***REMOVED***
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.ROLE_SORT_KEY sort_key = 5;
     */
    sortKey = ROLE_SORT_KEY.ROLE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 6;
     */
    entityUuid = "";
    /**
     * Limit the search space to the given status
     *
     * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
     */
    status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
    /**
     * Describes the key with which the search operation needs to be performed
     *
     * @generated from field: string search_key = 11;
     */
    searchKey = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.RolesServiceSearchAllReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
        ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(ROLE_SORT_KEY) ***REMOVED***,
        ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
        ***REMOVED*** no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new RolesServiceSearchAllReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new RolesServiceSearchAllReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new RolesServiceSearchAllReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(RolesServiceSearchAllReq, a, b);
***REMOVED***
***REMOVED***
exports.RolesServiceSearchAllReq = RolesServiceSearchAllReq;
