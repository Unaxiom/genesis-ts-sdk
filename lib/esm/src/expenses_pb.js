"use strict";
// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file expenses.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", ***REMOVED*** value: true ***REMOVED***);
exports.ExpensesServiceSearchAllReq = exports.ExpensesServiceFilterReq = exports.ExpensesServiceEntityPaginationReq = exports.ExpensesServicePaginationResponse = exports.ExpensesServicePaginationReq = exports.ExpenseItemHistoryRequest = exports.ExpensesItemsList = exports.ExpensesList = exports.ExpenseItem = exports.ExpensesServiceItemUpdateRequest = exports.ExpensesServiceItemCreateRequest = exports.Expense = exports.ExpensesServiceUpdateRequest = exports.ExpensesServiceCreateRequest = exports.EXPENSE_SORT_KEY = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const forms_pb_js_1 = require("./forms_pb.js");
const base_pb_js_1 = require("./base_pb.js");
/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Genesis.EXPENSE_SORT_KEY
 */
var EXPENSE_SORT_KEY;
(function (EXPENSE_SORT_KEY) ***REMOVED***
    /**
     * Fetch ordered results by id
     *
     * @generated from enum value: EXPENSE_SORT_KEY_ID_UNSPECIFIED = 0;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_ID_UNSPECIFIED"] = 0] = "EXPENSE_SORT_KEY_ID_UNSPECIFIED";
    /**
     * Fetch ordered results by the creation timestamp
     *
     * @generated from enum value: EXPENSE_SORT_KEY_CREATED_AT = 1;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_CREATED_AT"] = 1] = "EXPENSE_SORT_KEY_CREATED_AT";
    /**
     * Fetch ordered results by the modified timestamp
     *
     * @generated from enum value: EXPENSE_SORT_KEY_MODIFIED_AT = 2;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_MODIFIED_AT"] = 2] = "EXPENSE_SORT_KEY_MODIFIED_AT";
    /**
     * Fetch ordered results by the approved on timestamp
     *
     * @generated from enum value: EXPENSE_SORT_KEY_APPROVED_ON = 3;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_APPROVED_ON"] = 3] = "EXPENSE_SORT_KEY_APPROVED_ON";
    /**
     * Fetch ordered results by the approved by field
     *
     * @generated from enum value: EXPENSE_SORT_KEY_APPROVED_BY = 4;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_APPROVED_BY"] = 4] = "EXPENSE_SORT_KEY_APPROVED_BY";
    /**
     * Fetch ordered results by the approver's role ID
     *
     * @generated from enum value: EXPENSE_SORT_KEY_APPROVER_ROLE_ID = 5;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_APPROVER_ROLE_ID"] = 5] = "EXPENSE_SORT_KEY_APPROVER_ROLE_ID";
    /**
     * Fetch ordered results by the approver's completed on timestamp
     *
     * @generated from enum value: EXPENSE_SORT_KEY_COMPLETED_ON = 6;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_COMPLETED_ON"] = 6] = "EXPENSE_SORT_KEY_COMPLETED_ON";
    /**
     * Fetch ordered results by the reference ID
     *
     * @generated from enum value: EXPENSE_SORT_KEY_REFERENCE_ID = 10;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_REFERENCE_ID"] = 10] = "EXPENSE_SORT_KEY_REFERENCE_ID";
    /**
     * Fetch ordered results by the final ref number
     *
     * @generated from enum value: EXPENSE_SORT_KEY_FINAL_REF_NUMBER = 11;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_FINAL_REF_NUMBER"] = 11] = "EXPENSE_SORT_KEY_FINAL_REF_NUMBER";
    /**
     * Fetch ordered results by the currency ID
     *
     * @generated from enum value: EXPENSE_SORT_KEY_CURRENCY_ID = 12;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_CURRENCY_ID"] = 12] = "EXPENSE_SORT_KEY_CURRENCY_ID";
    /**
     * Fetch ordered results by the user ID who paid for the expense
     *
     * @generated from enum value: EXPENSE_SORT_KEY_PAID_BY_USER_ID = 13;
     */
    EXPENSE_SORT_KEY[EXPENSE_SORT_KEY["EXPENSE_SORT_KEY_PAID_BY_USER_ID"] = 13] = "EXPENSE_SORT_KEY_PAID_BY_USER_ID";
***REMOVED***)(EXPENSE_SORT_KEY || (exports.EXPENSE_SORT_KEY = EXPENSE_SORT_KEY = ***REMOVED******REMOVED***));
// Retrieve enum metadata with: proto3.getEnumType(EXPENSE_SORT_KEY)
protobuf_1.proto3.util.setEnumType(EXPENSE_SORT_KEY, "Genesis.EXPENSE_SORT_KEY", [
    ***REMOVED*** no: 0, name: "EXPENSE_SORT_KEY_ID_UNSPECIFIED" ***REMOVED***,
    ***REMOVED*** no: 1, name: "EXPENSE_SORT_KEY_CREATED_AT" ***REMOVED***,
    ***REMOVED*** no: 2, name: "EXPENSE_SORT_KEY_MODIFIED_AT" ***REMOVED***,
    ***REMOVED*** no: 3, name: "EXPENSE_SORT_KEY_APPROVED_ON" ***REMOVED***,
    ***REMOVED*** no: 4, name: "EXPENSE_SORT_KEY_APPROVED_BY" ***REMOVED***,
    ***REMOVED*** no: 5, name: "EXPENSE_SORT_KEY_APPROVER_ROLE_ID" ***REMOVED***,
    ***REMOVED*** no: 6, name: "EXPENSE_SORT_KEY_COMPLETED_ON" ***REMOVED***,
    ***REMOVED*** no: 10, name: "EXPENSE_SORT_KEY_REFERENCE_ID" ***REMOVED***,
    ***REMOVED*** no: 11, name: "EXPENSE_SORT_KEY_FINAL_REF_NUMBER" ***REMOVED***,
    ***REMOVED*** no: 12, name: "EXPENSE_SORT_KEY_CURRENCY_ID" ***REMOVED***,
    ***REMOVED*** no: 13, name: "EXPENSE_SORT_KEY_PAID_BY_USER_ID" ***REMOVED***,
]);
/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Genesis.ExpensesServiceCreateRequest
 */
class ExpensesServiceCreateRequest extends protobuf_1.Message ***REMOVED***
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 2;
     */
    userComment = "";
    /**
     * The associated project ID
     *
     * @generated from field: int64 project_id = 8;
     */
    projectId = protobuf_1.protoInt64.zero;
    /**
     * The associated vault folder ID
     *
     * @generated from field: int64 vault_folder_id = 9;
     */
    vaultFolderId = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the expense
     *
     * @generated from field: string reference_id = 10;
     */
    referenceId = "";
    /**
     * The reference on which the expense has been created
     *
     * @generated from field: string ref_from = 12;
     */
    refFrom = "";
    /**
     * The ID of the associated reference (can be 0 in case ref_from is "not-applicable")
     *
     * @generated from field: int64 ref_id = 13;
     */
    refId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the associated currency
     *
     * @generated from field: int64 currency_id = 14;
     */
    currencyId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the user who paid for this expense (if paid by organization, then this will be 0)
     *
     * @generated from field: int64 paid_by_user_id = 15;
     */
    paidByUserId = protobuf_1.protoInt64.zero;
    /**
     * The list of dynamic forms
     *
     * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
     */
    formData = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServiceCreateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 8, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 14, name: "currency_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "paid_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 30, name: "form_data", kind: "message", T: forms_pb_js_1.FormFieldDatumCreateRequest, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServiceCreateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServiceCreateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServiceCreateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServiceCreateRequest, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServiceCreateRequest = ExpensesServiceCreateRequest;
/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Genesis.ExpensesServiceUpdateRequest
 */
class ExpensesServiceUpdateRequest extends protobuf_1.Message ***REMOVED***
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The ID of the record that needs to be updated
     *
     * @generated from field: int64 id = 2;
     */
    id = protobuf_1.protoInt64.zero;
    /**
     * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
     *
     * @generated from field: bool notify_users = 3;
     */
    notifyUsers = false;
    /**
     * The associated project ID
     *
     * @generated from field: int64 project_id = 8;
     */
    projectId = protobuf_1.protoInt64.zero;
    /**
     * The associated vault folder ID
     *
     * @generated from field: int64 vault_folder_id = 9;
     */
    vaultFolderId = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the expense
     *
     * @generated from field: string reference_id = 10;
     */
    referenceId = "";
    /**
     * The reference on which the expense has been created
     *
     * @generated from field: string ref_from = 12;
     */
    refFrom = "";
    /**
     * The ID of the associated reference (can be 0 in case ref_from is "not-applicable")
     *
     * @generated from field: int64 ref_id = 13;
     */
    refId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the associated currency
     *
     * @generated from field: int64 currency_id = 14;
     */
    currencyId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the user who paid for this expense (if paid by organization, then this will be 0)
     *
     * @generated from field: int64 paid_by_user_id = 15;
     */
    paidByUserId = protobuf_1.protoInt64.zero;
    /**
     * The list of dynamic forms
     *
     * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
     */
    formData = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServiceUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 8, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 14, name: "currency_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "paid_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 30, name: "form_data", kind: "message", T: forms_pb_js_1.FormFieldDatumCreateRequest, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServiceUpdateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServiceUpdateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServiceUpdateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServiceUpdateRequest, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServiceUpdateRequest = ExpensesServiceUpdateRequest;
/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Genesis.Expense
 */
class Expense extends protobuf_1.Message ***REMOVED***
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores the metadata of this expense
     *
     * @generated from field: Genesis.EmployeeMetadata metadata = 2;
     */
    metadata;
    /**
     * Stores the approval metadata
     *
     * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
     */
    approvalMetadata;
    /**
     * The status of this expense
     *
     * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 4;
     */
    status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
    /**
     * Stores the logs of every operation performed on this expense
     *
     * @generated from field: repeated Genesis.LogbookLogConciseSLC logs = 5;
     */
    logs = [];
    /**
     * The timestamp of when this expense was marked as completed
     *
     * @generated from field: int64 completed_on = 6;
     */
    completedOn = protobuf_1.protoInt64.zero;
    /**
     * The associated project ID
     *
     * @generated from field: int64 project_id = 8;
     */
    projectId = protobuf_1.protoInt64.zero;
    /**
     * The associated vault folder ID
     *
     * @generated from field: int64 vault_folder_id = 9;
     */
    vaultFolderId = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the expense
     *
     * @generated from field: string reference_id = 10;
     */
    referenceId = "";
    /**
     * The unique reference number that has been automatically generated
     *
     * @generated from field: string final_ref_number = 11;
     */
    finalRefNumber = "";
    /**
     * The reference on which the expense has been created
     *
     * @generated from field: string ref_from = 12;
     */
    refFrom = "";
    /**
     * The ID of the associated reference (can be 0 in case ref_from is "not-applicable")
     *
     * @generated from field: int64 ref_id = 13;
     */
    refId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the associated currency
     *
     * @generated from field: int64 currency_id = 14;
     */
    currencyId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the user who paid for this expense (if paid by organization, then this will be 0)
     *
     * @generated from field: int64 paid_by_user_id = 15;
     */
    paidByUserId = protobuf_1.protoInt64.zero;
    /**
     * The list of associated expense items
     *
     * @generated from field: repeated Genesis.ExpenseItem list = 20;
     */
    list = [];
    /**
     * The list of dynamic forms
     *
     * @generated from field: repeated Genesis.FormFieldDatum form_data = 30;
     */
    formData = [];
    /**
     * The total amount of the expense
     *
     * @generated from field: double total_amount = 40;
     */
    totalAmount = 0;
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.Expense";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "metadata", kind: "message", T: base_pb_js_1.EmployeeMetadata ***REMOVED***,
        ***REMOVED*** no: 3, name: "approval_metadata", kind: "message", T: base_pb_js_1.ApprovalMetadata ***REMOVED***,
        ***REMOVED*** no: 4, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
        ***REMOVED*** no: 5, name: "logs", kind: "message", T: base_pb_js_1.LogbookLogConciseSLC, repeated: true ***REMOVED***,
        ***REMOVED*** no: 6, name: "completed_on", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 8, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 14, name: "currency_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "paid_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 20, name: "list", kind: "message", T: ExpenseItem, repeated: true ***REMOVED***,
        ***REMOVED*** no: 30, name: "form_data", kind: "message", T: forms_pb_js_1.FormFieldDatum, repeated: true ***REMOVED***,
        ***REMOVED*** no: 40, name: "total_amount", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new Expense().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new Expense().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new Expense().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(Expense, a, b);
***REMOVED***
***REMOVED***
exports.Expense = Expense;
/**
 *
 * Describes the parameters required to add an item to a expense
 *
 * @generated from message Genesis.ExpensesServiceItemCreateRequest
 */
class ExpensesServiceItemCreateRequest extends protobuf_1.Message ***REMOVED***
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * Stores the expense ID
     *
     * @generated from field: int64 expense_id = 10;
     */
    expenseId = protobuf_1.protoInt64.zero;
    /**
     * Stores the name of the item
     *
     * @generated from field: string name = 11;
     */
    name = "";
    /**
     * The associated bill number
     *
     * @generated from field: string bill_no = 12;
     */
    billNo = "";
    /**
     * The description of the item
     *
     * @generated from field: string description = 13;
     */
    description = "";
    /**
     * The ID of the associated ledger account (can be 0 temporarily)
     *
     * @generated from field: int64 ledger_id = 15;
     */
    ledgerId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the associated tax group
     *
     * @generated from field: int64 tax_group_id = 16;
     */
    taxGroupId = protobuf_1.protoInt64.zero;
    /**
     * The total amount of this item (in cents)
     *
     * @generated from field: int64 amount = 17;
     */
    amount = protobuf_1.protoInt64.zero;
    /**
     * The date on which this expense was incurred
     *
     * @generated from field: string date_of_expense = 18;
     */
    dateOfExpense = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServiceItemCreateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "expense_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "bill_no", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "ledger_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 16, name: "tax_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 17, name: "amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 18, name: "date_of_expense", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServiceItemCreateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServiceItemCreateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServiceItemCreateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServiceItemCreateRequest, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServiceItemCreateRequest = ExpensesServiceItemCreateRequest;
/**
 *
 * Describes the parameters required to update an item in a expense
 *
 * @generated from message Genesis.ExpensesServiceItemUpdateRequest
 */
class ExpensesServiceItemUpdateRequest extends protobuf_1.Message ***REMOVED***
    /**
     * Stores any comment that the user might add during this operation
     *
     * @generated from field: string user_comment = 1;
     */
    userComment = "";
    /**
     * The ID of the record
     *
     * @generated from field: int64 id = 2;
     */
    id = protobuf_1.protoInt64.zero;
    /**
     * Stores the name of the item
     *
     * @generated from field: string name = 11;
     */
    name = "";
    /**
     * The associated bill number
     *
     * @generated from field: string bill_no = 12;
     */
    billNo = "";
    /**
     * The description of the item
     *
     * @generated from field: string description = 13;
     */
    description = "";
    /**
     * The ID of the associated ledger account (can be 0 temporarily)
     *
     * @generated from field: int64 ledger_id = 15;
     */
    ledgerId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the associated tax group
     *
     * @generated from field: int64 tax_group_id = 16;
     */
    taxGroupId = protobuf_1.protoInt64.zero;
    /**
     * The total amount of this item (in cents)
     *
     * @generated from field: int64 amount = 17;
     */
    amount = protobuf_1.protoInt64.zero;
    /**
     * The date on which this expense was incurred
     *
     * @generated from field: string date_of_expense = 18;
     */
    dateOfExpense = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServiceItemUpdateRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "bill_no", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "ledger_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 16, name: "tax_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 17, name: "amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 18, name: "date_of_expense", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServiceItemUpdateRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServiceItemUpdateRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServiceItemUpdateRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServiceItemUpdateRequest, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServiceItemUpdateRequest = ExpensesServiceItemUpdateRequest;
/**
 *
 * Describes the parameters that constitute an item associated to a expense
 *
 * @generated from message Genesis.ExpenseItem
 */
class ExpenseItem extends protobuf_1.Message ***REMOVED***
    /**
     * Stores a globally unique entity UUID. This will be set at the organization level
     *
     * @generated from field: string entity_uuid = 1;
     */
    entityUuid = "";
    /**
     * Stores the metadata of this expense
     *
     * @generated from field: Genesis.EmployeeMetadata metadata = 2;
     */
    metadata;
    /**
     * Stores the approval metadata
     *
     * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
     */
    approvalMetadata;
    /**
     * Denotes if this record requires approval (or has been approved)
     *
     * @generated from field: bool need_approval = 4;
     */
    needApproval = false;
    /**
     * Stores any comment that the user might have added during an operation
     *
     * @generated from field: string user_comment = 5;
     */
    userComment = "";
    /**
     * Stores the expense ID
     *
     * @generated from field: int64 expense_id = 10;
     */
    expenseId = protobuf_1.protoInt64.zero;
    /**
     * Stores the name of the item
     *
     * @generated from field: string name = 11;
     */
    name = "";
    /**
     * The associated bill number
     *
     * @generated from field: string bill_no = 12;
     */
    billNo = "";
    /**
     * The description of the item
     *
     * @generated from field: string description = 13;
     */
    description = "";
    /**
     * The ID of the associated ledger account (can be 0 temporarily)
     *
     * @generated from field: int64 ledger_id = 15;
     */
    ledgerId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the associated tax group
     *
     * @generated from field: int64 tax_group_id = 16;
     */
    taxGroupId = protobuf_1.protoInt64.zero;
    /**
     * The total amount of this item (in cents)
     *
     * @generated from field: int64 amount = 17;
     */
    amount = protobuf_1.protoInt64.zero;
    /**
     * The date on which this expense was incurred
     *
     * @generated from field: string date_of_expense = 18;
     */
    dateOfExpense = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpenseItem";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "metadata", kind: "message", T: base_pb_js_1.EmployeeMetadata ***REMOVED***,
        ***REMOVED*** no: 3, name: "approval_metadata", kind: "message", T: base_pb_js_1.ApprovalMetadata ***REMOVED***,
        ***REMOVED*** no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "expense_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "bill_no", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "ledger_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 16, name: "tax_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 17, name: "amount", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 18, name: "date_of_expense", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpenseItem().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpenseItem().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpenseItem().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpenseItem, a, b);
***REMOVED***
***REMOVED***
exports.ExpenseItem = ExpenseItem;
/**
 *
 * Describes the message consisting of the list of expenses
 *
 * @generated from message Genesis.ExpensesList
 */
class ExpensesList extends protobuf_1.Message ***REMOVED***
    /**
     * List of records
     *
     * @generated from field: repeated Genesis.Expense list = 1;
     */
    list = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "list", kind: "message", T: Expense, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesList().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesList().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesList().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesList, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesList = ExpensesList;
/**
 *
 * Describes the message consisting of the list of expense items
 *
 * @generated from message Genesis.ExpensesItemsList
 */
class ExpensesItemsList extends protobuf_1.Message ***REMOVED***
    /**
     * List of records
     *
     * @generated from field: repeated Genesis.ExpenseItem list = 1;
     */
    list = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesItemsList";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "list", kind: "message", T: ExpenseItem, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesItemsList().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesItemsList().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesItemsList().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesItemsList, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesItemsList = ExpensesItemsList;
/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Genesis.ExpenseItemHistoryRequest
 */
class ExpenseItemHistoryRequest extends protobuf_1.Message ***REMOVED***
    /**
     * Stores the expense ID
     *
     * @generated from field: int64 expense_id = 10;
     */
    expenseId = protobuf_1.protoInt64.zero;
    /**
     * Stores the name of the item
     *
     * @generated from field: string name = 11;
     */
    name = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpenseItemHistoryRequest";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 10, name: "expense_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 11, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpenseItemHistoryRequest().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpenseItemHistoryRequest().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpenseItemHistoryRequest().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpenseItemHistoryRequest, a, b);
***REMOVED***
***REMOVED***
exports.ExpenseItemHistoryRequest = ExpenseItemHistoryRequest;
/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Genesis.ExpensesServicePaginationReq
 */
class ExpensesServicePaginationReq extends protobuf_1.Message ***REMOVED***
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.EXPENSE_SORT_KEY sort_key = 5;
     */
    sortKey = EXPENSE_SORT_KEY.EXPENSE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The status of this expense
     *
     * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 6;
     */
    status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServicePaginationReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
        ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(EXPENSE_SORT_KEY) ***REMOVED***,
        ***REMOVED*** no: 6, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServicePaginationReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServicePaginationReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServicePaginationReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServicePaginationReq, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServicePaginationReq = ExpensesServicePaginationReq;
/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Genesis.ExpensesServicePaginationResponse
 */
class ExpensesServicePaginationResponse extends protobuf_1.Message ***REMOVED***
    /**
     * The number of records in this payload
     *
     * @generated from field: int64 count = 1;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
     *
     * @generated from field: int64 offset = 2;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The total number of records that are available
     *
     * @generated from field: int64 total = 3;
     */
    total = protobuf_1.protoInt64.zero;
    /**
     * The list of records
     *
     * @generated from field: repeated Genesis.Expense payload = 4;
     */
    payload = [];
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServicePaginationResponse";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "payload", kind: "message", T: Expense, repeated: true ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServicePaginationResponse().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServicePaginationResponse().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServicePaginationResponse().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServicePaginationResponse, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServicePaginationResponse = ExpensesServicePaginationResponse;
/**
 *
 * Describes a pagination request to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.ExpensesServiceEntityPaginationReq
 */
class ExpensesServiceEntityPaginationReq extends protobuf_1.Message ***REMOVED***
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.EXPENSE_SORT_KEY sort_key = 5;
     */
    sortKey = EXPENSE_SORT_KEY.EXPENSE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 6;
     */
    entityUuid = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServiceEntityPaginationReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
        ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(EXPENSE_SORT_KEY) ***REMOVED***,
        ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServiceEntityPaginationReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServiceEntityPaginationReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServiceEntityPaginationReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServiceEntityPaginationReq, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServiceEntityPaginationReq = ExpensesServiceEntityPaginationReq;
/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Genesis.ExpensesServiceFilterReq
 */
class ExpensesServiceFilterReq extends protobuf_1.Message ***REMOVED***
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.EXPENSE_SORT_KEY sort_key = 5;
     */
    sortKey = EXPENSE_SORT_KEY.EXPENSE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The minimum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: int64 creation_timestamp_start = 6;
     */
    creationTimestampStart = protobuf_1.protoInt64.zero;
    /**
     * The maximum timestamp that needs to be considered to filter by creation
     *
     * @generated from field: int64 creation_timestamp_end = 7;
     */
    creationTimestampEnd = protobuf_1.protoInt64.zero;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 8;
     */
    entityUuid = "";
    /**
     * The status of this expense
     *
     * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
     */
    status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
    /**
     * The start range of approved timestamp
     *
     * @generated from field: int64 approved_on_start = 11;
     */
    approvedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of approved timestamp
     *
     * @generated from field: int64 approved_on_end = 12;
     */
    approvedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The ID of the approver
     *
     * @generated from field: int64 approved_by_user_id = 13;
     */
    approvedByUserId = protobuf_1.protoInt64.zero;
    /**
     * The role ID of the approver
     *
     * @generated from field: int64 approver_role_id = 14;
     */
    approverRoleId = protobuf_1.protoInt64.zero;
    /**
     * The start range of completed timestamp
     *
     * @generated from field: int64 completed_on_start = 15;
     */
    completedOnStart = protobuf_1.protoInt64.zero;
    /**
     * The end range of completed timestamp
     *
     * @generated from field: int64 completed_on_end = 16;
     */
    completedOnEnd = protobuf_1.protoInt64.zero;
    /**
     * The reference ID of the expense
     *
     * @generated from field: string reference_id = 20;
     */
    referenceId = "";
    /**
     * The unique reference number that has been automatically generated
     *
     * @generated from field: string final_ref_number = 21;
     */
    finalRefNumber = "";
    /**
     * The currency ID of the expense
     *
     * @generated from field: int64 currency_id = 22;
     */
    currencyId = protobuf_1.protoInt64.zero;
    /**
     * The ID of the user who paid for this expense (if paid by organization, then this will be 0)
     *
     * @generated from field: int64 paid_by_user_id = 23;
     */
    paidByUserId = protobuf_1.protoInt64.zero;
    /**
     * The associated project ID
     *
     * @generated from field: int64 project_id = 30;
     */
    projectId = protobuf_1.protoInt64.zero;
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServiceFilterReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
        ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(EXPENSE_SORT_KEY) ***REMOVED***,
        ***REMOVED*** no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
        ***REMOVED*** no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 15, name: "completed_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 16, name: "completed_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 22, name: "currency_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 23, name: "paid_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 30, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServiceFilterReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServiceFilterReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServiceFilterReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServiceFilterReq, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServiceFilterReq = ExpensesServiceFilterReq;
/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Genesis.ExpensesServiceSearchAllReq
 */
class ExpensesServiceSearchAllReq extends protobuf_1.Message ***REMOVED***
    /**
     * If true, then returns only active records. If false, then returns only inactive records
     *
     * @generated from field: bool is_active = 1;
     */
    isActive = false;
    /**
     * The number of records that need to be sent in the response. Returns all records if it is set to -1
     *
     * @generated from field: int64 count = 2;
     */
    count = protobuf_1.protoInt64.zero;
    /**
     * The number that need to be offset by before fetching the records
     *
     * @generated from field: int64 offset = 3;
     */
    offset = protobuf_1.protoInt64.zero;
    /**
     * The sort order that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.SORT_ORDER sort_order = 4;
     */
    sortOrder = base_pb_js_1.SORT_ORDER.ASCENDING_UNSPECIFIED;
    /**
     * The sort key that is to be used to fetch the pagination response
     *
     * @generated from field: Genesis.EXPENSE_SORT_KEY sort_key = 5;
     */
    sortKey = EXPENSE_SORT_KEY.EXPENSE_SORT_KEY_ID_UNSPECIFIED;
    /**
     * The entity UUID that is to be used to filter records
     *
     * @generated from field: string entity_uuid = 6;
     */
    entityUuid = "";
    /**
     * Limit the search space to the given status
     *
     * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
     */
    status = base_pb_js_1.STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;
    /**
     * Describes the key with which the search operation needs to be performed
     *
     * @generated from field: string search_key = 11;
     */
    searchKey = "";
    constructor(data) ***REMOVED***
        super();
        protobuf_1.proto3.util.initPartial(data, this);
***REMOVED***
    static runtime = protobuf_1.proto3;
    static typeName = "Genesis.ExpensesServiceSearchAllReq";
    static fields = protobuf_1.proto3.util.newFieldList(() => [
        ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
        ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
        ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.SORT_ORDER) ***REMOVED***,
        ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: protobuf_1.proto3.getEnumType(EXPENSE_SORT_KEY) ***REMOVED***,
        ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
        ***REMOVED*** no: 10, name: "status", kind: "enum", T: protobuf_1.proto3.getEnumType(base_pb_js_1.STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
        ***REMOVED*** no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ]);
    static fromBinary(bytes, options) ***REMOVED***
        return new ExpensesServiceSearchAllReq().fromBinary(bytes, options);
***REMOVED***
    static fromJson(jsonValue, options) ***REMOVED***
        return new ExpensesServiceSearchAllReq().fromJson(jsonValue, options);
***REMOVED***
    static fromJsonString(jsonString, options) ***REMOVED***
        return new ExpensesServiceSearchAllReq().fromJsonString(jsonString, options);
***REMOVED***
    static equals(a, b) ***REMOVED***
        return protobuf_1.proto3.util.equals(ExpensesServiceSearchAllReq, a, b);
***REMOVED***
***REMOVED***
exports.ExpensesServiceSearchAllReq = ExpensesServiceSearchAllReq;
