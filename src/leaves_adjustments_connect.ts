// addLeaveAdjustmentRecord
// modifyLeaveAdjustmentRecord
// reorderLeaveAdjustmentRecords
// deleteLeaveAdjustmentRecord
// approveLeaveAdjustmentRecord

// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file leaves_adjustments.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { LeaveAdjustment, LeaveAdjustmentRecord, LeavesAdjustmentsList, LeavesAdjustmentsRecordsHistoryRequest, LeavesAdjustmentsRecordsList, LeavesAdjustmentsServiceCreateRequest, LeavesAdjustmentsServiceEntityPaginationReq, LeavesAdjustmentsServiceFilterReq, LeavesAdjustmentsServicePaginationReq, LeavesAdjustmentsServicePaginationResponse, LeavesAdjustmentsServiceRecordCreateRequest, LeavesAdjustmentsServiceRecordUpdateRequest, LeavesAdjustmentsServiceSearchAllReq, LeavesAdjustmentsServiceUpdateRequest } from "./leaves_adjustments_pb.js";
import { ActiveStatus, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierUUID, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest } from "./base_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 *
 * Describes the common methods applicable on each record
 *
 * @generated from service Genesis.LeavesAdjustmentsService
 */
export const LeavesAdjustmentsService = {
  typeName: "Genesis.LeavesAdjustmentsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Create
     */
    create: {
      name: "Create",
      I: LeavesAdjustmentsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Draft
     */
    draft: {
      name: "Draft",
      I: LeavesAdjustmentsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: LeavesAdjustmentsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: LeavesAdjustmentsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * Send Email
     * rpc SendEmail (Identifier) returns (Identifier);
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add a record to a record
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.AddLeaveAdjustmentRecord
     */
    addLeaveAdjustmentRecord: {
      name: "AddLeaveAdjustmentRecord",
      I: LeavesAdjustmentsServiceRecordCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify a record in a record
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ModifyLeaveAdjustmentRecord
     */
    modifyLeaveAdjustmentRecord: {
      name: "ModifyLeaveAdjustmentRecord",
      I: LeavesAdjustmentsServiceRecordUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a record in a record
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ApproveLeaveAdjustmentRecord
     */
    approveLeaveAdjustmentRecord: {
      name: "ApproveLeaveAdjustmentRecord",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a record in a record
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.DeleteLeaveAdjustmentRecord
     */
    deleteLeaveAdjustmentRecord: {
      name: "DeleteLeaveAdjustmentRecord",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder records
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ReorderLeaveAdjustmentRecords
     */
    reorderLeaveAdjustmentRecords: {
      name: "ReorderLeaveAdjustmentRecords",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View Leave Adjustment Record by ID
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewLeaveAdjustmentRecordByID
     */
    viewLeaveAdjustmentRecordByID: {
      name: "ViewLeaveAdjustmentRecordByID",
      I: Identifier,
      O: LeaveAdjustmentRecord,
      kind: MethodKind.Unary,
    },
    /**
     * View approved leave adjustment records for given record ID
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewApprovedLeaveAdjustmentRecords
     */
    viewApprovedLeaveAdjustmentRecords: {
      name: "ViewApprovedLeaveAdjustmentRecords",
      I: IdentifierWithSearchKey,
      O: LeavesAdjustmentsRecordsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved leave adjustment records for given record ID
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewUnapprovedLeaveAdjustmentRecords
     */
    viewUnapprovedLeaveAdjustmentRecords: {
      name: "ViewUnapprovedLeaveAdjustmentRecords",
      I: IdentifierWithSearchKey,
      O: LeavesAdjustmentsRecordsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the record
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewLeaveAdjustmentRecordsHistory
     */
    viewLeaveAdjustmentRecordsHistory: {
      name: "ViewLeaveAdjustmentRecordsHistory",
      I: LeavesAdjustmentsRecordsHistoryRequest,
      O: LeavesAdjustmentsRecordsList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: LeaveAdjustment,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: LeavesAdjustmentsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: LeavesAdjustmentsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: LeavesAdjustmentsServicePaginationReq,
      O: LeavesAdjustmentsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination with the given entity UUID
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.ViewWithPaginationForEntityUUID
     */
    viewWithPaginationForEntityUUID: {
      name: "ViewWithPaginationForEntityUUID",
      I: LeavesAdjustmentsServiceEntityPaginationReq,
      O: LeavesAdjustmentsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: LeavesAdjustmentsServiceSearchAllReq,
      O: LeavesAdjustmentsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.Filter
     */
    filter: {
      name: "Filter",
      I: LeavesAdjustmentsServiceFilterReq,
      O: LeavesAdjustmentsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Genesis.LeavesAdjustmentsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

