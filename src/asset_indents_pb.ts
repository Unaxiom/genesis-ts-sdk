// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file asset_indents.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_pb.js";
import { ApprovalMetadata, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Genesis.ASSET_INDENT_SORT_KEY
 */
export enum ASSET_INDENT_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  ASSET_INDENT_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_CREATED_AT = 1;
   */
  ASSET_INDENT_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_MODIFIED_AT = 2;
   */
  ASSET_INDENT_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_APPROVED_ON = 3;
   */
  ASSET_INDENT_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_APPROVED_BY = 4;
   */
  ASSET_INDENT_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  ASSET_INDENT_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_COMPLETED_ON = 6;
   */
  ASSET_INDENT_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_REFERENCE_ID = 10;
   */
  ASSET_INDENT_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  ASSET_INDENT_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the location ID
   *
   * @generated from enum value: ASSET_INDENT_SORT_KEY_LOCATION_ID = 12;
   */
  ASSET_INDENT_SORT_KEY_LOCATION_ID = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(ASSET_INDENT_SORT_KEY)
proto3.util.setEnumType(ASSET_INDENT_SORT_KEY, "Genesis.ASSET_INDENT_SORT_KEY", [
  { no: 0, name: "ASSET_INDENT_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "ASSET_INDENT_SORT_KEY_CREATED_AT" },
  { no: 2, name: "ASSET_INDENT_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "ASSET_INDENT_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "ASSET_INDENT_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "ASSET_INDENT_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "ASSET_INDENT_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "ASSET_INDENT_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "ASSET_INDENT_SORT_KEY_FINAL_REF_NUMBER" },
  { no: 12, name: "ASSET_INDENT_SORT_KEY_LOCATION_ID" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Genesis.AssetIndentsServiceCreateRequest
 */
export class AssetIndentsServiceCreateRequest extends Message<AssetIndentsServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated project ID
   *
   * @generated from field: int64 project_id = 8;
   */
  projectId = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the asset indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The ID of the location
   *
   * @generated from field: int64 location_id = 14;
   */
  locationId = protoInt64.zero;

  /**
   * The ID of the associated user
   *
   * @generated from field: int64 user_id = 15;
   */
  userId = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<AssetIndentsServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "location_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServiceCreateRequest {
    return new AssetIndentsServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServiceCreateRequest {
    return new AssetIndentsServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServiceCreateRequest {
    return new AssetIndentsServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServiceCreateRequest | PlainMessage<AssetIndentsServiceCreateRequest> | undefined, b: AssetIndentsServiceCreateRequest | PlainMessage<AssetIndentsServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Genesis.AssetIndentsServiceUpdateRequest
 */
export class AssetIndentsServiceUpdateRequest extends Message<AssetIndentsServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated project ID
   *
   * @generated from field: int64 project_id = 8;
   */
  projectId = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the asset indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The ID of the associated user
   *
   * @generated from field: int64 user_id = 15;
   */
  userId = protoInt64.zero;

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<AssetIndentsServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServiceUpdateRequest {
    return new AssetIndentsServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServiceUpdateRequest {
    return new AssetIndentsServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServiceUpdateRequest {
    return new AssetIndentsServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServiceUpdateRequest | PlainMessage<AssetIndentsServiceUpdateRequest> | undefined, b: AssetIndentsServiceUpdateRequest | PlainMessage<AssetIndentsServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Genesis.AssetIndent
 */
export class AssetIndent extends Message<AssetIndent> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this asset indent
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this asset indent
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this asset indent
   *
   * @generated from field: repeated Genesis.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this asset indent was marked as completed
   *
   * @generated from field: int64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated project ID
   *
   * @generated from field: int64 project_id = 8;
   */
  projectId = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the asset indent
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The ID of the location
   *
   * @generated from field: int64 location_id = 14;
   */
  locationId = protoInt64.zero;

  /**
   * The ID of the associated user
   *
   * @generated from field: int64 user_id = 15;
   */
  userId = protoInt64.zero;

  /**
   * The list of associated asset indent items
   *
   * @generated from field: repeated Genesis.AssetIndentItem list = 20;
   */
  list: AssetIndentItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<AssetIndent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "location_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "list", kind: "message", T: AssetIndentItem, repeated: true },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndent {
    return new AssetIndent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndent {
    return new AssetIndent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndent {
    return new AssetIndent().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndent | PlainMessage<AssetIndent> | undefined, b: AssetIndent | PlainMessage<AssetIndent> | undefined): boolean {
    return proto3.util.equals(AssetIndent, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a asset indent
 *
 * @generated from message Genesis.AssetIndentsServiceItemCreateRequest
 */
export class AssetIndentsServiceItemCreateRequest extends Message<AssetIndentsServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the asset indent ID
   *
   * @generated from field: int64 asset_indent_id = 10;
   */
  assetIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: int64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity being manufactured
   *
   * @generated from field: int64 quantity = 12;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AssetIndentsServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "asset_indent_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServiceItemCreateRequest {
    return new AssetIndentsServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServiceItemCreateRequest {
    return new AssetIndentsServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServiceItemCreateRequest {
    return new AssetIndentsServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServiceItemCreateRequest | PlainMessage<AssetIndentsServiceItemCreateRequest> | undefined, b: AssetIndentsServiceItemCreateRequest | PlainMessage<AssetIndentsServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a asset indent
 *
 * @generated from message Genesis.AssetIndentsServiceItemUpdateRequest
 */
export class AssetIndentsServiceItemUpdateRequest extends Message<AssetIndentsServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The quantity being manufactured
   *
   * @generated from field: int64 quantity = 12;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AssetIndentsServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServiceItemUpdateRequest {
    return new AssetIndentsServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServiceItemUpdateRequest {
    return new AssetIndentsServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServiceItemUpdateRequest {
    return new AssetIndentsServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServiceItemUpdateRequest | PlainMessage<AssetIndentsServiceItemUpdateRequest> | undefined, b: AssetIndentsServiceItemUpdateRequest | PlainMessage<AssetIndentsServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a asset indent
 *
 * @generated from message Genesis.AssetIndentItem
 */
export class AssetIndentItem extends Message<AssetIndentItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this asset indent
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the asset indent ID
   *
   * @generated from field: int64 asset_indent_id = 10;
   */
  assetIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: int64 family_id = 11;
   */
  familyId = protoInt64.zero;

  /**
   * The quantity being manufactured
   *
   * @generated from field: int64 quantity = 12;
   */
  quantity = protoInt64.zero;

  constructor(data?: PartialMessage<AssetIndentItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "asset_indent_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentItem {
    return new AssetIndentItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentItem {
    return new AssetIndentItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentItem {
    return new AssetIndentItem().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentItem | PlainMessage<AssetIndentItem> | undefined, b: AssetIndentItem | PlainMessage<AssetIndentItem> | undefined): boolean {
    return proto3.util.equals(AssetIndentItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of asset indents
 *
 * @generated from message Genesis.AssetIndentsList
 */
export class AssetIndentsList extends Message<AssetIndentsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.AssetIndent list = 1;
   */
  list: AssetIndent[] = [];

  constructor(data?: PartialMessage<AssetIndentsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: AssetIndent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsList {
    return new AssetIndentsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsList {
    return new AssetIndentsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsList {
    return new AssetIndentsList().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsList | PlainMessage<AssetIndentsList> | undefined, b: AssetIndentsList | PlainMessage<AssetIndentsList> | undefined): boolean {
    return proto3.util.equals(AssetIndentsList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of asset indent items
 *
 * @generated from message Genesis.AssetIndentsItemsList
 */
export class AssetIndentsItemsList extends Message<AssetIndentsItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.AssetIndentItem list = 1;
   */
  list: AssetIndentItem[] = [];

  constructor(data?: PartialMessage<AssetIndentsItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: AssetIndentItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsItemsList {
    return new AssetIndentsItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsItemsList {
    return new AssetIndentsItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsItemsList {
    return new AssetIndentsItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsItemsList | PlainMessage<AssetIndentsItemsList> | undefined, b: AssetIndentsItemsList | PlainMessage<AssetIndentsItemsList> | undefined): boolean {
    return proto3.util.equals(AssetIndentsItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Genesis.AssetIndentItemHistoryRequest
 */
export class AssetIndentItemHistoryRequest extends Message<AssetIndentItemHistoryRequest> {
  /**
   * Stores the asset indent ID
   *
   * @generated from field: int64 asset_indent_id = 10;
   */
  assetIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: int64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<AssetIndentItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "asset_indent_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentItemHistoryRequest {
    return new AssetIndentItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentItemHistoryRequest {
    return new AssetIndentItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentItemHistoryRequest {
    return new AssetIndentItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentItemHistoryRequest | PlainMessage<AssetIndentItemHistoryRequest> | undefined, b: AssetIndentItemHistoryRequest | PlainMessage<AssetIndentItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(AssetIndentItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the info of a prospective asset indent item
 *
 * @generated from message Genesis.AssetIndentItemProspectiveInfoRequest
 */
export class AssetIndentItemProspectiveInfoRequest extends Message<AssetIndentItemProspectiveInfoRequest> {
  /**
   * Stores the asset indent ID
   *
   * @generated from field: int64 asset_indent_id = 10;
   */
  assetIndentId = protoInt64.zero;

  /**
   * Stores the family ID
   *
   * @generated from field: int64 family_id = 11;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<AssetIndentItemProspectiveInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentItemProspectiveInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "asset_indent_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentItemProspectiveInfoRequest {
    return new AssetIndentItemProspectiveInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentItemProspectiveInfoRequest {
    return new AssetIndentItemProspectiveInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentItemProspectiveInfoRequest {
    return new AssetIndentItemProspectiveInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentItemProspectiveInfoRequest | PlainMessage<AssetIndentItemProspectiveInfoRequest> | undefined, b: AssetIndentItemProspectiveInfoRequest | PlainMessage<AssetIndentItemProspectiveInfoRequest> | undefined): boolean {
    return proto3.util.equals(AssetIndentItemProspectiveInfoRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Genesis.AssetIndentsServicePaginationReq
 */
export class AssetIndentsServicePaginationReq extends Message<AssetIndentsServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ASSET_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = ASSET_INDENT_SORT_KEY.ASSET_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this asset indent
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  constructor(data?: PartialMessage<AssetIndentsServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ASSET_INDENT_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServicePaginationReq {
    return new AssetIndentsServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServicePaginationReq {
    return new AssetIndentsServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServicePaginationReq {
    return new AssetIndentsServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServicePaginationReq | PlainMessage<AssetIndentsServicePaginationReq> | undefined, b: AssetIndentsServicePaginationReq | PlainMessage<AssetIndentsServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Genesis.AssetIndentsServicePaginationResponse
 */
export class AssetIndentsServicePaginationResponse extends Message<AssetIndentsServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: int64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: int64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Genesis.AssetIndent payload = 4;
   */
  payload: AssetIndent[] = [];

  constructor(data?: PartialMessage<AssetIndentsServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "payload", kind: "message", T: AssetIndent, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServicePaginationResponse {
    return new AssetIndentsServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServicePaginationResponse {
    return new AssetIndentsServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServicePaginationResponse {
    return new AssetIndentsServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServicePaginationResponse | PlainMessage<AssetIndentsServicePaginationResponse> | undefined, b: AssetIndentsServicePaginationResponse | PlainMessage<AssetIndentsServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.AssetIndentsServiceEntityPaginationReq
 */
export class AssetIndentsServiceEntityPaginationReq extends Message<AssetIndentsServiceEntityPaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ASSET_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = ASSET_INDENT_SORT_KEY.ASSET_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  constructor(data?: PartialMessage<AssetIndentsServiceEntityPaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServiceEntityPaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ASSET_INDENT_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServiceEntityPaginationReq {
    return new AssetIndentsServiceEntityPaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServiceEntityPaginationReq {
    return new AssetIndentsServiceEntityPaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServiceEntityPaginationReq {
    return new AssetIndentsServiceEntityPaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServiceEntityPaginationReq | PlainMessage<AssetIndentsServiceEntityPaginationReq> | undefined, b: AssetIndentsServiceEntityPaginationReq | PlainMessage<AssetIndentsServiceEntityPaginationReq> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServiceEntityPaginationReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Genesis.AssetIndentsServiceFilterReq
 */
export class AssetIndentsServiceFilterReq extends Message<AssetIndentsServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ASSET_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = ASSET_INDENT_SORT_KEY.ASSET_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_start = 6;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_end = 7;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this asset indent
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: int64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: int64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: int64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: int64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: int64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: int64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the asset indent
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The ID of the location
   *
   * @generated from field: int64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The ID of the associated user
   *
   * @generated from field: int64 user_id = 25;
   */
  userId = protoInt64.zero;

  /**
   * The associated project ID
   *
   * @generated from field: int64 project_id = 50;
   */
  projectId = protoInt64.zero;

  constructor(data?: PartialMessage<AssetIndentsServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ASSET_INDENT_SORT_KEY) },
    { no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "location_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 25, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 50, name: "project_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServiceFilterReq {
    return new AssetIndentsServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServiceFilterReq {
    return new AssetIndentsServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServiceFilterReq {
    return new AssetIndentsServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServiceFilterReq | PlainMessage<AssetIndentsServiceFilterReq> | undefined, b: AssetIndentsServiceFilterReq | PlainMessage<AssetIndentsServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Genesis.AssetIndentsServiceSearchAllReq
 */
export class AssetIndentsServiceSearchAllReq extends Message<AssetIndentsServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ASSET_INDENT_SORT_KEY sort_key = 5;
   */
  sortKey = ASSET_INDENT_SORT_KEY.ASSET_INDENT_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The ID of the location
   *
   * @generated from field: int64 location_id = 24;
   */
  locationId = protoInt64.zero;

  /**
   * The ID of the associated user
   *
   * @generated from field: int64 user_id = 25;
   */
  userId = protoInt64.zero;

  constructor(data?: PartialMessage<AssetIndentsServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssetIndentsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ASSET_INDENT_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "location_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 25, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetIndentsServiceSearchAllReq {
    return new AssetIndentsServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetIndentsServiceSearchAllReq {
    return new AssetIndentsServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetIndentsServiceSearchAllReq {
    return new AssetIndentsServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: AssetIndentsServiceSearchAllReq | PlainMessage<AssetIndentsServiceSearchAllReq> | undefined, b: AssetIndentsServiceSearchAllReq | PlainMessage<AssetIndentsServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(AssetIndentsServiceSearchAllReq, a, b);
  }
}

