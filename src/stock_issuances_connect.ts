// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file stock_issuances.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { StockIssuance, StockIssuanceItem, StockIssuanceItemHistoryRequest, StockIssuanceItemProspectiveInfoRequest, StockIssuancesItemsList, StockIssuancesList, StockIssuancesServiceAlreadyAddedQuantityForSourceRequest, StockIssuancesServiceAutofillRequest, StockIssuancesServiceCreateRequest, StockIssuancesServiceEntityPaginationReq, StockIssuancesServiceFilterReq, StockIssuancesServiceItemCreateRequest, StockIssuancesServiceItemUpdateRequest, StockIssuancesServicePaginationReq, StockIssuancesServicePaginationResponse, StockIssuancesServiceSearchAllReq, StockIssuancesServiceUpdateRequest } from "./stock_issuances_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierUUID, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, QuantityResponse, ReorderItemsRequest } from "./base_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList } from "./families_pb.js";

/**
 *
 * Describes the common methods applicable on each stock issuance
 *
 * @generated from service Genesis.StockIssuancesService
 */
export const StockIssuancesService = {
  typeName: "Genesis.StockIssuancesService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Genesis.StockIssuancesService.Create
     */
    create: {
      name: "Create",
      I: StockIssuancesServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Genesis.StockIssuancesService.Draft
     */
    draft: {
      name: "Draft",
      I: StockIssuancesServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Genesis.StockIssuancesService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: StockIssuancesServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Genesis.StockIssuancesService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Genesis.StockIssuancesService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Genesis.StockIssuancesService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Genesis.StockIssuancesService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Genesis.StockIssuancesService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: StockIssuancesServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Genesis.StockIssuancesService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Genesis.StockIssuancesService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Genesis.StockIssuancesService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Genesis.StockIssuancesService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Genesis.StockIssuancesService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Genesis.StockIssuancesService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Genesis.StockIssuancesService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Genesis.StockIssuancesService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the stock issuance
     *
     * @generated from rpc Genesis.StockIssuancesService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: StockIssuancesServiceAutofillRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Stock Issuance can be marked as completed
     *
     * @generated from rpc Genesis.StockIssuancesService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a stock issuance
     *
     * @generated from rpc Genesis.StockIssuancesService.AddStockIssuanceItem
     */
    addStockIssuanceItem: {
      name: "AddStockIssuanceItem",
      I: StockIssuancesServiceItemCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a stock issuance
     *
     * @generated from rpc Genesis.StockIssuancesService.ModifyStockIssuanceItem
     */
    modifyStockIssuanceItem: {
      name: "ModifyStockIssuanceItem",
      I: StockIssuancesServiceItemUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a stock issuance
     *
     * @generated from rpc Genesis.StockIssuancesService.ApproveStockIssuanceItem
     */
    approveStockIssuanceItem: {
      name: "ApproveStockIssuanceItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a stock issuance
     *
     * @generated from rpc Genesis.StockIssuancesService.DeleteStockIssuanceItem
     */
    deleteStockIssuanceItem: {
      name: "DeleteStockIssuanceItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a stock issuance
     *
     * @generated from rpc Genesis.StockIssuancesService.ReorderStockIssuanceItems
     */
    reorderStockIssuanceItems: {
      name: "ReorderStockIssuanceItems",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View Stock Issuance Item by ID
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewStockIssuanceItemByID
     */
    viewStockIssuanceItemByID: {
      name: "ViewStockIssuanceItemByID",
      I: Identifier,
      O: StockIssuanceItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved stock issuance items for given stock issuance ID
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewApprovedStockIssuanceItems
     */
    viewApprovedStockIssuanceItems: {
      name: "ViewApprovedStockIssuanceItems",
      I: IdentifierWithSearchKey,
      O: StockIssuancesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved stock issuance items for given stock issuance ID
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewUnapprovedStockIssuanceItems
     */
    viewUnapprovedStockIssuanceItems: {
      name: "ViewUnapprovedStockIssuanceItems",
      I: IdentifierWithSearchKey,
      O: StockIssuancesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the stock issuance item
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewStockIssuanceItemHistory
     */
    viewStockIssuanceItemHistory: {
      name: "ViewStockIssuanceItemHistory",
      I: StockIssuanceItemHistoryRequest,
      O: StockIssuancesItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: StockIssuance,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: StockIssuancesServicePaginationReq,
      O: StockIssuancesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination with the given entity UUID
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewWithPaginationForEntityUUID
     */
    viewWithPaginationForEntityUUID: {
      name: "ViewWithPaginationForEntityUUID",
      I: StockIssuancesServiceEntityPaginationReq,
      O: StockIssuancesServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given stock issuance
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective stock issuance item info for the given family ID and stock issuance ID
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewProspectiveStockIssuanceItem
     */
    viewProspectiveStockIssuanceItem: {
      name: "ViewProspectiveStockIssuanceItem",
      I: StockIssuanceItemProspectiveInfoRequest,
      O: StockIssuancesServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * View already added quantities
     *
     * @generated from rpc Genesis.StockIssuancesService.ViewAddedFamilyQuantityForSource
     */
    viewAddedFamilyQuantityForSource: {
      name: "ViewAddedFamilyQuantityForSource",
      I: StockIssuancesServiceAlreadyAddedQuantityForSourceRequest,
      O: QuantityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Genesis.StockIssuancesService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: StockIssuancesServiceSearchAllReq,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Genesis.StockIssuancesService.Filter
     */
    filter: {
      name: "Filter",
      I: StockIssuancesServiceFilterReq,
      O: StockIssuancesList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Genesis.StockIssuancesService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

