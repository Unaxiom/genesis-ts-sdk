// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file absences.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type ***REMOVED*** BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage ***REMOVED*** from "@bufbuild/protobuf";
import ***REMOVED*** Message, proto3, protoInt64 ***REMOVED*** from "@bufbuild/protobuf";
import ***REMOVED*** FormFieldDatum, FormFieldDatumCreateRequest ***REMOVED*** from "./forms_pb.js";
import ***REMOVED*** ApprovalMetadata, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS ***REMOVED*** from "./base_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Genesis.ABSENCE_SORT_KEY
 */
export enum ABSENCE_SORT_KEY ***REMOVED***
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: ABSENCE_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  ABSENCE_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: ABSENCE_SORT_KEY_CREATED_AT = 1;
   */
  ABSENCE_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: ABSENCE_SORT_KEY_MODIFIED_AT = 2;
   */
  ABSENCE_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: ABSENCE_SORT_KEY_APPROVED_ON = 3;
   */
  ABSENCE_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: ABSENCE_SORT_KEY_APPROVED_BY = 4;
   */
  ABSENCE_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: ABSENCE_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  ABSENCE_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: ABSENCE_SORT_KEY_COMPLETED_ON = 6;
   */
  ABSENCE_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: ABSENCE_SORT_KEY_REFERENCE_ID = 10;
   */
  ABSENCE_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: ABSENCE_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  ABSENCE_SORT_KEY_FINAL_REF_NUMBER = 11,

  /**
   * Fetch ordered results by the user ID
   *
   * @generated from enum value: ABSENCE_SORT_KEY_USER_ID = 12;
   */
  ABSENCE_SORT_KEY_USER_ID = 12,

  /**
   * Fetch ordered results by the leave request ID
   *
   * @generated from enum value: ABSENCE_SORT_KEY_LEAVE_REQUEST_ID = 13;
   */
  ABSENCE_SORT_KEY_LEAVE_REQUEST_ID = 13,

  /**
   * Fetch ordered results by the "from timestamp"
   *
   * @generated from enum value: ABSENCE_SORT_KEY_FROM_TIMESTAMP = 14;
   */
  ABSENCE_SORT_KEY_FROM_TIMESTAMP = 14,

  /**
   * Fetch ordered results by the "to timestamp"
   *
   * @generated from enum value: ABSENCE_SORT_KEY_TO_TIMESTAMP = 15;
   */
  ABSENCE_SORT_KEY_TO_TIMESTAMP = 15,
***REMOVED***
// Retrieve enum metadata with: proto3.getEnumType(ABSENCE_SORT_KEY)
proto3.util.setEnumType(ABSENCE_SORT_KEY, "Genesis.ABSENCE_SORT_KEY", [
  ***REMOVED*** no: 0, name: "ABSENCE_SORT_KEY_ID_UNSPECIFIED" ***REMOVED***,
  ***REMOVED*** no: 1, name: "ABSENCE_SORT_KEY_CREATED_AT" ***REMOVED***,
  ***REMOVED*** no: 2, name: "ABSENCE_SORT_KEY_MODIFIED_AT" ***REMOVED***,
  ***REMOVED*** no: 3, name: "ABSENCE_SORT_KEY_APPROVED_ON" ***REMOVED***,
  ***REMOVED*** no: 4, name: "ABSENCE_SORT_KEY_APPROVED_BY" ***REMOVED***,
  ***REMOVED*** no: 5, name: "ABSENCE_SORT_KEY_APPROVER_ROLE_ID" ***REMOVED***,
  ***REMOVED*** no: 6, name: "ABSENCE_SORT_KEY_COMPLETED_ON" ***REMOVED***,
  ***REMOVED*** no: 10, name: "ABSENCE_SORT_KEY_REFERENCE_ID" ***REMOVED***,
  ***REMOVED*** no: 11, name: "ABSENCE_SORT_KEY_FINAL_REF_NUMBER" ***REMOVED***,
  ***REMOVED*** no: 12, name: "ABSENCE_SORT_KEY_USER_ID" ***REMOVED***,
  ***REMOVED*** no: 13, name: "ABSENCE_SORT_KEY_LEAVE_REQUEST_ID" ***REMOVED***,
  ***REMOVED*** no: 14, name: "ABSENCE_SORT_KEY_FROM_TIMESTAMP" ***REMOVED***,
  ***REMOVED*** no: 15, name: "ABSENCE_SORT_KEY_TO_TIMESTAMP" ***REMOVED***,
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Genesis.AbsencesServiceCreateRequest
 */
export class AbsencesServiceCreateRequest extends Message<AbsencesServiceCreateRequest> ***REMOVED***
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the absence
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The ID of the user who has been marked as absent
   *
   * @generated from field: int64 user_id = 11;
   */
  userId = protoInt64.zero;

  /**
   * The ID of the optional associated leave request
   *
   * @generated from field: int64 leave_request_id = 12;
   */
  leaveRequestId = protoInt64.zero;

  /**
   * The UNIX timestamp from when the user is absent
   *
   * @generated from field: int64 from_timestamp = 13;
   */
  fromTimestamp = protoInt64.zero;

  /**
   * The UNIX timestamp until when the user is absent
   *
   * @generated from field: int64 to_timestamp = 14;
   */
  toTimestamp = protoInt64.zero;

  /**
   * Stores the unit of material ID
   *
   * @generated from field: int64 uom_id = 15;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the quantity of absence (in cents)
   *
   * @generated from field: int64 quantity = 16;
   */
  quantity = protoInt64.zero;

  /**
   * The description of the absence
   *
   * @generated from field: string description = 17;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<AbsencesServiceCreateRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AbsencesServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "leave_request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "from_timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 14, name: "to_timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 15, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 16, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 17, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbsencesServiceCreateRequest ***REMOVED***
    return new AbsencesServiceCreateRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbsencesServiceCreateRequest ***REMOVED***
    return new AbsencesServiceCreateRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbsencesServiceCreateRequest ***REMOVED***
    return new AbsencesServiceCreateRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: AbsencesServiceCreateRequest | PlainMessage<AbsencesServiceCreateRequest> | undefined, b: AbsencesServiceCreateRequest | PlainMessage<AbsencesServiceCreateRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(AbsencesServiceCreateRequest, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Genesis.AbsencesServiceUpdateRequest
 */
export class AbsencesServiceUpdateRequest extends Message<AbsencesServiceUpdateRequest> ***REMOVED***
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the absence
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The ID of the optional associated leave request
   *
   * @generated from field: int64 leave_request_id = 12;
   */
  leaveRequestId = protoInt64.zero;

  /**
   * The UNIX timestamp from when the user is absent
   *
   * @generated from field: int64 from_timestamp = 13;
   */
  fromTimestamp = protoInt64.zero;

  /**
   * The UNIX timestamp until when the user is absent
   *
   * @generated from field: int64 to_timestamp = 14;
   */
  toTimestamp = protoInt64.zero;

  /**
   * // Stores the unit of material ID
   * int64 uom_id = 15 [(genesis_validate.rules).int64.gt = 0];
   * Stores the quantity of absence (in cents)
   *
   * @generated from field: int64 quantity = 16;
   */
  quantity = protoInt64.zero;

  /**
   * The description of the absence
   *
   * @generated from field: string description = 17;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<AbsencesServiceUpdateRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AbsencesServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "leave_request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "from_timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 14, name: "to_timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 16, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 17, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbsencesServiceUpdateRequest ***REMOVED***
    return new AbsencesServiceUpdateRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbsencesServiceUpdateRequest ***REMOVED***
    return new AbsencesServiceUpdateRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbsencesServiceUpdateRequest ***REMOVED***
    return new AbsencesServiceUpdateRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: AbsencesServiceUpdateRequest | PlainMessage<AbsencesServiceUpdateRequest> | undefined, b: AbsencesServiceUpdateRequest | PlainMessage<AbsencesServiceUpdateRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(AbsencesServiceUpdateRequest, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Genesis.Absence
 */
export class Absence extends Message<Absence> ***REMOVED***
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this absence
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this absence
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this absence
   *
   * @generated from field: repeated Genesis.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this absence was marked as completed
   *
   * @generated from field: int64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference_id of the absence
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The ID of the user who has been marked as absent
   *
   * @generated from field: int64 user_id = 12;
   */
  userId = protoInt64.zero;

  /**
   * The ID of the optional associated leave request
   *
   * @generated from field: int64 leave_request_id = 13;
   */
  leaveRequestId = protoInt64.zero;

  /**
   * The UNIX timestamp from when the user is absent
   *
   * @generated from field: int64 from_timestamp = 14;
   */
  fromTimestamp = protoInt64.zero;

  /**
   * The UNIX timestamp until when the user is absent
   *
   * @generated from field: int64 to_timestamp = 15;
   */
  toTimestamp = protoInt64.zero;

  /**
   * Stores the unit of material ID
   *
   * @generated from field: int64 uom_id = 16;
   */
  uomId = protoInt64.zero;

  /**
   * Stores the quantity of absence (in cents)
   *
   * @generated from field: int64 quantity = 17;
   */
  quantity = protoInt64.zero;

  /**
   * The description of the absence
   *
   * @generated from field: string description = 18;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<Absence>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.Absence";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "metadata", kind: "message", T: EmployeeMetadata ***REMOVED***,
    ***REMOVED*** no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata ***REMOVED***,
    ***REMOVED*** no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true ***REMOVED***,
    ***REMOVED*** no: 6, name: "completed_on", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "leave_request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 14, name: "from_timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 15, name: "to_timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 16, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 17, name: "quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 18, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Absence ***REMOVED***
    return new Absence().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Absence ***REMOVED***
    return new Absence().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Absence ***REMOVED***
    return new Absence().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: Absence | PlainMessage<Absence> | undefined, b: Absence | PlainMessage<Absence> | undefined): boolean ***REMOVED***
    return proto3.util.equals(Absence, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the message consisting of the list of records
 *
 * @generated from message Genesis.AbsencesList
 */
export class AbsencesList extends Message<AbsencesList> ***REMOVED***
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.Absence list = 1;
   */
  list: Absence[] = [];

  constructor(data?: PartialMessage<AbsencesList>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AbsencesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "list", kind: "message", T: Absence, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbsencesList ***REMOVED***
    return new AbsencesList().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbsencesList ***REMOVED***
    return new AbsencesList().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbsencesList ***REMOVED***
    return new AbsencesList().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: AbsencesList | PlainMessage<AbsencesList> | undefined, b: AbsencesList | PlainMessage<AbsencesList> | undefined): boolean ***REMOVED***
    return proto3.util.equals(AbsencesList, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Genesis.AbsencesServicePaginationReq
 */
export class AbsencesServicePaginationReq extends Message<AbsencesServicePaginationReq> ***REMOVED***
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ABSENCE_SORT_KEY sort_key = 5;
   */
  sortKey = ABSENCE_SORT_KEY.ABSENCE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this absence
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  constructor(data?: PartialMessage<AbsencesServicePaginationReq>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AbsencesServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ABSENCE_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbsencesServicePaginationReq ***REMOVED***
    return new AbsencesServicePaginationReq().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbsencesServicePaginationReq ***REMOVED***
    return new AbsencesServicePaginationReq().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbsencesServicePaginationReq ***REMOVED***
    return new AbsencesServicePaginationReq().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: AbsencesServicePaginationReq | PlainMessage<AbsencesServicePaginationReq> | undefined, b: AbsencesServicePaginationReq | PlainMessage<AbsencesServicePaginationReq> | undefined): boolean ***REMOVED***
    return proto3.util.equals(AbsencesServicePaginationReq, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Genesis.AbsencesServicePaginationResponse
 */
export class AbsencesServicePaginationResponse extends Message<AbsencesServicePaginationResponse> ***REMOVED***
  /**
   * The number of records in this payload
   *
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: int64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: int64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Genesis.Absence payload = 4;
   */
  payload: Absence[] = [];

  constructor(data?: PartialMessage<AbsencesServicePaginationResponse>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AbsencesServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "payload", kind: "message", T: Absence, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbsencesServicePaginationResponse ***REMOVED***
    return new AbsencesServicePaginationResponse().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbsencesServicePaginationResponse ***REMOVED***
    return new AbsencesServicePaginationResponse().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbsencesServicePaginationResponse ***REMOVED***
    return new AbsencesServicePaginationResponse().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: AbsencesServicePaginationResponse | PlainMessage<AbsencesServicePaginationResponse> | undefined, b: AbsencesServicePaginationResponse | PlainMessage<AbsencesServicePaginationResponse> | undefined): boolean ***REMOVED***
    return proto3.util.equals(AbsencesServicePaginationResponse, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes a pagination request to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.AbsencesServiceEntityPaginationReq
 */
export class AbsencesServiceEntityPaginationReq extends Message<AbsencesServiceEntityPaginationReq> ***REMOVED***
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ABSENCE_SORT_KEY sort_key = 5;
   */
  sortKey = ABSENCE_SORT_KEY.ABSENCE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  constructor(data?: PartialMessage<AbsencesServiceEntityPaginationReq>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AbsencesServiceEntityPaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ABSENCE_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbsencesServiceEntityPaginationReq ***REMOVED***
    return new AbsencesServiceEntityPaginationReq().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbsencesServiceEntityPaginationReq ***REMOVED***
    return new AbsencesServiceEntityPaginationReq().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbsencesServiceEntityPaginationReq ***REMOVED***
    return new AbsencesServiceEntityPaginationReq().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: AbsencesServiceEntityPaginationReq | PlainMessage<AbsencesServiceEntityPaginationReq> | undefined, b: AbsencesServiceEntityPaginationReq | PlainMessage<AbsencesServiceEntityPaginationReq> | undefined): boolean ***REMOVED***
    return proto3.util.equals(AbsencesServiceEntityPaginationReq, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Genesis.AbsencesServiceFilterReq
 */
export class AbsencesServiceFilterReq extends Message<AbsencesServiceFilterReq> ***REMOVED***
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ABSENCE_SORT_KEY sort_key = 5;
   */
  sortKey = ABSENCE_SORT_KEY.ABSENCE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_start = 6;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_end = 7;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this absence
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: int64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: int64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: int64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: int64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: int64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: int64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference_id of the absence
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The ID of the user who has been marked as absent
   *
   * @generated from field: int64 user_id = 22;
   */
  userId = protoInt64.zero;

  /**
   * The ID of the optionally associated leave request
   *
   * @generated from field: int64 leave_request_id = 23;
   */
  leaveRequestId = protoInt64.zero;

  /**
   * The start range of "from timestamp"
   *
   * @generated from field: int64 from_timestamp_start = 24;
   */
  fromTimestampStart = protoInt64.zero;

  /**
   * The end range of "from timestamp"
   *
   * @generated from field: int64 from_timestamp_end = 25;
   */
  fromTimestampEnd = protoInt64.zero;

  /**
   * The start range of "to timestamp"
   *
   * @generated from field: int64 to_timestamp_start = 26;
   */
  toTimestampStart = protoInt64.zero;

  /**
   * The end range of "to timestamp"
   *
   * @generated from field: int64 to_timestamp_end = 27;
   */
  toTimestampEnd = protoInt64.zero;

  /**
   * Stores the unit of material ID
   *
   * @generated from field: int64 uom_id = 28;
   */
  uomId = protoInt64.zero;

  /**
   * The min quantity of absence (in cents)
   *
   * @generated from field: int64 quantity_min = 29;
   */
  quantityMin = protoInt64.zero;

  /**
   * The max quantity of absence (in cents)
   *
   * @generated from field: int64 quantity_max = 30;
   */
  quantityMax = protoInt64.zero;

  constructor(data?: PartialMessage<AbsencesServiceFilterReq>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AbsencesServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ABSENCE_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 15, name: "completed_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 16, name: "completed_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 22, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 23, name: "leave_request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 24, name: "from_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 25, name: "from_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 26, name: "to_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 27, name: "to_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 28, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 29, name: "quantity_min", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "quantity_max", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbsencesServiceFilterReq ***REMOVED***
    return new AbsencesServiceFilterReq().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbsencesServiceFilterReq ***REMOVED***
    return new AbsencesServiceFilterReq().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbsencesServiceFilterReq ***REMOVED***
    return new AbsencesServiceFilterReq().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: AbsencesServiceFilterReq | PlainMessage<AbsencesServiceFilterReq> | undefined, b: AbsencesServiceFilterReq | PlainMessage<AbsencesServiceFilterReq> | undefined): boolean ***REMOVED***
    return proto3.util.equals(AbsencesServiceFilterReq, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Genesis.AbsencesServiceSearchAllReq
 */
export class AbsencesServiceSearchAllReq extends Message<AbsencesServiceSearchAllReq> ***REMOVED***
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ABSENCE_SORT_KEY sort_key = 5;
   */
  sortKey = ABSENCE_SORT_KEY.ABSENCE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  /**
   * The ID of the user who has been marked as absent
   *
   * @generated from field: int64 user_id = 22;
   */
  userId = protoInt64.zero;

  constructor(data?: PartialMessage<AbsencesServiceSearchAllReq>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AbsencesServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ABSENCE_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 22, name: "user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AbsencesServiceSearchAllReq ***REMOVED***
    return new AbsencesServiceSearchAllReq().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AbsencesServiceSearchAllReq ***REMOVED***
    return new AbsencesServiceSearchAllReq().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AbsencesServiceSearchAllReq ***REMOVED***
    return new AbsencesServiceSearchAllReq().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: AbsencesServiceSearchAllReq | PlainMessage<AbsencesServiceSearchAllReq> | undefined, b: AbsencesServiceSearchAllReq | PlainMessage<AbsencesServiceSearchAllReq> | undefined): boolean ***REMOVED***
    return proto3.util.equals(AbsencesServiceSearchAllReq, a, b);
  ***REMOVED***
***REMOVED***

