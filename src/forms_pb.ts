// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file forms.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type ***REMOVED*** BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage ***REMOVED*** from "@bufbuild/protobuf";
import ***REMOVED*** Message, proto3, protoInt64 ***REMOVED*** from "@bufbuild/protobuf";

/**
 *
 * Describes the parameters that are part of each form field
 *
 * @generated from message Genesis.FormField
 */
export class FormField extends Message<FormField> ***REMOVED***
  /**
   * The ID of the form field
   *
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * The ID of the section that this field belongs to
   *
   * @generated from field: int64 section_id = 2;
   */
  sectionId = protoInt64.zero;

  /**
   * The type of the field
   *
   * @generated from field: string type = 3;
   */
  type = "";

  /**
   * The name of the field
   *
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * The width of the field
   *
   * @generated from field: string width = 5;
   */
  width = "";

  /**
   * The name of the element
   *
   * @generated from field: string element = 6;
   */
  element = "";

  /**
   * The placeholder that needs to be displayed when the field is empty
   *
   * @generated from field: string placeholder = 7;
   */
  placeholder = "";

  /**
   * The regular expression that is used to validate this field before submission
   *
   * @generated from field: string regex = 8;
   */
  regex = "";

  /**
   * The predefined list of values that can be chosen from
   *
   * @generated from field: repeated string defined_values = 9;
   */
  definedValues: string[] = [];

  /**
   * Denotes if this field is printable (will be deprecated)
   *
   * @generated from field: bool printable = 10;
   */
  printable = false;

  /**
   * Denotes if this field is highlighted on the UI (will be deprecated)
   *
   * @generated from field: bool highlightable = 11;
   */
  highlightable = false;

  /**
   * Denotes if this field is active
   *
   * @generated from field: bool active = 12;
   */
  active = false;

  /**
   * Denotes the timestamp of creation
   *
   * @generated from field: int64 timestamp = 13;
   */
  timestamp = protoInt64.zero;

  constructor(data?: PartialMessage<FormField>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.FormField";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "section_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 5, name: "width", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 6, name: "element", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 7, name: "placeholder", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 8, name: "regex", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 9, name: "defined_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 10, name: "printable", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "highlightable", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormField ***REMOVED***
    return new FormField().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormField ***REMOVED***
    return new FormField().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormField ***REMOVED***
    return new FormField().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: FormField | PlainMessage<FormField> | undefined, b: FormField | PlainMessage<FormField> | undefined): boolean ***REMOVED***
    return proto3.util.equals(FormField, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the data stored in an individual form field data row of each dynamic form
 *
 * @generated from message Genesis.FormFieldDatum
 */
export class FormFieldDatum extends Message<FormFieldDatum> ***REMOVED***
  /**
   * The ID of the record
   *
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * The underlying form field
   *
   * @generated from field: Genesis.FormField form_field = 2;
   */
  formField?: FormField;

  /**
   * The UUID that this field belongs to
   *
   * @generated from field: string ref_uuid = 3;
   */
  refUuid = "";

  /**
   * The username of the person who added this record
   *
   * @generated from field: string added_by = 4;
   */
  addedBy = "";

  /**
   * The value entered by the user
   *
   * @generated from field: string value = 5;
   */
  value = "";

  /**
   * The list of values that have been selected by the user (in case of a checkbox or a dropdown)
   *
   * @generated from field: repeated string selected_values = 6;
   */
  selectedValues: string[] = [];

  /**
   * Denotes if this field requires approval by a competent authority
   *
   * @generated from field: bool need_approval = 7;
   */
  needApproval = false;

  /**
   * Denotes if this field is active
   *
   * @generated from field: bool active = 8;
   */
  active = false;

  /**
   * Denotes the timestamp of creation
   *
   * @generated from field: int64 timestamp = 9;
   */
  timestamp = protoInt64.zero;

  constructor(data?: PartialMessage<FormFieldDatum>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.FormFieldDatum";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "form_field", kind: "message", T: FormField ***REMOVED***,
    ***REMOVED*** no: 3, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "added_by", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 5, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 6, name: "selected_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 7, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 8, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 9, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormFieldDatum ***REMOVED***
    return new FormFieldDatum().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormFieldDatum ***REMOVED***
    return new FormFieldDatum().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormFieldDatum ***REMOVED***
    return new FormFieldDatum().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: FormFieldDatum | PlainMessage<FormFieldDatum> | undefined, b: FormFieldDatum | PlainMessage<FormFieldDatum> | undefined): boolean ***REMOVED***
    return proto3.util.equals(FormFieldDatum, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the data required for creating a dynamic form field entry
 *
 * @generated from message Genesis.FormFieldDatumCreateRequest
 */
export class FormFieldDatumCreateRequest extends Message<FormFieldDatumCreateRequest> ***REMOVED***
  /**
   * The ID of the corresponding form field
   *
   * @generated from field: int64 form_field_id = 1;
   */
  formFieldId = protoInt64.zero;

  /**
   * The value to be stored (for textarea and input)
   *
   * @generated from field: string value = 2;
   */
  value = "";

  /**
   * The list of selected values (for radio, checkbox, and select)
   *
   * @generated from field: repeated string selected_values = 3;
   */
  selectedValues: string[] = [];

  constructor(data?: PartialMessage<FormFieldDatumCreateRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.FormFieldDatumCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "form_field_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "selected_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormFieldDatumCreateRequest ***REMOVED***
    return new FormFieldDatumCreateRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormFieldDatumCreateRequest ***REMOVED***
    return new FormFieldDatumCreateRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormFieldDatumCreateRequest ***REMOVED***
    return new FormFieldDatumCreateRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: FormFieldDatumCreateRequest | PlainMessage<FormFieldDatumCreateRequest> | undefined, b: FormFieldDatumCreateRequest | PlainMessage<FormFieldDatumCreateRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(FormFieldDatumCreateRequest, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the message consisting of the list of records
 *
 * @generated from message Genesis.FormFieldDatumList
 */
export class FormFieldDatumList extends Message<FormFieldDatumList> ***REMOVED***
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.FormFieldDatum list = 1;
   */
  list: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<FormFieldDatumList>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.FormFieldDatumList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "list", kind: "message", T: FormFieldDatum, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormFieldDatumList ***REMOVED***
    return new FormFieldDatumList().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormFieldDatumList ***REMOVED***
    return new FormFieldDatumList().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormFieldDatumList ***REMOVED***
    return new FormFieldDatumList().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: FormFieldDatumList | PlainMessage<FormFieldDatumList> | undefined, b: FormFieldDatumList | PlainMessage<FormFieldDatumList> | undefined): boolean ***REMOVED***
    return proto3.util.equals(FormFieldDatumList, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the data required to fetch history of the given form field and the specified resource
 *
 * @generated from message Genesis.FormFieldDatumHistoryRequest
 */
export class FormFieldDatumHistoryRequest extends Message<FormFieldDatumHistoryRequest> ***REMOVED***
  /**
   * The ID of the corresponding form field
   *
   * @generated from field: int64 form_field_id = 1;
   */
  formFieldId = protoInt64.zero;

  /**
   * The UUID of the corresponding resource
   *
   * @generated from field: string ref_uuid = 2;
   */
  refUuid = "";

  constructor(data?: PartialMessage<FormFieldDatumHistoryRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.FormFieldDatumHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "form_field_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "ref_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FormFieldDatumHistoryRequest ***REMOVED***
    return new FormFieldDatumHistoryRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FormFieldDatumHistoryRequest ***REMOVED***
    return new FormFieldDatumHistoryRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FormFieldDatumHistoryRequest ***REMOVED***
    return new FormFieldDatumHistoryRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: FormFieldDatumHistoryRequest | PlainMessage<FormFieldDatumHistoryRequest> | undefined, b: FormFieldDatumHistoryRequest | PlainMessage<FormFieldDatumHistoryRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(FormFieldDatumHistoryRequest, a, b);
  ***REMOVED***
***REMOVED***

