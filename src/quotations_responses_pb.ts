// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file quotations_responses.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { FormFieldDatum, FormFieldDatumCreateRequest } from "./forms_pb.js";
import { ApprovalMetadata, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Genesis.QUOTATION_RESPONSE_SORT_KEY
 */
export enum QUOTATION_RESPONSE_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  QUOTATION_RESPONSE_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_CREATED_AT = 1;
   */
  QUOTATION_RESPONSE_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_MODIFIED_AT = 2;
   */
  QUOTATION_RESPONSE_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_APPROVED_ON = 3;
   */
  QUOTATION_RESPONSE_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_APPROVED_BY = 4;
   */
  QUOTATION_RESPONSE_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  QUOTATION_RESPONSE_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_COMPLETED_ON = 6;
   */
  QUOTATION_RESPONSE_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the reference ID
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_REFERENCE_ID = 10;
   */
  QUOTATION_RESPONSE_SORT_KEY_REFERENCE_ID = 10,

  /**
   * Fetch ordered results by the final ref number
   *
   * @generated from enum value: QUOTATION_RESPONSE_SORT_KEY_FINAL_REF_NUMBER = 11;
   */
  QUOTATION_RESPONSE_SORT_KEY_FINAL_REF_NUMBER = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(QUOTATION_RESPONSE_SORT_KEY)
proto3.util.setEnumType(QUOTATION_RESPONSE_SORT_KEY, "Genesis.QUOTATION_RESPONSE_SORT_KEY", [
  { no: 0, name: "QUOTATION_RESPONSE_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "QUOTATION_RESPONSE_SORT_KEY_CREATED_AT" },
  { no: 2, name: "QUOTATION_RESPONSE_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "QUOTATION_RESPONSE_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "QUOTATION_RESPONSE_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "QUOTATION_RESPONSE_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "QUOTATION_RESPONSE_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "QUOTATION_RESPONSE_SORT_KEY_REFERENCE_ID" },
  { no: 11, name: "QUOTATION_RESPONSE_SORT_KEY_FINAL_REF_NUMBER" },
]);

/**
 *
 * Describes the available sort keys for sorting quotation response items
 *
 * @generated from enum Genesis.QUOTATION_RESPONSE_ITEM_SORT_KEY
 */
export enum QUOTATION_RESPONSE_ITEM_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: QUOTATION_RESPONSE_ITEM_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  QUOTATION_RESPONSE_ITEM_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: QUOTATION_RESPONSE_ITEM_SORT_KEY_CREATED_AT = 1;
   */
  QUOTATION_RESPONSE_ITEM_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: QUOTATION_RESPONSE_ITEM_SORT_KEY_MODIFIED_AT = 2;
   */
  QUOTATION_RESPONSE_ITEM_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVED_ON = 3;
   */
  QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVED_BY = 4;
   */
  QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVER_ROLE_ID = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(QUOTATION_RESPONSE_ITEM_SORT_KEY)
proto3.util.setEnumType(QUOTATION_RESPONSE_ITEM_SORT_KEY, "Genesis.QUOTATION_RESPONSE_ITEM_SORT_KEY", [
  { no: 0, name: "QUOTATION_RESPONSE_ITEM_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "QUOTATION_RESPONSE_ITEM_SORT_KEY_CREATED_AT" },
  { no: 2, name: "QUOTATION_RESPONSE_ITEM_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "QUOTATION_RESPONSE_ITEM_SORT_KEY_APPROVER_ROLE_ID" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Genesis.QuotationsResponsesServiceCreateRequest
 */
export class QuotationsResponsesServiceCreateRequest extends Message<QuotationsResponsesServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the quotation response
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated quotation request
   *
   * @generated from field: int64 quotation_request_id = 12;
   */
  quotationRequestId = protoInt64.zero;

  /**
   * The associated party type
   *
   * @generated from field: string ref_from = 13;
   */
  refFrom = "";

  /**
   * The associated party ID
   *
   * @generated from field: int64 ref_id = 14;
   */
  refId = protoInt64.zero;

  /**
   * The associated currency
   *
   * @generated from field: int64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The description of the quotation response
   *
   * @generated from field: string description = 16;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<QuotationsResponsesServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "quotation_request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServiceCreateRequest {
    return new QuotationsResponsesServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceCreateRequest {
    return new QuotationsResponsesServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceCreateRequest {
    return new QuotationsResponsesServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServiceCreateRequest | PlainMessage<QuotationsResponsesServiceCreateRequest> | undefined, b: QuotationsResponsesServiceCreateRequest | PlainMessage<QuotationsResponsesServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Genesis.QuotationsResponsesServiceUpdateRequest
 */
export class QuotationsResponsesServiceUpdateRequest extends Message<QuotationsResponsesServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the quotation response
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The associated currency
   *
   * @generated from field: int64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The description of the quotation response
   *
   * @generated from field: string description = 16;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<QuotationsResponsesServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServiceUpdateRequest {
    return new QuotationsResponsesServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceUpdateRequest {
    return new QuotationsResponsesServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceUpdateRequest {
    return new QuotationsResponsesServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServiceUpdateRequest | PlainMessage<QuotationsResponsesServiceUpdateRequest> | undefined, b: QuotationsResponsesServiceUpdateRequest | PlainMessage<QuotationsResponsesServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Genesis.QuotationResponse
 */
export class QuotationResponse extends Message<QuotationResponse> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this quotation response
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this quotation response
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this quotation response
   *
   * @generated from field: repeated Genesis.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this quotation response was marked as completed
   *
   * @generated from field: int64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The reference ID of the quotation response
   *
   * @generated from field: string reference_id = 10;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 11;
   */
  finalRefNumber = "";

  /**
   * The associated quotation request
   *
   * @generated from field: int64 quotation_request_id = 12;
   */
  quotationRequestId = protoInt64.zero;

  /**
   * The associated party type
   *
   * @generated from field: string ref_from = 13;
   */
  refFrom = "";

  /**
   * The associated party ID
   *
   * @generated from field: int64 ref_id = 14;
   */
  refId = protoInt64.zero;

  /**
   * The associated currency
   *
   * @generated from field: int64 currency_id = 15;
   */
  currencyId = protoInt64.zero;

  /**
   * The description of the quotation response
   *
   * @generated from field: string description = 16;
   */
  description = "";

  /**
   * The list of associated quotation response items
   *
   * @generated from field: repeated Genesis.QuotationResponseItem list = 20;
   */
  list: QuotationResponseItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<QuotationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "quotation_request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "currency_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "list", kind: "message", T: QuotationResponseItem, repeated: true },
    { no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationResponse {
    return new QuotationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationResponse {
    return new QuotationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationResponse {
    return new QuotationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationResponse | PlainMessage<QuotationResponse> | undefined, b: QuotationResponse | PlainMessage<QuotationResponse> | undefined): boolean {
    return proto3.util.equals(QuotationResponse, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a quotation response
 *
 * @generated from message Genesis.QuotationsResponsesServiceItemCreateRequest
 */
export class QuotationsResponsesServiceItemCreateRequest extends Message<QuotationsResponsesServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * Stores the quotation response ID
   *
   * @generated from field: int64 quotation_response_id = 10;
   */
  quotationResponseId = protoInt64.zero;

  /**
   * Stores the corresponding item ID of the item from the quotation request
   *
   * @generated from field: int64 quotation_request_item_id = 11;
   */
  quotationRequestItemId = protoInt64.zero;

  /**
   * Stores the name of the item
   *
   * @generated from field: string name = 12;
   */
  name = "";

  /**
   * Stores the HSN/SAC code of the item
   *
   * @generated from field: string hsn_sac_code = 13;
   */
  hsnSacCode = "";

  /**
   * The internal unit of material
   *
   * @generated from field: int64 uom_id = 14;
   */
  uomId = protoInt64.zero;

  /**
   * The internal quantity offered (in cents)
   *
   * @generated from field: int64 internal_quantity = 15;
   */
  internalQuantity = protoInt64.zero;

  /**
   * The vendor's unit of material
   *
   * @generated from field: int64 vendor_uom_id = 16;
   */
  vendorUomId = protoInt64.zero;

  /**
   * The quantity offered in vendor's unit of material (in cents)
   *
   * @generated from field: int64 vendor_quantity = 17;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price per vendor's unit of material
   *
   * @generated from field: int64 vendor_unit_price = 18;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The associated tax group ID
   *
   * @generated from field: int64 tax_group_id = 19;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The delivery time in days (in cents)
   *
   * @generated from field: int64 delivery_time_in_days = 20;
   */
  deliveryTimeInDays = protoInt64.zero;

  /**
   * The specifications of the item
   *
   * @generated from field: string specifications = 21;
   */
  specifications = "";

  constructor(data?: PartialMessage<QuotationsResponsesServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "quotation_response_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "quotation_request_item_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "internal_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "vendor_uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 17, name: "vendor_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 18, name: "vendor_unit_price", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "tax_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "delivery_time_in_days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 21, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServiceItemCreateRequest {
    return new QuotationsResponsesServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceItemCreateRequest {
    return new QuotationsResponsesServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceItemCreateRequest {
    return new QuotationsResponsesServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServiceItemCreateRequest | PlainMessage<QuotationsResponsesServiceItemCreateRequest> | undefined, b: QuotationsResponsesServiceItemCreateRequest | PlainMessage<QuotationsResponsesServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a quotation response
 *
 * @generated from message Genesis.QuotationsResponsesServiceItemUpdateRequest
 */
export class QuotationsResponsesServiceItemUpdateRequest extends Message<QuotationsResponsesServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * Stores the name of the item
   *
   * @generated from field: string name = 12;
   */
  name = "";

  /**
   * Stores the HSN/SAC code of the item
   *
   * @generated from field: string hsn_sac_code = 13;
   */
  hsnSacCode = "";

  /**
   * The internal unit of material
   *
   * @generated from field: int64 uom_id = 14;
   */
  uomId = protoInt64.zero;

  /**
   * The internal quantity offered (in cents)
   *
   * @generated from field: int64 internal_quantity = 15;
   */
  internalQuantity = protoInt64.zero;

  /**
   * The vendor's unit of material
   *
   * @generated from field: int64 vendor_uom_id = 16;
   */
  vendorUomId = protoInt64.zero;

  /**
   * The quantity offered in vendor's unit of material (in cents)
   *
   * @generated from field: int64 vendor_quantity = 17;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price per vendor's unit of material
   *
   * @generated from field: int64 vendor_unit_price = 18;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The associated tax group ID
   *
   * @generated from field: int64 tax_group_id = 19;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The delivery time in days (in cents)
   *
   * @generated from field: int64 delivery_time_in_days = 20;
   */
  deliveryTimeInDays = protoInt64.zero;

  /**
   * The specifications of the item
   *
   * @generated from field: string specifications = 21;
   */
  specifications = "";

  constructor(data?: PartialMessage<QuotationsResponsesServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "internal_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "vendor_uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 17, name: "vendor_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 18, name: "vendor_unit_price", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "tax_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "delivery_time_in_days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 21, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServiceItemUpdateRequest {
    return new QuotationsResponsesServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceItemUpdateRequest {
    return new QuotationsResponsesServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceItemUpdateRequest {
    return new QuotationsResponsesServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServiceItemUpdateRequest | PlainMessage<QuotationsResponsesServiceItemUpdateRequest> | undefined, b: QuotationsResponsesServiceItemUpdateRequest | PlainMessage<QuotationsResponsesServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a quotation response
 *
 * @generated from message Genesis.QuotationResponseItem
 */
export class QuotationResponseItem extends Message<QuotationResponseItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this quotation response
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * Stores the quotation response ID
   *
   * @generated from field: int64 quotation_response_id = 10;
   */
  quotationResponseId = protoInt64.zero;

  /**
   * Stores the corresponding item ID of the item from the quotation request
   *
   * @generated from field: int64 quotation_request_item_id = 11;
   */
  quotationRequestItemId = protoInt64.zero;

  /**
   * Stores the name of the item
   *
   * @generated from field: string name = 12;
   */
  name = "";

  /**
   * Stores the HSN/SAC code of the item
   *
   * @generated from field: string hsn_sac_code = 13;
   */
  hsnSacCode = "";

  /**
   * The internal unit of material
   *
   * @generated from field: int64 uom_id = 14;
   */
  uomId = protoInt64.zero;

  /**
   * The internal quantity offered (in cents)
   *
   * @generated from field: int64 internal_quantity = 15;
   */
  internalQuantity = protoInt64.zero;

  /**
   * The vendor's unit of material
   *
   * @generated from field: int64 vendor_uom_id = 16;
   */
  vendorUomId = protoInt64.zero;

  /**
   * The quantity offered in vendor's unit of material (in cents)
   *
   * @generated from field: int64 vendor_quantity = 17;
   */
  vendorQuantity = protoInt64.zero;

  /**
   * The unit price per vendor's unit of material
   *
   * @generated from field: int64 vendor_unit_price = 18;
   */
  vendorUnitPrice = protoInt64.zero;

  /**
   * The associated tax group ID
   *
   * @generated from field: int64 tax_group_id = 19;
   */
  taxGroupId = protoInt64.zero;

  /**
   * The delivery time in days (in cents)
   *
   * @generated from field: int64 delivery_time_in_days = 20;
   */
  deliveryTimeInDays = protoInt64.zero;

  /**
   * The specifications of the item
   *
   * @generated from field: string specifications = 21;
   */
  specifications = "";

  constructor(data?: PartialMessage<QuotationResponseItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationResponseItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "quotation_response_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "quotation_request_item_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "internal_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "vendor_uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 17, name: "vendor_quantity", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 18, name: "vendor_unit_price", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 19, name: "tax_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "delivery_time_in_days", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 21, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationResponseItem {
    return new QuotationResponseItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationResponseItem {
    return new QuotationResponseItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationResponseItem {
    return new QuotationResponseItem().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationResponseItem | PlainMessage<QuotationResponseItem> | undefined, b: QuotationResponseItem | PlainMessage<QuotationResponseItem> | undefined): boolean {
    return proto3.util.equals(QuotationResponseItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of quotations responses
 *
 * @generated from message Genesis.QuotationsResponsesList
 */
export class QuotationsResponsesList extends Message<QuotationsResponsesList> {
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.QuotationResponse list = 1;
   */
  list: QuotationResponse[] = [];

  constructor(data?: PartialMessage<QuotationsResponsesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: QuotationResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesList {
    return new QuotationsResponsesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesList {
    return new QuotationsResponsesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesList {
    return new QuotationsResponsesList().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesList | PlainMessage<QuotationsResponsesList> | undefined, b: QuotationsResponsesList | PlainMessage<QuotationsResponsesList> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of quotation response items
 *
 * @generated from message Genesis.QuotationsResponsesItemsList
 */
export class QuotationsResponsesItemsList extends Message<QuotationsResponsesItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.QuotationResponseItem list = 1;
   */
  list: QuotationResponseItem[] = [];

  constructor(data?: PartialMessage<QuotationsResponsesItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: QuotationResponseItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesItemsList {
    return new QuotationsResponsesItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesItemsList {
    return new QuotationsResponsesItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesItemsList {
    return new QuotationsResponsesItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesItemsList | PlainMessage<QuotationsResponsesItemsList> | undefined, b: QuotationsResponsesItemsList | PlainMessage<QuotationsResponsesItemsList> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Genesis.QuotationResponseItemHistoryRequest
 */
export class QuotationResponseItemHistoryRequest extends Message<QuotationResponseItemHistoryRequest> {
  /**
   * Stores the quotation response ID
   *
   * @generated from field: int64 quotation_response_id = 10;
   */
  quotationResponseId = protoInt64.zero;

  /**
   * Stores the name of the item
   *
   * @generated from field: string name = 11;
   */
  name = "";

  constructor(data?: PartialMessage<QuotationResponseItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationResponseItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "quotation_response_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationResponseItemHistoryRequest {
    return new QuotationResponseItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationResponseItemHistoryRequest {
    return new QuotationResponseItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationResponseItemHistoryRequest {
    return new QuotationResponseItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationResponseItemHistoryRequest | PlainMessage<QuotationResponseItemHistoryRequest> | undefined, b: QuotationResponseItemHistoryRequest | PlainMessage<QuotationResponseItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(QuotationResponseItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes a pagination response to retrieve records
 *
 * @generated from message Genesis.QuotationsResponsesServicePaginationReq
 */
export class QuotationsResponsesServicePaginationReq extends Message<QuotationsResponsesServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QUOTATION_RESPONSE_SORT_KEY sort_key = 5;
   */
  sortKey = QUOTATION_RESPONSE_SORT_KEY.QUOTATION_RESPONSE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this quotation response
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  constructor(data?: PartialMessage<QuotationsResponsesServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QUOTATION_RESPONSE_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServicePaginationReq {
    return new QuotationsResponsesServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServicePaginationReq {
    return new QuotationsResponsesServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServicePaginationReq {
    return new QuotationsResponsesServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServicePaginationReq | PlainMessage<QuotationsResponsesServicePaginationReq> | undefined, b: QuotationsResponsesServicePaginationReq | PlainMessage<QuotationsResponsesServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination response
 *
 * @generated from message Genesis.QuotationsResponsesServicePaginationResponse
 */
export class QuotationsResponsesServicePaginationResponse extends Message<QuotationsResponsesServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination response
   *
   * @generated from field: int64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: int64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Genesis.QuotationResponse payload = 4;
   */
  payload: QuotationResponse[] = [];

  constructor(data?: PartialMessage<QuotationsResponsesServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "payload", kind: "message", T: QuotationResponse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServicePaginationResponse {
    return new QuotationsResponsesServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServicePaginationResponse {
    return new QuotationsResponsesServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServicePaginationResponse {
    return new QuotationsResponsesServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServicePaginationResponse | PlainMessage<QuotationsResponsesServicePaginationResponse> | undefined, b: QuotationsResponsesServicePaginationResponse | PlainMessage<QuotationsResponsesServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes a pagination response to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.QuotationsResponsesServiceEntityPaginationReq
 */
export class QuotationsResponsesServiceEntityPaginationReq extends Message<QuotationsResponsesServiceEntityPaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QUOTATION_RESPONSE_SORT_KEY sort_key = 5;
   */
  sortKey = QUOTATION_RESPONSE_SORT_KEY.QUOTATION_RESPONSE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  constructor(data?: PartialMessage<QuotationsResponsesServiceEntityPaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServiceEntityPaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QUOTATION_RESPONSE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServiceEntityPaginationReq {
    return new QuotationsResponsesServiceEntityPaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceEntityPaginationReq {
    return new QuotationsResponsesServiceEntityPaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceEntityPaginationReq {
    return new QuotationsResponsesServiceEntityPaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServiceEntityPaginationReq | PlainMessage<QuotationsResponsesServiceEntityPaginationReq> | undefined, b: QuotationsResponsesServiceEntityPaginationReq | PlainMessage<QuotationsResponsesServiceEntityPaginationReq> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServiceEntityPaginationReq, a, b);
  }
}

/**
 *
 * Describes the base response payload of a filter search
 *
 * @generated from message Genesis.QuotationsResponsesServiceFilterReq
 */
export class QuotationsResponsesServiceFilterReq extends Message<QuotationsResponsesServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QUOTATION_RESPONSE_SORT_KEY sort_key = 5;
   */
  sortKey = QUOTATION_RESPONSE_SORT_KEY.QUOTATION_RESPONSE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_start = 6;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_end = 7;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this quotation response
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: int64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: int64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: int64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: int64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: int64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: int64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The reference ID of the quotation response
   *
   * @generated from field: string reference_id = 20;
   */
  referenceId = "";

  /**
   * The unique reference number that has been automatically generated
   *
   * @generated from field: string final_ref_number = 21;
   */
  finalRefNumber = "";

  /**
   * The associated quotation request
   *
   * @generated from field: int64 quotation_request_id = 22;
   */
  quotationRequestId = protoInt64.zero;

  /**
   * The associated party type
   *
   * @generated from field: string ref_from = 23;
   */
  refFrom = "";

  /**
   * The associated party ID
   *
   * @generated from field: int64 ref_id = 24;
   */
  refId = protoInt64.zero;

  constructor(data?: PartialMessage<QuotationsResponsesServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QUOTATION_RESPONSE_SORT_KEY) },
    { no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "reference_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "final_ref_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "quotation_request_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 23, name: "ref_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServiceFilterReq {
    return new QuotationsResponsesServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceFilterReq {
    return new QuotationsResponsesServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceFilterReq {
    return new QuotationsResponsesServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServiceFilterReq | PlainMessage<QuotationsResponsesServiceFilterReq> | undefined, b: QuotationsResponsesServiceFilterReq | PlainMessage<QuotationsResponsesServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the response payload for performing a generic search operation on records
 *
 * @generated from message Genesis.QuotationsResponsesServiceSearchAllReq
 */
export class QuotationsResponsesServiceSearchAllReq extends Message<QuotationsResponsesServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QUOTATION_RESPONSE_SORT_KEY sort_key = 5;
   */
  sortKey = QUOTATION_RESPONSE_SORT_KEY.QUOTATION_RESPONSE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  constructor(data?: PartialMessage<QuotationsResponsesServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QUOTATION_RESPONSE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServiceSearchAllReq {
    return new QuotationsResponsesServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceSearchAllReq {
    return new QuotationsResponsesServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceSearchAllReq {
    return new QuotationsResponsesServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServiceSearchAllReq | PlainMessage<QuotationsResponsesServiceSearchAllReq> | undefined, b: QuotationsResponsesServiceSearchAllReq | PlainMessage<QuotationsResponsesServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServiceSearchAllReq, a, b);
  }
}

/**
 *
 * Describes the request payload to filter quotation response items
 *
 * @generated from message Genesis.QuotationsResponsesServiceItemsFilterReq
 */
export class QuotationsResponsesServiceItemsFilterReq extends Message<QuotationsResponsesServiceItemsFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QUOTATION_RESPONSE_ITEM_SORT_KEY sort_key = 5;
   */
  sortKey = QUOTATION_RESPONSE_ITEM_SORT_KEY.QUOTATION_RESPONSE_ITEM_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_start = 6;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_end = 7;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The start range of approved timestamp
   *
   * @generated from field: int64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: int64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: int64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: int64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * Stores the quotation response ID
   *
   * @generated from field: int64 quotation_response_id = 20;
   */
  quotationResponseId = protoInt64.zero;

  /**
   * Stores the corresponding item ID of the item from the quotation request
   *
   * @generated from field: int64 quotation_request_item_id = 21;
   */
  quotationRequestItemId = protoInt64.zero;

  /**
   * Stores the name of the item
   *
   * @generated from field: string name = 22;
   */
  name = "";

  /**
   * Stores the HSN/SAC code of the item
   *
   * @generated from field: string hsn_sac_code = 23;
   */
  hsnSacCode = "";

  /**
   * The internal unit of material
   *
   * @generated from field: int64 uom_id = 24;
   */
  uomId = protoInt64.zero;

  /**
   * The vendor's unit of material
   *
   * @generated from field: int64 vendor_uom_id = 26;
   */
  vendorUomId = protoInt64.zero;

  /**
   * The associated tax group ID
   *
   * @generated from field: int64 tax_group_id = 29;
   */
  taxGroupId = protoInt64.zero;

  constructor(data?: PartialMessage<QuotationsResponsesServiceItemsFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QuotationsResponsesServiceItemsFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QUOTATION_RESPONSE_ITEM_SORT_KEY) },
    { no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "quotation_response_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 21, name: "quotation_request_item_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 22, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "hsn_sac_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 26, name: "vendor_uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 29, name: "tax_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QuotationsResponsesServiceItemsFilterReq {
    return new QuotationsResponsesServiceItemsFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceItemsFilterReq {
    return new QuotationsResponsesServiceItemsFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QuotationsResponsesServiceItemsFilterReq {
    return new QuotationsResponsesServiceItemsFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: QuotationsResponsesServiceItemsFilterReq | PlainMessage<QuotationsResponsesServiceItemsFilterReq> | undefined, b: QuotationsResponsesServiceItemsFilterReq | PlainMessage<QuotationsResponsesServiceItemsFilterReq> | undefined): boolean {
    return proto3.util.equals(QuotationsResponsesServiceItemsFilterReq, a, b);
  }
}

