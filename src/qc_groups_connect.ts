// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file qc_groups.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QCGroup, QCGroupItem, QCGroupItemHistoryRequest, QCGroupsItemsList, QCGroupsList, QCGroupsServiceCreateRequest, QCGroupsServiceEntityPaginationReq, QCGroupsServiceFilterReq, QCGroupsServiceItemCreateRequest, QCGroupsServiceItemUpdateRequest, QCGroupsServicePaginationReq, QCGroupsServicePaginationResponse, QCGroupsServiceSearchAllReq, QCGroupsServiceUpdateRequest } from "./qc_groups_pb.js";
import { ActiveStatus, CloneRequest, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierUUID, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest } from "./base_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 *
 * Describes the common methods applicable on each qc group
 *
 * @generated from service Genesis.QCGroupsService
 */
export const QCGroupsService = {
  typeName: "Genesis.QCGroupsService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Genesis.QCGroupsService.Create
     */
    create: {
      name: "Create",
      I: QCGroupsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Genesis.QCGroupsService.Draft
     */
    draft: {
      name: "Draft",
      I: QCGroupsServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Genesis.QCGroupsService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: QCGroupsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Genesis.QCGroupsService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Genesis.QCGroupsService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Genesis.QCGroupsService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Genesis.QCGroupsService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Genesis.QCGroupsService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: QCGroupsServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Genesis.QCGroupsService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Genesis.QCGroupsService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Genesis.QCGroupsService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Genesis.QCGroupsService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Genesis.QCGroupsService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Genesis.QCGroupsService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * Send Email
     * rpc SendEmail (IdentifierWithEmailAttributes) returns (Identifier);
     *
     * @generated from rpc Genesis.QCGroupsService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Clone qc group from an existing qc group (denoted by the identifier)
     *
     * @generated from rpc Genesis.QCGroupsService.Clone
     */
    clone: {
      name: "Clone",
      I: CloneRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add a param to a qc group
     *
     * @generated from rpc Genesis.QCGroupsService.AddQCGroupItem
     */
    addQCGroupItem: {
      name: "AddQCGroupItem",
      I: QCGroupsServiceItemCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify a param in a qc group
     *
     * @generated from rpc Genesis.QCGroupsService.ModifyQCGroupItem
     */
    modifyQCGroupItem: {
      name: "ModifyQCGroupItem",
      I: QCGroupsServiceItemUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve a param in a qc group
     *
     * @generated from rpc Genesis.QCGroupsService.ApproveQCGroupItem
     */
    approveQCGroupItem: {
      name: "ApproveQCGroupItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a param in a qc group
     *
     * @generated from rpc Genesis.QCGroupsService.DeleteQCGroupItem
     */
    deleteQCGroupItem: {
      name: "DeleteQCGroupItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder params in a qc group
     *
     * @generated from rpc Genesis.QCGroupsService.ReorderQCGroupItems
     */
    reorderQCGroupItems: {
      name: "ReorderQCGroupItems",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View QC Group Item by ID
     *
     * @generated from rpc Genesis.QCGroupsService.ViewQCGroupItemByID
     */
    viewQCGroupItemByID: {
      name: "ViewQCGroupItemByID",
      I: Identifier,
      O: QCGroupItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved qc group params for given qc group ID
     *
     * @generated from rpc Genesis.QCGroupsService.ViewApprovedQCGroupItems
     */
    viewApprovedQCGroupItems: {
      name: "ViewApprovedQCGroupItems",
      I: IdentifierWithSearchKey,
      O: QCGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved qc group params for given qc group ID
     *
     * @generated from rpc Genesis.QCGroupsService.ViewUnapprovedQCGroupItems
     */
    viewUnapprovedQCGroupItems: {
      name: "ViewUnapprovedQCGroupItems",
      I: IdentifierWithSearchKey,
      O: QCGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the qc group item
     *
     * @generated from rpc Genesis.QCGroupsService.ViewQCGroupItemHistory
     */
    viewQCGroupItemHistory: {
      name: "ViewQCGroupItemHistory",
      I: QCGroupItemHistoryRequest,
      O: QCGroupsItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Genesis.QCGroupsService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: QCGroup,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Genesis.QCGroupsService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: QCGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Genesis.QCGroupsService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: QCGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Genesis.QCGroupsService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: QCGroupsServicePaginationReq,
      O: QCGroupsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination with the given entity UUID
     *
     * @generated from rpc Genesis.QCGroupsService.ViewWithPaginationForEntityUUID
     */
    viewWithPaginationForEntityUUID: {
      name: "ViewWithPaginationForEntityUUID",
      I: QCGroupsServiceEntityPaginationReq,
      O: QCGroupsServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Genesis.QCGroupsService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: QCGroupsServiceSearchAllReq,
      O: QCGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Genesis.QCGroupsService.Filter
     */
    filter: {
      name: "Filter",
      I: QCGroupsServiceFilterReq,
      O: QCGroupsList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Genesis.QCGroupsService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

