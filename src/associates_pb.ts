// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file associates.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { EmployeeMetadata, SORT_ORDER } from "./base_pb.js";

/**
 *
 * Describes the available options that a associate can be associated with
 *
 * @generated from enum Genesis.ASSOCIATE_ORG_REF_FROM
 */
export enum ASSOCIATE_ORG_REF_FROM {
  /**
   * The default value which is an empty string
   *
   * @generated from enum value: ASSOCIATE_ORG_REF_FROM_UNSPECIFIED = 0;
   */
  ASSOCIATE_ORG_REF_FROM_UNSPECIFIED = 0,

  /**
   * When the associate has been associated to a client
   *
   * @generated from enum value: ASSOCIATE_ORG_REF_FROM_CLIENT = 1;
   */
  ASSOCIATE_ORG_REF_FROM_CLIENT = 1,

  /**
   * When the associate has been associated to a vendor
   *
   * @generated from enum value: ASSOCIATE_ORG_REF_FROM_VENDOR = 2;
   */
  ASSOCIATE_ORG_REF_FROM_VENDOR = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ASSOCIATE_ORG_REF_FROM)
proto3.util.setEnumType(ASSOCIATE_ORG_REF_FROM, "Genesis.ASSOCIATE_ORG_REF_FROM", [
  { no: 0, name: "ASSOCIATE_ORG_REF_FROM_UNSPECIFIED" },
  { no: 1, name: "ASSOCIATE_ORG_REF_FROM_CLIENT" },
  { no: 2, name: "ASSOCIATE_ORG_REF_FROM_VENDOR" },
]);

/**
 *
 * Describes the available sort keys for retrieving associates
 *
 * @generated from enum Genesis.ASSOCIATE_SORT_KEY
 */
export enum ASSOCIATE_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: ASSOCIATE_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  ASSOCIATE_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: ASSOCIATE_SORT_KEY_CREATED_AT = 1;
   */
  ASSOCIATE_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: ASSOCIATE_SORT_KEY_MODIFIED_AT = 2;
   */
  ASSOCIATE_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by first name
   *
   * @generated from enum value: ASSOCIATE_SORT_KEY_FIRST_NAME = 10;
   */
  ASSOCIATE_SORT_KEY_FIRST_NAME = 10,

  /**
   * Fetch ordered results by middle name
   *
   * @generated from enum value: ASSOCIATE_SORT_KEY_MIDDLE_NAME = 11;
   */
  ASSOCIATE_SORT_KEY_MIDDLE_NAME = 11,

  /**
   * Fetch ordered results by last name
   *
   * @generated from enum value: ASSOCIATE_SORT_KEY_LAST_NAME = 12;
   */
  ASSOCIATE_SORT_KEY_LAST_NAME = 12,

  /**
   * Fetch ordered results by organization name
   *
   * @generated from enum value: ASSOCIATE_SORT_KEY_ORG_NAME = 13;
   */
  ASSOCIATE_SORT_KEY_ORG_NAME = 13,

  /**
   * Fetch ordered results by job title
   *
   * @generated from enum value: ASSOCIATE_SORT_KEY_JOB_TITLE = 14;
   */
  ASSOCIATE_SORT_KEY_JOB_TITLE = 14,
}
// Retrieve enum metadata with: proto3.getEnumType(ASSOCIATE_SORT_KEY)
proto3.util.setEnumType(ASSOCIATE_SORT_KEY, "Genesis.ASSOCIATE_SORT_KEY", [
  { no: 0, name: "ASSOCIATE_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "ASSOCIATE_SORT_KEY_CREATED_AT" },
  { no: 2, name: "ASSOCIATE_SORT_KEY_MODIFIED_AT" },
  { no: 10, name: "ASSOCIATE_SORT_KEY_FIRST_NAME" },
  { no: 11, name: "ASSOCIATE_SORT_KEY_MIDDLE_NAME" },
  { no: 12, name: "ASSOCIATE_SORT_KEY_LAST_NAME" },
  { no: 13, name: "ASSOCIATE_SORT_KEY_ORG_NAME" },
  { no: 14, name: "ASSOCIATE_SORT_KEY_JOB_TITLE" },
]);

/**
 *
 * Describes the data structure of each associate on the platform
 *
 * @generated from message Genesis.Associate
 */
export class Associate extends Message<Associate> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this resource
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The first name of the associate
   *
   * @generated from field: string first_name = 10;
   */
  firstName = "";

  /**
   * The middle name of the associate
   *
   * @generated from field: string middle_name = 11;
   */
  middleName = "";

  /**
   * The last name of the associate
   *
   * @generated from field: string last_name = 12;
   */
  lastName = "";

  /**
   * The association with a vendor or a client
   *
   * @generated from field: Genesis.ASSOCIATE_ORG_REF_FROM org_ref_from = 13;
   */
  orgRefFrom = ASSOCIATE_ORG_REF_FROM.ASSOCIATE_ORG_REF_FROM_UNSPECIFIED;

  /**
   * The ID of the associated vendor or client
   *
   * @generated from field: int64 org_ref_id = 14;
   */
  orgRefId = protoInt64.zero;

  /**
   * The name of the organization that the associate works in. Will be autofilled if the associate is associated with either a client or a vendor
   *
   * @generated from field: string org_name = 15;
   */
  orgName = "";

  /**
   * The job title of the associate
   *
   * @generated from field: string job_title = 16;
   */
  jobTitle = "";

  /**
   * The department that the associates works in
   *
   * @generated from field: string department = 17;
   */
  department = "";

  /**
   * The work phone number of the associate
   *
   * @generated from field: string work_phone = 18;
   */
  workPhone = "";

  /**
   * The work email address of the associate
   *
   * @generated from field: string work_email = 19;
   */
  workEmail = "";

  /**
   * The personal phone number of the associate
   *
   * @generated from field: string personal_phone = 20;
   */
  personalPhone = "";

  /**
   * The personal email address of the associate
   *
   * @generated from field: string personal_email = 21;
   */
  personalEmail = "";

  /**
   * The associate's birthday
   *
   * @generated from field: string birthday = 22;
   */
  birthday = "";

  /**
   * The associate's anniversary
   *
   * @generated from field: string anniversary = 23;
   */
  anniversary = "";

  /**
   * A short description of the associate
   *
   * @generated from field: string description = 24;
   */
  description = "";

  constructor(data?: PartialMessage<Associate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.Associate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "middle_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "org_ref_from", kind: "enum", T: proto3.getEnumType(ASSOCIATE_ORG_REF_FROM) },
    { no: 14, name: "org_ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "org_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "job_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "department", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "work_phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "work_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "personal_phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "personal_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "birthday", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "anniversary", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Associate {
    return new Associate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Associate {
    return new Associate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Associate {
    return new Associate().fromJsonString(jsonString, options);
  }

  static equals(a: Associate | PlainMessage<Associate> | undefined, b: Associate | PlainMessage<Associate> | undefined): boolean {
    return proto3.util.equals(Associate, a, b);
  }
}

/**
 *
 * Describes the data structure that stores a list of associates
 *
 * @generated from message Genesis.AssociatesList
 */
export class AssociatesList extends Message<AssociatesList> {
  /**
   * List of associates
   *
   * @generated from field: repeated Genesis.Associate list = 1;
   */
  list: Associate[] = [];

  constructor(data?: PartialMessage<AssociatesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssociatesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: Associate, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssociatesList {
    return new AssociatesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssociatesList {
    return new AssociatesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssociatesList {
    return new AssociatesList().fromJsonString(jsonString, options);
  }

  static equals(a: AssociatesList | PlainMessage<AssociatesList> | undefined, b: AssociatesList | PlainMessage<AssociatesList> | undefined): boolean {
    return proto3.util.equals(AssociatesList, a, b);
  }
}

/**
 *
 * Describes the data structure that responds to a pagination request
 *
 * @generated from message Genesis.AssociatePaginationResp
 */
export class AssociatePaginationResp extends Message<AssociatePaginationResp> {
  /**
   * The number of records in this payload
   *
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: int64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: int64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Genesis.Associate payload = 4;
   */
  payload: Associate[] = [];

  constructor(data?: PartialMessage<AssociatePaginationResp>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssociatePaginationResp";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "payload", kind: "message", T: Associate, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssociatePaginationResp {
    return new AssociatePaginationResp().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssociatePaginationResp {
    return new AssociatePaginationResp().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssociatePaginationResp {
    return new AssociatePaginationResp().fromJsonString(jsonString, options);
  }

  static equals(a: AssociatePaginationResp | PlainMessage<AssociatePaginationResp> | undefined, b: AssociatePaginationResp | PlainMessage<AssociatePaginationResp> | undefined): boolean {
    return proto3.util.equals(AssociatePaginationResp, a, b);
  }
}

/**
 *
 * Describes the necessary data structure during creation of a associate
 *
 * @generated from message Genesis.AssociatesServiceCreateRequest
 */
export class AssociatesServiceCreateRequest extends Message<AssociatesServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The first name of the associate
   *
   * @generated from field: string first_name = 10;
   */
  firstName = "";

  /**
   * The middle name of the associate
   *
   * @generated from field: string middle_name = 11;
   */
  middleName = "";

  /**
   * The last name of the associate
   *
   * @generated from field: string last_name = 12;
   */
  lastName = "";

  /**
   * The association with a vendor or a client
   *
   * @generated from field: Genesis.ASSOCIATE_ORG_REF_FROM org_ref_from = 13;
   */
  orgRefFrom = ASSOCIATE_ORG_REF_FROM.ASSOCIATE_ORG_REF_FROM_UNSPECIFIED;

  /**
   * The ID of the associated vendor or client
   *
   * @generated from field: int64 org_ref_id = 14;
   */
  orgRefId = protoInt64.zero;

  /**
   * The name of the organization that the associate works in. Will be autofilled if the associate is associated with either a client or a vendor
   *
   * @generated from field: string org_name = 15;
   */
  orgName = "";

  /**
   * The job title of the associate
   *
   * @generated from field: string job_title = 16;
   */
  jobTitle = "";

  /**
   * The department that the associates works in
   *
   * @generated from field: string department = 17;
   */
  department = "";

  /**
   * The work phone number of the associate
   *
   * @generated from field: string work_phone = 18;
   */
  workPhone = "";

  /**
   * The work email address of the associate
   *
   * [(genesis_validate.rules).string.email = true];
   *
   * @generated from field: string work_email = 19;
   */
  workEmail = "";

  /**
   * The personal phone number of the associate
   *
   * @generated from field: string personal_phone = 20;
   */
  personalPhone = "";

  /**
   * The personal email address of the associate
   *
   * [(genesis_validate.rules).string.email = true];
   *
   * @generated from field: string personal_email = 21;
   */
  personalEmail = "";

  /**
   * The associate's birthday
   *
   * @generated from field: string birthday = 22;
   */
  birthday = "";

  /**
   * The associate's anniversary
   *
   * @generated from field: string anniversary = 23;
   */
  anniversary = "";

  /**
   * A short description of the associate
   *
   * @generated from field: string description = 24;
   */
  description = "";

  constructor(data?: PartialMessage<AssociatesServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssociatesServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "middle_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "org_ref_from", kind: "enum", T: proto3.getEnumType(ASSOCIATE_ORG_REF_FROM) },
    { no: 14, name: "org_ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "org_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "job_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "department", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "work_phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "work_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "personal_phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "personal_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "birthday", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "anniversary", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssociatesServiceCreateRequest {
    return new AssociatesServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssociatesServiceCreateRequest {
    return new AssociatesServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssociatesServiceCreateRequest {
    return new AssociatesServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssociatesServiceCreateRequest | PlainMessage<AssociatesServiceCreateRequest> | undefined, b: AssociatesServiceCreateRequest | PlainMessage<AssociatesServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(AssociatesServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the data structure to perform the update (draft/revision) operation on a associate
 *
 * @generated from message Genesis.AssociatesServiceUpdateRequest
 */
export class AssociatesServiceUpdateRequest extends Message<AssociatesServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the associate that needs to be updated
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The first name of the associate
   *
   * @generated from field: string first_name = 10;
   */
  firstName = "";

  /**
   * The middle name of the associate
   *
   * @generated from field: string middle_name = 11;
   */
  middleName = "";

  /**
   * The last name of the associate
   *
   * @generated from field: string last_name = 12;
   */
  lastName = "";

  /**
   * The association with a vendor or a client
   *
   * @generated from field: Genesis.ASSOCIATE_ORG_REF_FROM org_ref_from = 13;
   */
  orgRefFrom = ASSOCIATE_ORG_REF_FROM.ASSOCIATE_ORG_REF_FROM_UNSPECIFIED;

  /**
   * The ID of the associated vendor or client
   *
   * @generated from field: int64 org_ref_id = 14;
   */
  orgRefId = protoInt64.zero;

  /**
   * The name of the organization that the associate works in. Will be autofilled if the associate is associated with either a client or a vendor
   *
   * @generated from field: string org_name = 15;
   */
  orgName = "";

  /**
   * The job title of the associate
   *
   * @generated from field: string job_title = 16;
   */
  jobTitle = "";

  /**
   * The department that the associates works in
   *
   * @generated from field: string department = 17;
   */
  department = "";

  /**
   * The work phone number of the associate
   *
   * @generated from field: string work_phone = 18;
   */
  workPhone = "";

  /**
   * The work email address of the associate
   *
   * [(genesis_validate.rules).string.email = true];
   *
   * @generated from field: string work_email = 19;
   */
  workEmail = "";

  /**
   * The personal phone number of the associate
   *
   * @generated from field: string personal_phone = 20;
   */
  personalPhone = "";

  /**
   * The personal email address of the associate
   *
   * [(genesis_validate.rules).string.email = true];
   *
   * @generated from field: string personal_email = 21;
   */
  personalEmail = "";

  /**
   * The associate's birthday
   *
   * @generated from field: string birthday = 22;
   */
  birthday = "";

  /**
   * The associate's anniversary
   *
   * @generated from field: string anniversary = 23;
   */
  anniversary = "";

  /**
   * A short description of the associate
   *
   * @generated from field: string description = 24;
   */
  description = "";

  constructor(data?: PartialMessage<AssociatesServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssociatesServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "middle_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "org_ref_from", kind: "enum", T: proto3.getEnumType(ASSOCIATE_ORG_REF_FROM) },
    { no: 14, name: "org_ref_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "org_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "job_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "department", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "work_phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "work_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "personal_phone", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "personal_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "birthday", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "anniversary", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssociatesServiceUpdateRequest {
    return new AssociatesServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssociatesServiceUpdateRequest {
    return new AssociatesServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssociatesServiceUpdateRequest {
    return new AssociatesServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssociatesServiceUpdateRequest | PlainMessage<AssociatesServiceUpdateRequest> | undefined, b: AssociatesServiceUpdateRequest | PlainMessage<AssociatesServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(AssociatesServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Genesis.AssociatesServicePaginationReq
 */
export class AssociatesServicePaginationReq extends Message<AssociatesServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ASSOCIATE_SORT_KEY sort_key = 5;
   */
  sortKey = ASSOCIATE_SORT_KEY.ASSOCIATE_SORT_KEY_ID_UNSPECIFIED;

  constructor(data?: PartialMessage<AssociatesServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssociatesServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ASSOCIATE_SORT_KEY) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssociatesServicePaginationReq {
    return new AssociatesServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssociatesServicePaginationReq {
    return new AssociatesServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssociatesServicePaginationReq {
    return new AssociatesServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: AssociatesServicePaginationReq | PlainMessage<AssociatesServicePaginationReq> | undefined, b: AssociatesServicePaginationReq | PlainMessage<AssociatesServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(AssociatesServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.AssociatesServiceEntityPaginationReq
 */
export class AssociatesServiceEntityPaginationReq extends Message<AssociatesServiceEntityPaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.ASSOCIATE_SORT_KEY sort_key = 5;
   */
  sortKey = ASSOCIATE_SORT_KEY.ASSOCIATE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter associates
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  constructor(data?: PartialMessage<AssociatesServiceEntityPaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssociatesServiceEntityPaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ASSOCIATE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssociatesServiceEntityPaginationReq {
    return new AssociatesServiceEntityPaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssociatesServiceEntityPaginationReq {
    return new AssociatesServiceEntityPaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssociatesServiceEntityPaginationReq {
    return new AssociatesServiceEntityPaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: AssociatesServiceEntityPaginationReq | PlainMessage<AssociatesServiceEntityPaginationReq> | undefined, b: AssociatesServiceEntityPaginationReq | PlainMessage<AssociatesServiceEntityPaginationReq> | undefined): boolean {
    return proto3.util.equals(AssociatesServiceEntityPaginationReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on associates
 *
 * @generated from message Genesis.AssociatesServiceSearchAllReq
 */
export class AssociatesServiceSearchAllReq extends Message<AssociatesServiceSearchAllReq> {
  /**
   * The sort order that is to be used to fetch the response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the response
   *
   * @generated from field: Genesis.ASSOCIATE_SORT_KEY sort_key = 5;
   */
  sortKey = ASSOCIATE_SORT_KEY.ASSOCIATE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter associates
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 10;
   */
  searchKey = "";

  constructor(data?: PartialMessage<AssociatesServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.AssociatesServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(ASSOCIATE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssociatesServiceSearchAllReq {
    return new AssociatesServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssociatesServiceSearchAllReq {
    return new AssociatesServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssociatesServiceSearchAllReq {
    return new AssociatesServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: AssociatesServiceSearchAllReq | PlainMessage<AssociatesServiceSearchAllReq> | undefined, b: AssociatesServiceSearchAllReq | PlainMessage<AssociatesServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(AssociatesServiceSearchAllReq, a, b);
  }
}

