// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file equations_replaceables.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { ApprovalMetadata, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS } from "./base_pb.js";

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Genesis.EQUATION_REPLACEABLE_SORT_KEY
 */
export enum EQUATION_REPLACEABLE_SORT_KEY {
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  EQUATION_REPLACEABLE_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_CREATED_AT = 1;
   */
  EQUATION_REPLACEABLE_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_MODIFIED_AT = 2;
   */
  EQUATION_REPLACEABLE_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_APPROVED_ON = 3;
   */
  EQUATION_REPLACEABLE_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_APPROVED_BY = 4;
   */
  EQUATION_REPLACEABLE_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  EQUATION_REPLACEABLE_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_COMPLETED_ON = 6;
   */
  EQUATION_REPLACEABLE_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the name
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_NAME = 10;
   */
  EQUATION_REPLACEABLE_SORT_KEY_NAME = 10,

  /**
   * Fetch ordered results by the family ID
   *
   * @generated from enum value: EQUATION_REPLACEABLE_SORT_KEY_FAMILY_ID = 11;
   */
  EQUATION_REPLACEABLE_SORT_KEY_FAMILY_ID = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(EQUATION_REPLACEABLE_SORT_KEY)
proto3.util.setEnumType(EQUATION_REPLACEABLE_SORT_KEY, "Genesis.EQUATION_REPLACEABLE_SORT_KEY", [
  { no: 0, name: "EQUATION_REPLACEABLE_SORT_KEY_ID_UNSPECIFIED" },
  { no: 1, name: "EQUATION_REPLACEABLE_SORT_KEY_CREATED_AT" },
  { no: 2, name: "EQUATION_REPLACEABLE_SORT_KEY_MODIFIED_AT" },
  { no: 3, name: "EQUATION_REPLACEABLE_SORT_KEY_APPROVED_ON" },
  { no: 4, name: "EQUATION_REPLACEABLE_SORT_KEY_APPROVED_BY" },
  { no: 5, name: "EQUATION_REPLACEABLE_SORT_KEY_APPROVER_ROLE_ID" },
  { no: 6, name: "EQUATION_REPLACEABLE_SORT_KEY_COMPLETED_ON" },
  { no: 10, name: "EQUATION_REPLACEABLE_SORT_KEY_NAME" },
  { no: 11, name: "EQUATION_REPLACEABLE_SORT_KEY_FAMILY_ID" },
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Genesis.EquationsReplaceablesServiceCreateRequest
 */
export class EquationsReplaceablesServiceCreateRequest extends Message<EquationsReplaceablesServiceCreateRequest> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the equation replaceable
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The ID of the family that this equation belongs to
   *
   * @generated from field: int64 family_id = 12;
   */
  familyId = protoInt64.zero;

  /**
   * The description of the equation replaceable
   *
   * @generated from field: string description = 13;
   */
  description = "";

  constructor(data?: PartialMessage<EquationsReplaceablesServiceCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServiceCreateRequest {
    return new EquationsReplaceablesServiceCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceCreateRequest {
    return new EquationsReplaceablesServiceCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceCreateRequest {
    return new EquationsReplaceablesServiceCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServiceCreateRequest | PlainMessage<EquationsReplaceablesServiceCreateRequest> | undefined, b: EquationsReplaceablesServiceCreateRequest | PlainMessage<EquationsReplaceablesServiceCreateRequest> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServiceCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Genesis.EquationsReplaceablesServiceUpdateRequest
 */
export class EquationsReplaceablesServiceUpdateRequest extends Message<EquationsReplaceablesServiceUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the equation replaceable
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The description of the equation replaceable
   *
   * @generated from field: string description = 13;
   */
  description = "";

  constructor(data?: PartialMessage<EquationsReplaceablesServiceUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServiceUpdateRequest {
    return new EquationsReplaceablesServiceUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceUpdateRequest {
    return new EquationsReplaceablesServiceUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceUpdateRequest {
    return new EquationsReplaceablesServiceUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServiceUpdateRequest | PlainMessage<EquationsReplaceablesServiceUpdateRequest> | undefined, b: EquationsReplaceablesServiceUpdateRequest | PlainMessage<EquationsReplaceablesServiceUpdateRequest> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServiceUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Genesis.EquationReplaceable
 */
export class EquationReplaceable extends Message<EquationReplaceable> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this equation replaceable
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this equation replaceable
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this equation replaceable
   *
   * @generated from field: repeated Genesis.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this equation replaceable was marked as completed
   *
   * @generated from field: int64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the equation replaceable
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The ID of the family that this equation belongs to
   *
   * @generated from field: int64 family_id = 12;
   */
  familyId = protoInt64.zero;

  /**
   * The description of the equation replaceable
   *
   * @generated from field: string description = 13;
   */
  description = "";

  /**
   * The list of associated equation replaceable items
   *
   * @generated from field: repeated Genesis.EquationReplaceableItem list = 20;
   */
  list: EquationReplaceableItem[] = [];

  /**
   * The total price of the equation replaceable
   *
   * @generated from field: double total_price = 40;
   */
  totalPrice = 0;

  constructor(data?: PartialMessage<EquationReplaceable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationReplaceable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true },
    { no: 6, name: "completed_on", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "list", kind: "message", T: EquationReplaceableItem, repeated: true },
    { no: 40, name: "total_price", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationReplaceable {
    return new EquationReplaceable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationReplaceable {
    return new EquationReplaceable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationReplaceable {
    return new EquationReplaceable().fromJsonString(jsonString, options);
  }

  static equals(a: EquationReplaceable | PlainMessage<EquationReplaceable> | undefined, b: EquationReplaceable | PlainMessage<EquationReplaceable> | undefined): boolean {
    return proto3.util.equals(EquationReplaceable, a, b);
  }
}

/**
 *
 * Describes the parameters required to add an item to a equation replaceable
 *
 * @generated from message Genesis.EquationsReplaceablesServiceItemCreateRequest
 */
export class EquationsReplaceablesServiceItemCreateRequest extends Message<EquationsReplaceablesServiceItemCreateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the ID of the equation replaceable
   *
   * @generated from field: int64 equation_id = 10;
   */
  equationId = protoInt64.zero;

  /**
   * Stores the type of the item (whether it is a consumable, or a spare)
   *
   * @generated from field: string replaceable_type = 11;
   */
  replaceableType = "";

  /**
   * The ID of the family that the equation depends upon
   *
   * @generated from field: int64 replaceable_family_id = 12;
   */
  replaceableFamilyId = protoInt64.zero;

  /**
   * The optional unit price of this family
   *
   * @generated from field: int64 unit_price = 13;
   */
  unitPrice = protoInt64.zero;

  /**
   * The optional specifications
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<EquationsReplaceablesServiceItemCreateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "equation_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "replaceable_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "replaceable_family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "unit_price", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServiceItemCreateRequest {
    return new EquationsReplaceablesServiceItemCreateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceItemCreateRequest {
    return new EquationsReplaceablesServiceItemCreateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceItemCreateRequest {
    return new EquationsReplaceablesServiceItemCreateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServiceItemCreateRequest | PlainMessage<EquationsReplaceablesServiceItemCreateRequest> | undefined, b: EquationsReplaceablesServiceItemCreateRequest | PlainMessage<EquationsReplaceablesServiceItemCreateRequest> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServiceItemCreateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters required to update an item in a equation replaceable
 *
 * @generated from message Genesis.EquationsReplaceablesServiceItemUpdateRequest
 */
export class EquationsReplaceablesServiceItemUpdateRequest extends Message<EquationsReplaceablesServiceItemUpdateRequest> {
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Stores the type of the item (whether it is a consumable, or a spare)
   *
   * @generated from field: string replaceable_type = 11;
   */
  replaceableType = "";

  /**
   * The optional unit price of this family
   *
   * @generated from field: int64 unit_price = 13;
   */
  unitPrice = protoInt64.zero;

  /**
   * The optional specifications
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<EquationsReplaceablesServiceItemUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "replaceable_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "unit_price", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServiceItemUpdateRequest {
    return new EquationsReplaceablesServiceItemUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceItemUpdateRequest {
    return new EquationsReplaceablesServiceItemUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceItemUpdateRequest {
    return new EquationsReplaceablesServiceItemUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServiceItemUpdateRequest | PlainMessage<EquationsReplaceablesServiceItemUpdateRequest> | undefined, b: EquationsReplaceablesServiceItemUpdateRequest | PlainMessage<EquationsReplaceablesServiceItemUpdateRequest> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServiceItemUpdateRequest, a, b);
  }
}

/**
 *
 * Describes the parameters that constitute an item associated to a equation replaceable
 *
 * @generated from message Genesis.EquationReplaceableItem
 */
export class EquationReplaceableItem extends Message<EquationReplaceableItem> {
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this equation replaceable
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the ID of the equation replaceable
   *
   * @generated from field: int64 equation_id = 10;
   */
  equationId = protoInt64.zero;

  /**
   * Stores the type of the item (whether it is a consumable, or a spare)
   *
   * @generated from field: string replaceable_type = 11;
   */
  replaceableType = "";

  /**
   * The ID of the family that the equation depends upon
   *
   * @generated from field: int64 replaceable_family_id = 12;
   */
  replaceableFamilyId = protoInt64.zero;

  /**
   * The optional unit price of this family
   *
   * @generated from field: int64 unit_price = 13;
   */
  unitPrice = protoInt64.zero;

  /**
   * The optional specifications
   *
   * @generated from field: string specifications = 14;
   */
  specifications = "";

  constructor(data?: PartialMessage<EquationReplaceableItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationReplaceableItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "message", T: EmployeeMetadata },
    { no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata },
    { no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "equation_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "replaceable_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "replaceable_family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "unit_price", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "specifications", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationReplaceableItem {
    return new EquationReplaceableItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationReplaceableItem {
    return new EquationReplaceableItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationReplaceableItem {
    return new EquationReplaceableItem().fromJsonString(jsonString, options);
  }

  static equals(a: EquationReplaceableItem | PlainMessage<EquationReplaceableItem> | undefined, b: EquationReplaceableItem | PlainMessage<EquationReplaceableItem> | undefined): boolean {
    return proto3.util.equals(EquationReplaceableItem, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of equations replaceables
 *
 * @generated from message Genesis.EquationsReplaceablesList
 */
export class EquationsReplaceablesList extends Message<EquationsReplaceablesList> {
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.EquationReplaceable list = 1;
   */
  list: EquationReplaceable[] = [];

  constructor(data?: PartialMessage<EquationsReplaceablesList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: EquationReplaceable, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesList {
    return new EquationsReplaceablesList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesList {
    return new EquationsReplaceablesList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesList {
    return new EquationsReplaceablesList().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesList | PlainMessage<EquationsReplaceablesList> | undefined, b: EquationsReplaceablesList | PlainMessage<EquationsReplaceablesList> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesList, a, b);
  }
}

/**
 *
 * Describes the message consisting of the list of equation replaceable items
 *
 * @generated from message Genesis.EquationsReplaceablesItemsList
 */
export class EquationsReplaceablesItemsList extends Message<EquationsReplaceablesItemsList> {
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.EquationReplaceableItem list = 1;
   */
  list: EquationReplaceableItem[] = [];

  constructor(data?: PartialMessage<EquationsReplaceablesItemsList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "list", kind: "message", T: EquationReplaceableItem, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesItemsList {
    return new EquationsReplaceablesItemsList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesItemsList {
    return new EquationsReplaceablesItemsList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesItemsList {
    return new EquationsReplaceablesItemsList().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesItemsList | PlainMessage<EquationsReplaceablesItemsList> | undefined, b: EquationsReplaceablesItemsList | PlainMessage<EquationsReplaceablesItemsList> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesItemsList, a, b);
  }
}

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Genesis.EquationReplaceableItemHistoryRequest
 */
export class EquationReplaceableItemHistoryRequest extends Message<EquationReplaceableItemHistoryRequest> {
  /**
   * Stores the ID of the equation replaceable
   *
   * @generated from field: int64 equation_id = 10;
   */
  equationId = protoInt64.zero;

  /**
   * The ID of the family that the equation depends upon
   *
   * @generated from field: int64 replaceable_family_id = 11;
   */
  replaceableFamilyId = protoInt64.zero;

  constructor(data?: PartialMessage<EquationReplaceableItemHistoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationReplaceableItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "equation_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 11, name: "replaceable_family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationReplaceableItemHistoryRequest {
    return new EquationReplaceableItemHistoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationReplaceableItemHistoryRequest {
    return new EquationReplaceableItemHistoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationReplaceableItemHistoryRequest {
    return new EquationReplaceableItemHistoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EquationReplaceableItemHistoryRequest | PlainMessage<EquationReplaceableItemHistoryRequest> | undefined, b: EquationReplaceableItemHistoryRequest | PlainMessage<EquationReplaceableItemHistoryRequest> | undefined): boolean {
    return proto3.util.equals(EquationReplaceableItemHistoryRequest, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Genesis.EquationsReplaceablesServicePaginationReq
 */
export class EquationsReplaceablesServicePaginationReq extends Message<EquationsReplaceablesServicePaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.EQUATION_REPLACEABLE_SORT_KEY sort_key = 5;
   */
  sortKey = EQUATION_REPLACEABLE_SORT_KEY.EQUATION_REPLACEABLE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this equation replaceable
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  constructor(data?: PartialMessage<EquationsReplaceablesServicePaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(EQUATION_REPLACEABLE_SORT_KEY) },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServicePaginationReq {
    return new EquationsReplaceablesServicePaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServicePaginationReq {
    return new EquationsReplaceablesServicePaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServicePaginationReq {
    return new EquationsReplaceablesServicePaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServicePaginationReq | PlainMessage<EquationsReplaceablesServicePaginationReq> | undefined, b: EquationsReplaceablesServicePaginationReq | PlainMessage<EquationsReplaceablesServicePaginationReq> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServicePaginationReq, a, b);
  }
}

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Genesis.EquationsReplaceablesServicePaginationResponse
 */
export class EquationsReplaceablesServicePaginationResponse extends Message<EquationsReplaceablesServicePaginationResponse> {
  /**
   * The number of records in this payload
   *
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: int64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: int64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Genesis.EquationReplaceable payload = 4;
   */
  payload: EquationReplaceable[] = [];

  constructor(data?: PartialMessage<EquationsReplaceablesServicePaginationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "payload", kind: "message", T: EquationReplaceable, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServicePaginationResponse {
    return new EquationsReplaceablesServicePaginationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServicePaginationResponse {
    return new EquationsReplaceablesServicePaginationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServicePaginationResponse {
    return new EquationsReplaceablesServicePaginationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServicePaginationResponse | PlainMessage<EquationsReplaceablesServicePaginationResponse> | undefined, b: EquationsReplaceablesServicePaginationResponse | PlainMessage<EquationsReplaceablesServicePaginationResponse> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServicePaginationResponse, a, b);
  }
}

/**
 *
 * Describes a pagination request to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.EquationsReplaceablesServiceEntityPaginationReq
 */
export class EquationsReplaceablesServiceEntityPaginationReq extends Message<EquationsReplaceablesServiceEntityPaginationReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.EQUATION_REPLACEABLE_SORT_KEY sort_key = 5;
   */
  sortKey = EQUATION_REPLACEABLE_SORT_KEY.EQUATION_REPLACEABLE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  constructor(data?: PartialMessage<EquationsReplaceablesServiceEntityPaginationReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServiceEntityPaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(EQUATION_REPLACEABLE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServiceEntityPaginationReq {
    return new EquationsReplaceablesServiceEntityPaginationReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceEntityPaginationReq {
    return new EquationsReplaceablesServiceEntityPaginationReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceEntityPaginationReq {
    return new EquationsReplaceablesServiceEntityPaginationReq().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServiceEntityPaginationReq | PlainMessage<EquationsReplaceablesServiceEntityPaginationReq> | undefined, b: EquationsReplaceablesServiceEntityPaginationReq | PlainMessage<EquationsReplaceablesServiceEntityPaginationReq> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServiceEntityPaginationReq, a, b);
  }
}

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Genesis.EquationsReplaceablesServiceFilterReq
 */
export class EquationsReplaceablesServiceFilterReq extends Message<EquationsReplaceablesServiceFilterReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.EQUATION_REPLACEABLE_SORT_KEY sort_key = 5;
   */
  sortKey = EQUATION_REPLACEABLE_SORT_KEY.EQUATION_REPLACEABLE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_start = 6;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_end = 7;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this equation replaceable
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: int64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: int64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: int64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: int64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: int64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: int64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The name of the equation replaceable
   *
   * @generated from field: string name = 20;
   */
  name = "";

  /**
   * The ID of the family that this equation belongs to
   *
   * @generated from field: int64 family_id = 21;
   */
  familyId = protoInt64.zero;

  constructor(data?: PartialMessage<EquationsReplaceablesServiceFilterReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(EQUATION_REPLACEABLE_SORT_KEY) },
    { no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 15, name: "completed_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 16, name: "completed_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 21, name: "family_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServiceFilterReq {
    return new EquationsReplaceablesServiceFilterReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceFilterReq {
    return new EquationsReplaceablesServiceFilterReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceFilterReq {
    return new EquationsReplaceablesServiceFilterReq().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServiceFilterReq | PlainMessage<EquationsReplaceablesServiceFilterReq> | undefined, b: EquationsReplaceablesServiceFilterReq | PlainMessage<EquationsReplaceablesServiceFilterReq> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServiceFilterReq, a, b);
  }
}

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Genesis.EquationsReplaceablesServiceSearchAllReq
 */
export class EquationsReplaceablesServiceSearchAllReq extends Message<EquationsReplaceablesServiceSearchAllReq> {
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.EQUATION_REPLACEABLE_SORT_KEY sort_key = 5;
   */
  sortKey = EQUATION_REPLACEABLE_SORT_KEY.EQUATION_REPLACEABLE_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  constructor(data?: PartialMessage<EquationsReplaceablesServiceSearchAllReq>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.EquationsReplaceablesServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) },
    { no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(EQUATION_REPLACEABLE_SORT_KEY) },
    { no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) },
    { no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EquationsReplaceablesServiceSearchAllReq {
    return new EquationsReplaceablesServiceSearchAllReq().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceSearchAllReq {
    return new EquationsReplaceablesServiceSearchAllReq().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EquationsReplaceablesServiceSearchAllReq {
    return new EquationsReplaceablesServiceSearchAllReq().fromJsonString(jsonString, options);
  }

  static equals(a: EquationsReplaceablesServiceSearchAllReq | PlainMessage<EquationsReplaceablesServiceSearchAllReq> | undefined, b: EquationsReplaceablesServiceSearchAllReq | PlainMessage<EquationsReplaceablesServiceSearchAllReq> | undefined): boolean {
    return proto3.util.equals(EquationsReplaceablesServiceSearchAllReq, a, b);
  }
}

