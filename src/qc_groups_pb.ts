// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file qc_groups.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type ***REMOVED*** BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage ***REMOVED*** from "@bufbuild/protobuf";
import ***REMOVED*** Message, proto3, protoInt64 ***REMOVED*** from "@bufbuild/protobuf";
import ***REMOVED*** FormFieldDatum, FormFieldDatumCreateRequest ***REMOVED*** from "./forms_pb.js";
import ***REMOVED*** ApprovalMetadata, EmployeeMetadata, LogbookLogConciseSLC, SORT_ORDER, STANDARD_LIFECYCLE_STATUS ***REMOVED*** from "./base_pb.js";

/**
 *
 * Describes the available input types for a qc group item (with possible vbalues being number-absolute, number-percentage, text-input, text-dropdown)
 *
 * @generated from enum Genesis.QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE
 */
export enum QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE ***REMOVED***
  /**
   * Acceptable value type is an absolute number (with min and max defined in number_min_value and number_max_value)
   *
   * @generated from enum value: QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED = 0;
   */
  QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED = 0,

  /**
   * Acceptable value type is a percentage
   *
   * @generated from enum value: QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_PERCENTAGE = 1;
   */
  QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_PERCENTAGE = 1,

  /**
   * Acceptable value type is a textual input
   *
   * @generated from enum value: QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_TEXT_INPUT = 2;
   */
  QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_TEXT_INPUT = 2,

  /**
   * Acceptable value type is a dropdown (from the values as defined in text_values)
   *
   * @generated from enum value: QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_TEXT_DROPDOWN = 3;
   */
  QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_TEXT_DROPDOWN = 3,
***REMOVED***
// Retrieve enum metadata with: proto3.getEnumType(QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE)
proto3.util.setEnumType(QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE, "Genesis.QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE", [
  ***REMOVED*** no: 0, name: "QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED" ***REMOVED***,
  ***REMOVED*** no: 1, name: "QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_PERCENTAGE" ***REMOVED***,
  ***REMOVED*** no: 2, name: "QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_TEXT_INPUT" ***REMOVED***,
  ***REMOVED*** no: 3, name: "QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_TEXT_DROPDOWN" ***REMOVED***,
]);

/**
 *
 * Describes the available sort keys
 *
 * @generated from enum Genesis.QC_GROUP_SORT_KEY
 */
export enum QC_GROUP_SORT_KEY ***REMOVED***
  /**
   * Fetch ordered results by id
   *
   * @generated from enum value: QC_GROUP_SORT_KEY_ID_UNSPECIFIED = 0;
   */
  QC_GROUP_SORT_KEY_ID_UNSPECIFIED = 0,

  /**
   * Fetch ordered results by the creation timestamp
   *
   * @generated from enum value: QC_GROUP_SORT_KEY_CREATED_AT = 1;
   */
  QC_GROUP_SORT_KEY_CREATED_AT = 1,

  /**
   * Fetch ordered results by the modified timestamp
   *
   * @generated from enum value: QC_GROUP_SORT_KEY_MODIFIED_AT = 2;
   */
  QC_GROUP_SORT_KEY_MODIFIED_AT = 2,

  /**
   * Fetch ordered results by the approved on timestamp
   *
   * @generated from enum value: QC_GROUP_SORT_KEY_APPROVED_ON = 3;
   */
  QC_GROUP_SORT_KEY_APPROVED_ON = 3,

  /**
   * Fetch ordered results by the approved by field
   *
   * @generated from enum value: QC_GROUP_SORT_KEY_APPROVED_BY = 4;
   */
  QC_GROUP_SORT_KEY_APPROVED_BY = 4,

  /**
   * Fetch ordered results by the approver's role ID
   *
   * @generated from enum value: QC_GROUP_SORT_KEY_APPROVER_ROLE_ID = 5;
   */
  QC_GROUP_SORT_KEY_APPROVER_ROLE_ID = 5,

  /**
   * Fetch ordered results by the approver's completed on timestamp
   *
   * @generated from enum value: QC_GROUP_SORT_KEY_COMPLETED_ON = 6;
   */
  QC_GROUP_SORT_KEY_COMPLETED_ON = 6,

  /**
   * Fetch ordered results by the name
   *
   * @generated from enum value: QC_GROUP_SORT_KEY_NAME = 10;
   */
  QC_GROUP_SORT_KEY_NAME = 10,
***REMOVED***
// Retrieve enum metadata with: proto3.getEnumType(QC_GROUP_SORT_KEY)
proto3.util.setEnumType(QC_GROUP_SORT_KEY, "Genesis.QC_GROUP_SORT_KEY", [
  ***REMOVED*** no: 0, name: "QC_GROUP_SORT_KEY_ID_UNSPECIFIED" ***REMOVED***,
  ***REMOVED*** no: 1, name: "QC_GROUP_SORT_KEY_CREATED_AT" ***REMOVED***,
  ***REMOVED*** no: 2, name: "QC_GROUP_SORT_KEY_MODIFIED_AT" ***REMOVED***,
  ***REMOVED*** no: 3, name: "QC_GROUP_SORT_KEY_APPROVED_ON" ***REMOVED***,
  ***REMOVED*** no: 4, name: "QC_GROUP_SORT_KEY_APPROVED_BY" ***REMOVED***,
  ***REMOVED*** no: 5, name: "QC_GROUP_SORT_KEY_APPROVER_ROLE_ID" ***REMOVED***,
  ***REMOVED*** no: 6, name: "QC_GROUP_SORT_KEY_COMPLETED_ON" ***REMOVED***,
  ***REMOVED*** no: 10, name: "QC_GROUP_SORT_KEY_NAME" ***REMOVED***,
]);

/**
 *
 * Describes the parameters necessary to create a record
 *
 * @generated from message Genesis.QCGroupsServiceCreateRequest
 */
export class QCGroupsServiceCreateRequest extends Message<QCGroupsServiceCreateRequest> ***REMOVED***
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 2;
   */
  userComment = "";

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the qc group
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The qc group code
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The description of the qc group
   *
   * @generated from field: string description = 13;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<QCGroupsServiceCreateRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServiceCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServiceCreateRequest ***REMOVED***
    return new QCGroupsServiceCreateRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServiceCreateRequest ***REMOVED***
    return new QCGroupsServiceCreateRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServiceCreateRequest ***REMOVED***
    return new QCGroupsServiceCreateRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServiceCreateRequest | PlainMessage<QCGroupsServiceCreateRequest> | undefined, b: QCGroupsServiceCreateRequest | PlainMessage<QCGroupsServiceCreateRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServiceCreateRequest, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the parameters necessary to update a record
 *
 * @generated from message Genesis.QCGroupsServiceUpdateRequest
 */
export class QCGroupsServiceUpdateRequest extends Message<QCGroupsServiceUpdateRequest> ***REMOVED***
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record that needs to be updated
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
   *
   * @generated from field: bool notify_users = 3;
   */
  notifyUsers = false;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the qc group
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The qc group code
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The description of the qc group
   *
   * @generated from field: string description = 13;
   */
  description = "";

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatumCreateRequest form_data = 30;
   */
  formData: FormFieldDatumCreateRequest[] = [];

  constructor(data?: PartialMessage<QCGroupsServiceUpdateRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServiceUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "notify_users", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "form_data", kind: "message", T: FormFieldDatumCreateRequest, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServiceUpdateRequest ***REMOVED***
    return new QCGroupsServiceUpdateRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServiceUpdateRequest ***REMOVED***
    return new QCGroupsServiceUpdateRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServiceUpdateRequest ***REMOVED***
    return new QCGroupsServiceUpdateRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServiceUpdateRequest | PlainMessage<QCGroupsServiceUpdateRequest> | undefined, b: QCGroupsServiceUpdateRequest | PlainMessage<QCGroupsServiceUpdateRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServiceUpdateRequest, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the parameters that are part of a standard response
 *
 * @generated from message Genesis.QCGroup
 */
export class QCGroup extends Message<QCGroup> ***REMOVED***
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this qc group
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * The status of this qc group
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 4;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Stores the logs of every operation performed on this qc group
   *
   * @generated from field: repeated Genesis.LogbookLogConciseSLC logs = 5;
   */
  logs: LogbookLogConciseSLC[] = [];

  /**
   * The timestamp of when this qc group was marked as completed
   *
   * @generated from field: int64 completed_on = 6;
   */
  completedOn = protoInt64.zero;

  /**
   * The associated vault folder ID
   *
   * @generated from field: int64 vault_folder_id = 9;
   */
  vaultFolderId = protoInt64.zero;

  /**
   * The name of the qc group
   *
   * @generated from field: string name = 10;
   */
  name = "";

  /**
   * The qc group code
   *
   * @generated from field: string code = 11;
   */
  code = "";

  /**
   * The description of the qc group
   *
   * @generated from field: string description = 13;
   */
  description = "";

  /**
   * The list of associated qc group params
   *
   * @generated from field: repeated Genesis.QCGroupItem list = 20;
   */
  list: QCGroupItem[] = [];

  /**
   * The list of dynamic forms
   *
   * @generated from field: repeated Genesis.FormFieldDatum form_data = 30;
   */
  formData: FormFieldDatum[] = [];

  constructor(data?: PartialMessage<QCGroup>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "metadata", kind: "message", T: EmployeeMetadata ***REMOVED***,
    ***REMOVED*** no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata ***REMOVED***,
    ***REMOVED*** no: 4, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 5, name: "logs", kind: "message", T: LogbookLogConciseSLC, repeated: true ***REMOVED***,
    ***REMOVED*** no: 6, name: "completed_on", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 9, name: "vault_folder_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 20, name: "list", kind: "message", T: QCGroupItem, repeated: true ***REMOVED***,
    ***REMOVED*** no: 30, name: "form_data", kind: "message", T: FormFieldDatum, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroup ***REMOVED***
    return new QCGroup().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroup ***REMOVED***
    return new QCGroup().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroup ***REMOVED***
    return new QCGroup().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroup | PlainMessage<QCGroup> | undefined, b: QCGroup | PlainMessage<QCGroup> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroup, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the parameters required to add a param to a qc group
 *
 * @generated from message Genesis.QCGroupsServiceItemCreateRequest
 */
export class QCGroupsServiceItemCreateRequest extends Message<QCGroupsServiceItemCreateRequest> ***REMOVED***
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * Stores the ID of the qc group
   *
   * @generated from field: int64 qc_group_id = 10;
   */
  qcGroupId = protoInt64.zero;

  /**
   * The ID of the qc param that is a part of the qc group
   *
   * @generated from field: int64 qc_param_id = 11;
   */
  qcParamId = protoInt64.zero;

  /**
   * The ID of the associated unit of material
   *
   * @generated from field: int64 uom_id = 12;
   */
  uomId = protoInt64.zero;

  /**
   * The acceptable value type of the item
   *
   * @generated from field: Genesis.QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE acceptable_value_type = 20;
   */
  acceptableValueType = QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE.QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;

  /**
   * The acceptable value (in cents) in case the acceptable value type is number-absolute or number-percentage
   *
   * @generated from field: int64 number_acceptable_value = 21;
   */
  numberAcceptableValue = protoInt64.zero;

  /**
   * The relative lower bound (in cents) of the number_acceptable_value that serves as a reference point for the test
   *
   * @generated from field: int64 number_relative_lower_bound = 22;
   */
  numberRelativeLowerBound = protoInt64.zero;

  /**
   * The relative upper bound (in cents) of the number_acceptable_value that serves as a reference point for the test
   *
   * @generated from field: int64 number_relative_upper_bound = 23;
   */
  numberRelativeUpperBound = protoInt64.zero;

  /**
   * The list of values that are acceptable in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_acceptable_values = 30;
   */
  textAcceptableValues: string[] = [];

  /**
   * The list of values that are acceptable (but with deviation) in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_acceptable_values_with_deviation = 31;
   */
  textAcceptableValuesWithDeviation: string[] = [];

  /**
   * The list of unacceptable values in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_unacceptable_values = 32;
   */
  textUnacceptableValues: string[] = [];

  /**
   * An optional description
   *
   * @generated from field: string description = 40;
   */
  description = "";

  constructor(data?: PartialMessage<QCGroupsServiceItemCreateRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServiceItemCreateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "qc_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "qc_param_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 20, name: "acceptable_value_type", kind: "enum", T: proto3.getEnumType(QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE) ***REMOVED***,
    ***REMOVED*** no: 21, name: "number_acceptable_value", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 22, name: "number_relative_lower_bound", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 23, name: "number_relative_upper_bound", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "text_acceptable_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 31, name: "text_acceptable_values_with_deviation", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 32, name: "text_unacceptable_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 40, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServiceItemCreateRequest ***REMOVED***
    return new QCGroupsServiceItemCreateRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServiceItemCreateRequest ***REMOVED***
    return new QCGroupsServiceItemCreateRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServiceItemCreateRequest ***REMOVED***
    return new QCGroupsServiceItemCreateRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServiceItemCreateRequest | PlainMessage<QCGroupsServiceItemCreateRequest> | undefined, b: QCGroupsServiceItemCreateRequest | PlainMessage<QCGroupsServiceItemCreateRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServiceItemCreateRequest, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the parameters required to update a param in a qc group
 *
 * @generated from message Genesis.QCGroupsServiceItemUpdateRequest
 */
export class QCGroupsServiceItemUpdateRequest extends Message<QCGroupsServiceItemUpdateRequest> ***REMOVED***
  /**
   * Stores any comment that the user might add during this operation
   *
   * @generated from field: string user_comment = 1;
   */
  userComment = "";

  /**
   * The ID of the record
   *
   * @generated from field: int64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * The acceptable value type of the item
   *
   * @generated from field: Genesis.QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE acceptable_value_type = 20;
   */
  acceptableValueType = QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE.QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;

  /**
   * The acceptable value (in cents) in case the acceptable value type is number-absolute or number-percentage
   *
   * @generated from field: int64 number_acceptable_value = 21;
   */
  numberAcceptableValue = protoInt64.zero;

  /**
   * The relative lower bound (in cents) of the number_acceptable_value that serves as a reference point for the test
   *
   * @generated from field: int64 number_relative_lower_bound = 22;
   */
  numberRelativeLowerBound = protoInt64.zero;

  /**
   * The relative upper bound (in cents) of the number_acceptable_value that serves as a reference point for the test
   *
   * @generated from field: int64 number_relative_upper_bound = 23;
   */
  numberRelativeUpperBound = protoInt64.zero;

  /**
   * The list of values that are acceptable in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_acceptable_values = 30;
   */
  textAcceptableValues: string[] = [];

  /**
   * The list of values that are acceptable (but with deviation) in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_acceptable_values_with_deviation = 31;
   */
  textAcceptableValuesWithDeviation: string[] = [];

  /**
   * The list of unacceptable values in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_unacceptable_values = 32;
   */
  textUnacceptableValues: string[] = [];

  /**
   * An optional description
   *
   * @generated from field: string description = 40;
   */
  description = "";

  constructor(data?: PartialMessage<QCGroupsServiceItemUpdateRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServiceItemUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 20, name: "acceptable_value_type", kind: "enum", T: proto3.getEnumType(QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE) ***REMOVED***,
    ***REMOVED*** no: 21, name: "number_acceptable_value", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 22, name: "number_relative_lower_bound", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 23, name: "number_relative_upper_bound", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "text_acceptable_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 31, name: "text_acceptable_values_with_deviation", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 32, name: "text_unacceptable_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 40, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServiceItemUpdateRequest ***REMOVED***
    return new QCGroupsServiceItemUpdateRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServiceItemUpdateRequest ***REMOVED***
    return new QCGroupsServiceItemUpdateRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServiceItemUpdateRequest ***REMOVED***
    return new QCGroupsServiceItemUpdateRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServiceItemUpdateRequest | PlainMessage<QCGroupsServiceItemUpdateRequest> | undefined, b: QCGroupsServiceItemUpdateRequest | PlainMessage<QCGroupsServiceItemUpdateRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServiceItemUpdateRequest, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the parameters that constitute a param associated to a qc group
 *
 * @generated from message Genesis.QCGroupItem
 */
export class QCGroupItem extends Message<QCGroupItem> ***REMOVED***
  /**
   * Stores a globally unique entity UUID. This will be set at the organization level
   *
   * @generated from field: string entity_uuid = 1;
   */
  entityUuid = "";

  /**
   * Stores the metadata of this qc group
   *
   * @generated from field: Genesis.EmployeeMetadata metadata = 2;
   */
  metadata?: EmployeeMetadata;

  /**
   * Stores the approval metadata
   *
   * @generated from field: Genesis.ApprovalMetadata approval_metadata = 3;
   */
  approvalMetadata?: ApprovalMetadata;

  /**
   * Denotes if this record requires approval (or has been approved)
   *
   * @generated from field: bool need_approval = 4;
   */
  needApproval = false;

  /**
   * Stores any comment that the user might have added during an operation
   *
   * @generated from field: string user_comment = 5;
   */
  userComment = "";

  /**
   * Stores the ID of the qc group
   *
   * @generated from field: int64 qc_group_id = 10;
   */
  qcGroupId = protoInt64.zero;

  /**
   * The ID of the qc param that is a part of the qc group
   *
   * @generated from field: int64 qc_param_id = 11;
   */
  qcParamId = protoInt64.zero;

  /**
   * The ID of the associated unit of material
   *
   * @generated from field: int64 uom_id = 12;
   */
  uomId = protoInt64.zero;

  /**
   * The acceptable value type of the item
   *
   * @generated from field: Genesis.QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE acceptable_value_type = 20;
   */
  acceptableValueType = QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE.QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE_NUMBER_ABSOLUTE_UNSPECIFIED;

  /**
   * The acceptable value (in cents) in case the acceptable value type is number-absolute or number-percentage
   *
   * @generated from field: int64 number_acceptable_value = 21;
   */
  numberAcceptableValue = protoInt64.zero;

  /**
   * The relative lower bound (in cents) of the number_acceptable_value that serves as a reference point for the test
   *
   * @generated from field: int64 number_relative_lower_bound = 22;
   */
  numberRelativeLowerBound = protoInt64.zero;

  /**
   * The relative upper bound (in cents) of the number_acceptable_value that serves as a reference point for the test
   *
   * @generated from field: int64 number_relative_upper_bound = 23;
   */
  numberRelativeUpperBound = protoInt64.zero;

  /**
   * The list of values that are acceptable in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_acceptable_values = 30;
   */
  textAcceptableValues: string[] = [];

  /**
   * The list of values that are acceptable (but with deviation) in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_acceptable_values_with_deviation = 31;
   */
  textAcceptableValuesWithDeviation: string[] = [];

  /**
   * The list of unacceptable values in case the acceptable value type is text-input or text-dropdown
   *
   * @generated from field: repeated string text_unacceptable_values = 32;
   */
  textUnacceptableValues: string[] = [];

  /**
   * An optional description
   *
   * @generated from field: string description = 40;
   */
  description = "";

  constructor(data?: PartialMessage<QCGroupItem>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "metadata", kind: "message", T: EmployeeMetadata ***REMOVED***,
    ***REMOVED*** no: 3, name: "approval_metadata", kind: "message", T: ApprovalMetadata ***REMOVED***,
    ***REMOVED*** no: 4, name: "need_approval", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 5, name: "user_comment", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "qc_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "qc_param_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "uom_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 20, name: "acceptable_value_type", kind: "enum", T: proto3.getEnumType(QC_GROUP_ITEM_ACCEPTABLE_VALUE_TYPE) ***REMOVED***,
    ***REMOVED*** no: 21, name: "number_acceptable_value", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 22, name: "number_relative_lower_bound", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 23, name: "number_relative_upper_bound", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 30, name: "text_acceptable_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 31, name: "text_acceptable_values_with_deviation", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 32, name: "text_unacceptable_values", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true ***REMOVED***,
    ***REMOVED*** no: 40, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupItem ***REMOVED***
    return new QCGroupItem().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupItem ***REMOVED***
    return new QCGroupItem().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupItem ***REMOVED***
    return new QCGroupItem().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupItem | PlainMessage<QCGroupItem> | undefined, b: QCGroupItem | PlainMessage<QCGroupItem> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupItem, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the message consisting of the list of qc groups
 *
 * @generated from message Genesis.QCGroupsList
 */
export class QCGroupsList extends Message<QCGroupsList> ***REMOVED***
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.QCGroup list = 1;
   */
  list: QCGroup[] = [];

  constructor(data?: PartialMessage<QCGroupsList>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "list", kind: "message", T: QCGroup, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsList ***REMOVED***
    return new QCGroupsList().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsList ***REMOVED***
    return new QCGroupsList().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsList ***REMOVED***
    return new QCGroupsList().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsList | PlainMessage<QCGroupsList> | undefined, b: QCGroupsList | PlainMessage<QCGroupsList> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsList, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the message consisting of the list of qc group params
 *
 * @generated from message Genesis.QCGroupsItemsList
 */
export class QCGroupsItemsList extends Message<QCGroupsItemsList> ***REMOVED***
  /**
   * List of records
   *
   * @generated from field: repeated Genesis.QCGroupItem list = 1;
   */
  list: QCGroupItem[] = [];

  constructor(data?: PartialMessage<QCGroupsItemsList>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsItemsList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "list", kind: "message", T: QCGroupItem, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsItemsList ***REMOVED***
    return new QCGroupsItemsList().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsItemsList ***REMOVED***
    return new QCGroupsItemsList().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsItemsList ***REMOVED***
    return new QCGroupsItemsList().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsItemsList | PlainMessage<QCGroupsItemsList> | undefined, b: QCGroupsItemsList | PlainMessage<QCGroupsItemsList> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsItemsList, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the parameters that are required to retrieve the history of the record
 *
 * @generated from message Genesis.QCGroupItemHistoryRequest
 */
export class QCGroupItemHistoryRequest extends Message<QCGroupItemHistoryRequest> ***REMOVED***
  /**
   * Stores the ID of the qc group
   *
   * @generated from field: int64 qc_group_id = 10;
   */
  qcGroupId = protoInt64.zero;

  /**
   * The ID of the qc param that is a part of the qc group
   *
   * @generated from field: int64 qc_param_id = 11;
   */
  qcParamId = protoInt64.zero;

  constructor(data?: PartialMessage<QCGroupItemHistoryRequest>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupItemHistoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 10, name: "qc_group_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 11, name: "qc_param_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupItemHistoryRequest ***REMOVED***
    return new QCGroupItemHistoryRequest().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupItemHistoryRequest ***REMOVED***
    return new QCGroupItemHistoryRequest().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupItemHistoryRequest ***REMOVED***
    return new QCGroupItemHistoryRequest().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupItemHistoryRequest | PlainMessage<QCGroupItemHistoryRequest> | undefined, b: QCGroupItemHistoryRequest | PlainMessage<QCGroupItemHistoryRequest> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupItemHistoryRequest, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes a pagination request to retrieve records
 *
 * @generated from message Genesis.QCGroupsServicePaginationReq
 */
export class QCGroupsServicePaginationReq extends Message<QCGroupsServicePaginationReq> ***REMOVED***
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QC_GROUP_SORT_KEY sort_key = 5;
   */
  sortKey = QC_GROUP_SORT_KEY.QC_GROUP_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The status of this qc group
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 6;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  constructor(data?: PartialMessage<QCGroupsServicePaginationReq>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServicePaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QC_GROUP_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServicePaginationReq ***REMOVED***
    return new QCGroupsServicePaginationReq().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServicePaginationReq ***REMOVED***
    return new QCGroupsServicePaginationReq().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServicePaginationReq ***REMOVED***
    return new QCGroupsServicePaginationReq().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServicePaginationReq | PlainMessage<QCGroupsServicePaginationReq> | undefined, b: QCGroupsServicePaginationReq | PlainMessage<QCGroupsServicePaginationReq> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServicePaginationReq, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the response to a pagination request
 *
 * @generated from message Genesis.QCGroupsServicePaginationResponse
 */
export class QCGroupsServicePaginationResponse extends Message<QCGroupsServicePaginationResponse> ***REMOVED***
  /**
   * The number of records in this payload
   *
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  /**
   * The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
   *
   * @generated from field: int64 offset = 2;
   */
  offset = protoInt64.zero;

  /**
   * The total number of records that are available
   *
   * @generated from field: int64 total = 3;
   */
  total = protoInt64.zero;

  /**
   * The list of records
   *
   * @generated from field: repeated Genesis.QCGroup payload = 4;
   */
  payload: QCGroup[] = [];

  constructor(data?: PartialMessage<QCGroupsServicePaginationResponse>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServicePaginationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "total", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "payload", kind: "message", T: QCGroup, repeated: true ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServicePaginationResponse ***REMOVED***
    return new QCGroupsServicePaginationResponse().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServicePaginationResponse ***REMOVED***
    return new QCGroupsServicePaginationResponse().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServicePaginationResponse ***REMOVED***
    return new QCGroupsServicePaginationResponse().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServicePaginationResponse | PlainMessage<QCGroupsServicePaginationResponse> | undefined, b: QCGroupsServicePaginationResponse | PlainMessage<QCGroupsServicePaginationResponse> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServicePaginationResponse, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes a pagination request to retrieve records associated with an entity UUID
 *
 * @generated from message Genesis.QCGroupsServiceEntityPaginationReq
 */
export class QCGroupsServiceEntityPaginationReq extends Message<QCGroupsServiceEntityPaginationReq> ***REMOVED***
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QC_GROUP_SORT_KEY sort_key = 5;
   */
  sortKey = QC_GROUP_SORT_KEY.QC_GROUP_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  constructor(data?: PartialMessage<QCGroupsServiceEntityPaginationReq>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServiceEntityPaginationReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QC_GROUP_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServiceEntityPaginationReq ***REMOVED***
    return new QCGroupsServiceEntityPaginationReq().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServiceEntityPaginationReq ***REMOVED***
    return new QCGroupsServiceEntityPaginationReq().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServiceEntityPaginationReq ***REMOVED***
    return new QCGroupsServiceEntityPaginationReq().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServiceEntityPaginationReq | PlainMessage<QCGroupsServiceEntityPaginationReq> | undefined, b: QCGroupsServiceEntityPaginationReq | PlainMessage<QCGroupsServiceEntityPaginationReq> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServiceEntityPaginationReq, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the base request payload of a filter search
 *
 * @generated from message Genesis.QCGroupsServiceFilterReq
 */
export class QCGroupsServiceFilterReq extends Message<QCGroupsServiceFilterReq> ***REMOVED***
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QC_GROUP_SORT_KEY sort_key = 5;
   */
  sortKey = QC_GROUP_SORT_KEY.QC_GROUP_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The minimum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_start = 6;
   */
  creationTimestampStart = protoInt64.zero;

  /**
   * The maximum timestamp that needs to be considered to filter by creation
   *
   * @generated from field: int64 creation_timestamp_end = 7;
   */
  creationTimestampEnd = protoInt64.zero;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 8;
   */
  entityUuid = "";

  /**
   * The status of this qc group
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * The start range of approved timestamp
   *
   * @generated from field: int64 approved_on_start = 11;
   */
  approvedOnStart = protoInt64.zero;

  /**
   * The end range of approved timestamp
   *
   * @generated from field: int64 approved_on_end = 12;
   */
  approvedOnEnd = protoInt64.zero;

  /**
   * The ID of the approver
   *
   * @generated from field: int64 approved_by_user_id = 13;
   */
  approvedByUserId = protoInt64.zero;

  /**
   * The role ID of the approver
   *
   * @generated from field: int64 approver_role_id = 14;
   */
  approverRoleId = protoInt64.zero;

  /**
   * The start range of completed timestamp
   *
   * @generated from field: int64 completed_on_start = 15;
   */
  completedOnStart = protoInt64.zero;

  /**
   * The end range of completed timestamp
   *
   * @generated from field: int64 completed_on_end = 16;
   */
  completedOnEnd = protoInt64.zero;

  /**
   * The name of the qc group
   *
   * @generated from field: string name = 20;
   */
  name = "";

  constructor(data?: PartialMessage<QCGroupsServiceFilterReq>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServiceFilterReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QC_GROUP_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "creation_timestamp_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 7, name: "creation_timestamp_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 8, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 11, name: "approved_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 12, name: "approved_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 13, name: "approved_by_user_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 14, name: "approver_role_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 15, name: "completed_on_start", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 16, name: "completed_on_end", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 20, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServiceFilterReq ***REMOVED***
    return new QCGroupsServiceFilterReq().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServiceFilterReq ***REMOVED***
    return new QCGroupsServiceFilterReq().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServiceFilterReq ***REMOVED***
    return new QCGroupsServiceFilterReq().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServiceFilterReq | PlainMessage<QCGroupsServiceFilterReq> | undefined, b: QCGroupsServiceFilterReq | PlainMessage<QCGroupsServiceFilterReq> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServiceFilterReq, a, b);
  ***REMOVED***
***REMOVED***

/**
 *
 * Describes the request payload for performing a generic search operation on records
 *
 * @generated from message Genesis.QCGroupsServiceSearchAllReq
 */
export class QCGroupsServiceSearchAllReq extends Message<QCGroupsServiceSearchAllReq> ***REMOVED***
  /**
   * If true, then returns only active records. If false, then returns only inactive records
   *
   * @generated from field: bool is_active = 1;
   */
  isActive = false;

  /**
   * The number of records that need to be sent in the response. Returns all records if it is set to -1
   *
   * @generated from field: int64 count = 2;
   */
  count = protoInt64.zero;

  /**
   * The number that need to be offset by before fetching the records
   *
   * @generated from field: int64 offset = 3;
   */
  offset = protoInt64.zero;

  /**
   * The sort order that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.SORT_ORDER sort_order = 4;
   */
  sortOrder = SORT_ORDER.ASCENDING_UNSPECIFIED;

  /**
   * The sort key that is to be used to fetch the pagination response
   *
   * @generated from field: Genesis.QC_GROUP_SORT_KEY sort_key = 5;
   */
  sortKey = QC_GROUP_SORT_KEY.QC_GROUP_SORT_KEY_ID_UNSPECIFIED;

  /**
   * The entity UUID that is to be used to filter records
   *
   * @generated from field: string entity_uuid = 6;
   */
  entityUuid = "";

  /**
   * Limit the search space to the given status
   *
   * @generated from field: Genesis.STANDARD_LIFECYCLE_STATUS status = 10;
   */
  status = STANDARD_LIFECYCLE_STATUS.PREVERIFY_UNSPECIFIED;

  /**
   * Describes the key with which the search operation needs to be performed
   *
   * @generated from field: string search_key = 11;
   */
  searchKey = "";

  constructor(data?: PartialMessage<QCGroupsServiceSearchAllReq>) ***REMOVED***
    super();
    proto3.util.initPartial(data, this);
  ***REMOVED***

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "Genesis.QCGroupsServiceSearchAllReq";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    ***REMOVED*** no: 1, name: "is_active", kind: "scalar", T: 8 /* ScalarType.BOOL */ ***REMOVED***,
    ***REMOVED*** no: 2, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 3, name: "offset", kind: "scalar", T: 3 /* ScalarType.INT64 */ ***REMOVED***,
    ***REMOVED*** no: 4, name: "sort_order", kind: "enum", T: proto3.getEnumType(SORT_ORDER) ***REMOVED***,
    ***REMOVED*** no: 5, name: "sort_key", kind: "enum", T: proto3.getEnumType(QC_GROUP_SORT_KEY) ***REMOVED***,
    ***REMOVED*** no: 6, name: "entity_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
    ***REMOVED*** no: 10, name: "status", kind: "enum", T: proto3.getEnumType(STANDARD_LIFECYCLE_STATUS) ***REMOVED***,
    ***REMOVED*** no: 11, name: "search_key", kind: "scalar", T: 9 /* ScalarType.STRING */ ***REMOVED***,
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QCGroupsServiceSearchAllReq ***REMOVED***
    return new QCGroupsServiceSearchAllReq().fromBinary(bytes, options);
  ***REMOVED***

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QCGroupsServiceSearchAllReq ***REMOVED***
    return new QCGroupsServiceSearchAllReq().fromJson(jsonValue, options);
  ***REMOVED***

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QCGroupsServiceSearchAllReq ***REMOVED***
    return new QCGroupsServiceSearchAllReq().fromJsonString(jsonString, options);
  ***REMOVED***

  static equals(a: QCGroupsServiceSearchAllReq | PlainMessage<QCGroupsServiceSearchAllReq> | undefined, b: QCGroupsServiceSearchAllReq | PlainMessage<QCGroupsServiceSearchAllReq> | undefined): boolean ***REMOVED***
    return proto3.util.equals(QCGroupsServiceSearchAllReq, a, b);
  ***REMOVED***
***REMOVED***

