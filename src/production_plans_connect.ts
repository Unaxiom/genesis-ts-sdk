// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=ts"
// @generated from file production_plans.proto (package Genesis, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ProductionPlan, ProductionPlanItem, ProductionPlanItemHistoryRequest, ProductionPlanItemProspectiveInfoRequest, ProductionPlansItemsList, ProductionPlansList, ProductionPlansServiceAutofillRequest, ProductionPlansServiceCreateRequest, ProductionPlansServiceEntityPaginationReq, ProductionPlansServiceFilterReq, ProductionPlansServiceItemCreateRequest, ProductionPlansServiceItemUpdateRequest, ProductionPlansServicePaginationReq, ProductionPlansServicePaginationResponse, ProductionPlansServiceSearchAllReq, ProductionPlansServiceUpdateRequest } from "./production_plans_pb.js";
import { ActiveStatus, BooleanResponse, CountInSLCStatusRequest, CountResponse, Identifier, IdentifierUUID, IdentifierWithEmailAttributes, IdentifierWithSearchKey, IdentifierWithUserComment, ReorderItemsRequest } from "./base_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
import { FamiliesList } from "./families_pb.js";

/**
 *
 * Describes the common methods applicable on each production plan
 *
 * @generated from service Genesis.ProductionPlansService
 */
export const ProductionPlansService = {
  typeName: "Genesis.ProductionPlansService",
  methods: {
    /**
     * Create and send for verification
     *
     * @generated from rpc Genesis.ProductionPlansService.Create
     */
    create: {
      name: "Create",
      I: ProductionPlansServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Create and save as draft
     *
     * @generated from rpc Genesis.ProductionPlansService.Draft
     */
    draft: {
      name: "Draft",
      I: ProductionPlansServiceCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update draft
     *
     * @generated from rpc Genesis.ProductionPlansService.DraftUpdate
     */
    draftUpdate: {
      name: "DraftUpdate",
      I: ProductionPlansServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send for verification
     *
     * @generated from rpc Genesis.ProductionPlansService.SendForVerification
     */
    sendForVerification: {
      name: "SendForVerification",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Verify
     *
     * @generated from rpc Genesis.ProductionPlansService.Verify
     */
    verify: {
      name: "Verify",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve
     *
     * @generated from rpc Genesis.ProductionPlansService.Approve
     */
    approve: {
      name: "Approve",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send For Revision
     *
     * @generated from rpc Genesis.ProductionPlansService.SendForRevision
     */
    sendForRevision: {
      name: "SendForRevision",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Update revision
     *
     * @generated from rpc Genesis.ProductionPlansService.RevisionUpdate
     */
    revisionUpdate: {
      name: "RevisionUpdate",
      I: ProductionPlansServiceUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Halt
     *
     * @generated from rpc Genesis.ProductionPlansService.Halt
     */
    halt: {
      name: "Halt",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Discard
     *
     * @generated from rpc Genesis.ProductionPlansService.Discard
     */
    discard: {
      name: "Discard",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Restore
     *
     * @generated from rpc Genesis.ProductionPlansService.Restore
     */
    restore: {
      name: "Restore",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Complete
     *
     * @generated from rpc Genesis.ProductionPlansService.Complete
     */
    complete: {
      name: "Complete",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Repeat
     *
     * @generated from rpc Genesis.ProductionPlansService.Repeat
     */
    repeat: {
      name: "Repeat",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reopen
     *
     * @generated from rpc Genesis.ProductionPlansService.Reopen
     */
    reopen: {
      name: "Reopen",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Add comment
     *
     * @generated from rpc Genesis.ProductionPlansService.CommentAdd
     */
    commentAdd: {
      name: "CommentAdd",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Send Email
     *
     * @generated from rpc Genesis.ProductionPlansService.SendEmail
     */
    sendEmail: {
      name: "SendEmail",
      I: IdentifierWithEmailAttributes,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Autofill the production plan
     *
     * @generated from rpc Genesis.ProductionPlansService.Autofill
     */
    autofill: {
      name: "Autofill",
      I: ProductionPlansServiceAutofillRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Checks if the Production Plan can be marked as completed
     *
     * @generated from rpc Genesis.ProductionPlansService.IsCompletable
     */
    isCompletable: {
      name: "IsCompletable",
      I: Identifier,
      O: BooleanResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add an item to a production plan
     *
     * @generated from rpc Genesis.ProductionPlansService.AddProductionPlanItem
     */
    addProductionPlanItem: {
      name: "AddProductionPlanItem",
      I: ProductionPlansServiceItemCreateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Modify an item in a production plan
     *
     * @generated from rpc Genesis.ProductionPlansService.ModifyProductionPlanItem
     */
    modifyProductionPlanItem: {
      name: "ModifyProductionPlanItem",
      I: ProductionPlansServiceItemUpdateRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Approve an item in a production plan
     *
     * @generated from rpc Genesis.ProductionPlansService.ApproveProductionPlanItem
     */
    approveProductionPlanItem: {
      name: "ApproveProductionPlanItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an item in a production plan
     *
     * @generated from rpc Genesis.ProductionPlansService.DeleteProductionPlanItem
     */
    deleteProductionPlanItem: {
      name: "DeleteProductionPlanItem",
      I: IdentifierWithUserComment,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * Reorder items in a production plan
     *
     * @generated from rpc Genesis.ProductionPlansService.ReorderProductionPlanItems
     */
    reorderProductionPlanItems: {
      name: "ReorderProductionPlanItems",
      I: ReorderItemsRequest,
      O: Identifier,
      kind: MethodKind.Unary,
    },
    /**
     * View Production Plan Item by ID
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewProductionPlanItemByID
     */
    viewProductionPlanItemByID: {
      name: "ViewProductionPlanItemByID",
      I: Identifier,
      O: ProductionPlanItem,
      kind: MethodKind.Unary,
    },
    /**
     * View approved production plan items for given production plan ID
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewApprovedProductionPlanItems
     */
    viewApprovedProductionPlanItems: {
      name: "ViewApprovedProductionPlanItems",
      I: IdentifierWithSearchKey,
      O: ProductionPlansItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View unapproved production plan items for given production plan ID
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewUnapprovedProductionPlanItems
     */
    viewUnapprovedProductionPlanItems: {
      name: "ViewUnapprovedProductionPlanItems",
      I: IdentifierWithSearchKey,
      O: ProductionPlansItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View the history of the production plan item
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewProductionPlanItemHistory
     */
    viewProductionPlanItemHistory: {
      name: "ViewProductionPlanItemHistory",
      I: ProductionPlanItemHistoryRequest,
      O: ProductionPlansItemsList,
      kind: MethodKind.Unary,
    },
    /**
     * View by ID
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewByID
     */
    viewByID: {
      name: "ViewByID",
      I: Identifier,
      O: ProductionPlan,
      kind: MethodKind.Unary,
    },
    /**
     * View all
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewAll
     */
    viewAll: {
      name: "ViewAll",
      I: ActiveStatus,
      O: ProductionPlansList,
      kind: MethodKind.Unary,
    },
    /**
     * View all with the given entity UUID
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewAllForEntityUUID
     */
    viewAllForEntityUUID: {
      name: "ViewAllForEntityUUID",
      I: IdentifierUUID,
      O: ProductionPlansList,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewWithPagination
     */
    viewWithPagination: {
      name: "ViewWithPagination",
      I: ProductionPlansServicePaginationReq,
      O: ProductionPlansServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View with pagination with the given entity UUID
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewWithPaginationForEntityUUID
     */
    viewWithPaginationForEntityUUID: {
      name: "ViewWithPaginationForEntityUUID",
      I: ProductionPlansServiceEntityPaginationReq,
      O: ProductionPlansServicePaginationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective families for the given production plan
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewProspectiveFamilies
     */
    viewProspectiveFamilies: {
      name: "ViewProspectiveFamilies",
      I: IdentifierWithSearchKey,
      O: FamiliesList,
      kind: MethodKind.Unary,
    },
    /**
     * View prospective production plan item info for the given family ID and production plan ID
     *
     * @generated from rpc Genesis.ProductionPlansService.ViewProspectiveProductionPlanItem
     */
    viewProspectiveProductionPlanItem: {
      name: "ViewProspectiveProductionPlanItem",
      I: ProductionPlanItemProspectiveInfoRequest,
      O: ProductionPlansServiceItemCreateRequest,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given search key
     *
     * @generated from rpc Genesis.ProductionPlansService.SearchAll
     */
    searchAll: {
      name: "SearchAll",
      I: ProductionPlansServiceSearchAllReq,
      O: ProductionPlansList,
      kind: MethodKind.Unary,
    },
    /**
     * View all that match the given filter criteria
     *
     * @generated from rpc Genesis.ProductionPlansService.Filter
     */
    filter: {
      name: "Filter",
      I: ProductionPlansServiceFilterReq,
      O: ProductionPlansList,
      kind: MethodKind.Unary,
    },
    /**
     * Count in status
     *
     * @generated from rpc Genesis.ProductionPlansService.CountInStatus
     */
    countInStatus: {
      name: "CountInStatus",
      I: CountInSLCStatusRequest,
      O: CountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

